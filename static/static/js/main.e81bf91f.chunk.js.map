{"version":3,"sources":["components/ArticleComponent.module.css","components/BoardComponent.module.css","containers/ShowOpLogModal.module.css","containers/ArticlePage.module.css","containers/MultiDeviceModal.module.css","containers/NameCardModal.module.css","containers/LatestPageModal.module.css","containers/RootPage.module.css","containers/SettingMenuModal.module.css","components/FriendChatComponent.module.css","containers/FirstPopupModal.module.css","containers/CreateBoardModal.module.css","containers/InviteToBoardModal.module.css","containers/ManageBoardMemberModal.module.css","components/CommentReplyListComponent.module.css","components/Empty.module.css","containers/PrivacySettingModal.module.css","components/ArticleListComponent.module.css","containers/HubPage.module.css","containers/BoardPage.module.css","containers/FriendListPage.module.css","containers/FriendChatPage.module.css","containers/CreateArticleModal.module.css","containers/EditArticleModal.module.css","components/FriendListComponent.module.css","components/NewsComponent.module.css","config.js","containers/AddDeviceScannerModal.module.css","components/BoardListComponent.module.css","containers/AddFriendModal.module.css","components/QRScannerSubmodal.module.css","components/NewsListComponent.module.css","components/Navigator.module.css","containers/ManageBoardModal.module.css","containers/AddDeviceModal.module.css","components/FriendChatBar.module.css","components/PttaiEditor.module.css","components/BoardBar.module.css","containers/AddKnownBoardModal.module.css","components/AlertComponent.module.css","components/ArticleBar.module.css","containers/ProfilePage.module.css","components/NewsBar.module.css","components/Empty.js","components/Navigator.js","constants/Constants.js","utils/utils.js","utils/utilDatetime.js","components/BoardListComponent.js","components/HubComponent.js","constants/ModalConstants.js","components/AlertComponent.js","reducers/utils.js","middleware/api.js","reducers/ServerUtils.js","reducers/HubPage.js","reducers/ModalContainer.js","utils/googleAnalytics.js","containers/HubPage.js","components/BoardBar.js","components/ArticleListComponent.js","components/BoardComponent.js","reducers/BoardPage.js","containers/BoardPage.js","components/ArticleComponent.js","components/CommentReplyListComponent.js","components/ArticleBar.js","reducers/ArticlePage.js","containers/ArticlePage.js","reducers/ProfilePage.js","containers/ProfilePage.js","components/FriendListComponent.js","components/FriendComponent.js","reducers/FriendListPage.js","containers/FriendListPage.js","components/FriendChatBar.js","components/FriendChatComponent.js","reducers/FriendChatPage.js","containers/FriendChatPage.js","reducers/CreateBoardModal.js","containers/CreateBoardModal.js","reducers/ManageBoardModal.js","containers/ManageBoardModal.js","reducers/ManageBoardMemberModal.js","containers/ManageBoardMemberModal.js","reducers/InviteToBoardModal.js","containers/InviteToBoardModal.js","reducers/App.js","reducers/CreateArticleModal.js","components/PttaiEditor.js","containers/CreateArticleModal.js","reducers/EditArticleModal.js","containers/EditArticleModal.js","components/QRScannerSubmodal.js","reducers/AddKnownBoardModal.js","containers/AddKnownBoardModal.js","reducers/NameCardModal.js","containers/NameCardModal.js","reducers/FirstPopupModal.js","containers/FirstPopupModal.js","reducers/PrivacySettingModal.js","containers/PrivacySettingModal.js","reducers/MultiDeviceModal.js","containers/MultiDeviceModal.js","reducers/AddFriendModal.js","containers/AddFriendModal.js","reducers/AddDeviceModal.js","containers/AddDeviceModal.js","reducers/AddDeviceScannerModal.js","containers/AddDeviceScannerModal.js","reducers/BoardActionModal.js","containers/BoardActionModal.js","reducers/SettingMenuModal.js","containers/SettingMenuModal.js","reducers/FriendSettingMenuModal.js","containers/FriendSettingMenuModal.js","reducers/BoardSettingMenuModal.js","containers/BoardSettingMenuModal.js","reducers/ArticleSettingMenuModal.js","containers/ArticleSettingMenuModal.js","reducers/CommentSettingMenuModal.js","containers/CommentSettingMenuModal.js","components/NewsBar.js","components/NewsListComponent.js","components/NewsComponent.js","reducers/LatestPageModal.js","containers/LatestPageModal.js","reducers/ShowOpLogModal.js","components/DropdownComponent.js","containers/ShowOpLogModal.js","containers/ModalContainer.js","reducers/RootPage.js","utils/notification.js","containers/RootPage.js","middleware/index.js","DevTools.js","reducers/index.js","registerServiceWorker.js","index.js","Routes.js","components/HubComponent.module.css","components/FriendComponent.module.css","containers/BoardActionModal.module.css","components/DropdownComponent.module.css"],"names":["module","exports","root","loading","main-content","author","edit-button","content","add-icon-container","add-icon-subcontainer","add-icon","top-bar","prev-button","prev-button-icon","title","multi-device","content-title","oplog-item","item-index","item","op-title-index","op-title","op-value-index","op-value","time","null-space","device-list","device-item","submodal-action-section","submodal-join-board-button","submodal-create-board-button","submodal-close-button","modal-action-section","submit-button","info-section","left-side","profile-picture","right-side","main-info","contact-info","other-info","profile-input","name","company","job-title","email","phone","description","qr-code","overlay","editing","action-section","menu-button","chat","no-message","user-message-item","message-item","user-message-content","user-message-content-invitation","message-content","message-content-invitation","expired","user-message-meta","message-meta","user-message-status","message-status","user-message-status-circle-pre-alive","message-status-circle-pre-alive","user-message-status-circle-alive","message-status-circle-alive","user-message-status-circle-failed","message-status-circle-failed","user-message-status-circle-post-failed","message-status-circle-post-failed","user-message-time","message-time","message-divider","message-input","message-action","loader","sign-up","profile-title","profile-input-name","signup-action","close-button","divider","sign-in","signin-action","signin-button","scan-btn-container","scan-btn","submodal-signup-container","submodal-signup","submodal-signup-title","submodal-checkmark-container","checkmark","submodal-ga-agreement","submodal-ga-agreement-item","submodal-ga-agreement-see-more","submodal-signup-profile-input","submodal-signup-action-section","submodal-signup-confirm","submodal-signup-cancel","submodal-signin-container","submodal-signin","submodal-signin-title","submodal-signin-scanner-container","submodal-qr-code-scanner","submodal-qr-code-text","submodal-signin-node-id","submodal-signin-action-section","submodal-signin-submit","submodal-signin-cancel","title-header","prev-arrow","header-text","search","title-section","title-input","invite-title","friend-list-text","no-friend-text","friend-item","list-item-author","list-item-author-pic","list-item-author-name","list-item-main","list-item-header","list-item-title","list-item-time","list-item-content","list-item-meta","list-item-invited","list-item-to-invite","modal-bar","null-prev-arrow","prev-arrow-icon","modal-title","board-name","friend-list","submit-icon-subcontainer","submit-icon","copy-space","invite-title-text","manageboard-modal-copy","list-item-selected","list-item-unselect","spinner-item","list-item","list-item-menu","list-item-menu-slider","list-item-menu-item","list-item-menu-item-text","comment-creator-profile","mask","comment-creator","comment-creator-name","comment-creator-id-prefix","comment-content","comment-content-input","comment-input","comment-content-container","comment-content-wrapper","comment-status-wrapper","comment-status","pre-alive","alive","failed","post-failed","comment-manage","comment-action-input-enter","comment-action-content-input","comment-action-icon","list-item-ellipsis","checkmark-container","ga-bar","ga-title","ga-agreement-paragraph","ga-agreement","ga-agreement-content","ga-agreement-item","ga-agreement-item-disabled","confirm","cancel","list","read","unread","list-item-blocker","no-content-message","list-item-status","list-item-status-pre-alive","list-item-status-alive","list-item-status-failed","list-item-status-post-failed","list-item-circle","list-item-author-status","list-item-author-status-circle","list-item-author-status-circle-post","list-item-description","PTTAI_API_ROOT","PTTAI_APP_ROOT","PTTAI_URL_BASE","process","GA_TRACKING_ID","slide-list","container","p-key","copy-button","text-value","helper-text","paste-area-pkey","qr-code-scanner-container","qr-code-scanner","qr-code-text","paste-area-node-id","list-item-hidden","list-item-label-green","list-item-label-yellow","list-item-title-wrapper","list-item-board-status","list-item-board-status-pre-alive","list-item-board-status-alive","list-item-board-status-failed","list-item-board-status-post-failed","list-item-space","list-item-edit-button","tab-pages-container","tab-pages","tab-pages-title","switcher-item-container","switcher-item","active-switcher-item","tab-page-container","tab-page","tab-page-submit","tab-page-cancel","qr-code-container","tab-page-node-id","submodal-wrapper","scanner-btn","scanner-btn-container","scanner-container","scanner","scanner-text","list-item-title-unread","list-item-boardname","list-item-board-tag","collapsed","content-selected","content-block","content-not-selected","tabs","inactive","tab1-icon","active","tab2-icon","tab1-text","tab2-text","edit-name","node-id","expiration","profile-pic","friend-content","job","menu-wrapper","menu","space","title-text","pttai-editor-content","upload-button","delete-button","prev-button-text","add-known-board-container","add-known-board","add-known-board-title","add-known-board-scanner-container","add-known-board-node-id","add-known-board-action-section","add-known-board-submit","add-known-board-cancel","message","close","menu-button-icon","prev-tag","caret","profile-description","profile-latest","profile-latest-active","profile-qr-code","cx","classnames","bind","styles","Empty","react_default","a","createElement","className","PureComponent","Navigator","_this$props","this","props","hubHasUnread","friendListHasUnread","onHubClicked","onFriendClicked","isChatRoom","rootClass","tabOneClass","tabTwoClass","match","url","indexOf","tabOneClasses","tabTwoClasses","onClick","react_router_dom","id","to","index_es","defaultMessage","EMPTY_ID","DEFAULT_USER_IMAGE","concat","DEFAULT_USER_NAMECARD","userImg","jobTitle","NUM_OPLOG_PER_REQ","SHOW_PTT_MASTER_TAB","SHOW_PTT_ME_TAB","SHOW_CONTENT_BOARD_TAB","SHOW_CONTENT_OPKEY_TAB","SHOW_CONTENT_MASTER_TAB","SHOW_CONTENT_MEMBER_TAB","SHOW_FRIEND_FRIEND_TAB","SHOW_FRIEND_MASTER_TAB","SHOW_FRIEND_MEMBER_TAB","SHOW_FRIEND_OPKEY_TAB","SHOW_PTT_PEERS_TAB","SHOW_CONTENT_PEERS_TAB","SHOW_FRIEND_PEERS_TAB","SHOW_LAST_ANNOUNCE_P2P_TAB","CONTENT_TYPE_TEXT","CONTENT_TYPE_IMAGE","CONTENT_TYPE_FILE","PEER_TYPE_ARRAY","PTT_ME_OP_TYPE_ARRAY","BOARD_OP_TYPE_ARRAY","FRIEND_OP_TYPE_ARRAY","STATUS_ARRAY","JOIN_STATUS_ARRAY","NODE_TYPE_ARRAY","addLocaleData","Object","toConsumableArray","locale_en","locale_zh","all_messages","zh","messages_zh","en","messages_en","language","lang","navigator","split","messages","GLOBAL_IDS","Set","getFileTemplate","file","fileClass","fileName","bytesToSize","fileSize","replace","getSummaryTemplate","rowData","extraParams","params","param","type","constants","CreatorName","boardId","sanitizeDirtyHtml","toJson","data","result","JSON","parse","e","dirtyHtml","sanitizeHtml","allowedTags","allowedAttributes","allowedClasses","li","array2Html","array","reduce","acc","each","index","fileInfo","fileId","class","size","fileType","iframe","document","srcdoc","frameborder","allowfullscreen","width","height","setAttribute","outerHTML","imageInfo","imageId","imageClass","image","src","alt","style","getUUID","isCheck","arguments","length","undefined","theID","uuidv4","has","add","getRoot","state","app","rootId","get","camelCasedClass","toCamelCase","Immutable","Map","getChildId","me","child","getIn","str","camelCase","isUnRead","updateTS","lastSeen","moment","unix","isAfter","dataURLtoFile","dataurl","filename","arr","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","decodeBase64","decodeURIComponent","map","c","toString","slice","join","bytes","i","parseInt","Math","floor","log","round","pow","getOrientation","callback","reader","FileReader","onload","view","DataView","target","getUint16","byteLength","offset","marker","getUint32","little","tags","readAsArrayBuffer","newCanvasSize","w","h","rotation","rads","PI","cos","s","sin","getStatusClass","status","Number","isInteger","linkParser","pure_message","msg","RegExp","test","link","key","href","rel","b","isMobile","platform","relativeTimeRounding","relativeTimeThreshold","defineLocale","months","monthsShort","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","l","ll","lll","llll","meridiemParse","meridiemHour","hour","meridiem","minute","isLower","hm","calendar","sameDay","minutes","nextDay","lastDay","nextWeek","startOfWeek","prefix","startOf","lastWeek","sameElse","ordinalParse","ordinal","number","period","relativeTime","future","past","m","mm","hh","d","dd","M","MM","y","yy","week","dow","doy","updateLocale","epoch2FullTimeMsFormat","epoch","epochTS","T","NT","format","epoch2FullTimeFormat","epoch2MessageTimeFormat","epoch2ReadFormat","targetTime","currentTime","readableTime","A_WEEK_OLD","clone","subtract","A_YEAR_OLD","year","from","expiredFormat","updateTS_T","isZh","expiredTime","timeleft","toNow","epoch2FullDate","BoardListComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onEditBoard","assertThisInitialized","handleScroll","manageBoard","preventDefault","stopPropagation","_this2","userId","listData","isLoading","noBoard","onScroll","ref","scroller","activeList","filter","Status","react_spinners","color","board","itemStatus","ArticleCreateTS","LastSeen","BoardType","CreatorID","encodeURIComponent","ID","Title","joinStatus","values","creatorName","UpdateTS","HubComponent","userName","boardList","createBoardAction","manageBoardAction","components_BoardListComponent","alertStyles","position","padding","backgroundColor","maxWidth","margin","top","left","right","bottom","border","borderRadius","zIndex","boxShadow","createArticleModalStyles","overflow","editArticleModalStyles","createBoardModalStyles","manageBoardModalStyles","nameCardModalStyles","signupModalStyels","firstPopupModalStyels","privacySettingModalStyels","latestPageModalStyles","showOpLogModalStyels","scannerModalStyels","addDeviceModalStyels","multiDeviceModalStyels","settingMenuModalStyels","boardActionModalStyels","AlertComponent","context","handleDismiss","handleShow","show","setState","_this$props$alertData","alertData","onClose","onConfirm","lib_default","overlayClassName","modalConstants","isOpen","onRequestClose","contentLabel","init","_ref","myId","myClass","myDuck","parentId","parentClass","parentDuck","objectWithoutProperties","dispatch","getState","initCore","objectSpread","addChild","_ref2","defineType","reduceInit","action","newList","List","push","merge","defineProperty","ids","setRoot","appDuck","reduceSetRoot","childId","childClass","reduceAddChild","setIn","reduceRemoveChilds","childIds","childIdSet","eachId","reduceRemove","myIds","myIdSet","newIds","newState","set","forEach","delete","reduceSetData","mergeIn","reduceUpdateData","mergeDeepIn","isNullTimeStamp","timestamp","stringify","emptyTimeStamp","Date","now","config","AUTH_ROOT","CALL_API","Symbol","createDuck","API_TYPES","callApi","endpoint","query","_ref$method","method","files","json","isWithCredentials","keys","cur","queryToString","request","superagent","attach","k","field","_stringifyParams","send","csrftoken","Cookie","X-CSRFToken","withCredentials","responseType","then","res","console","Promise","reject","body","catch","_len","Array","_key","error","next_url","window","location","text","_len2","_key2","r","x","val","getBoard","api","getBoardUrl","getBoards","startBoardId","limit","joinBoard","boardUrl","setBoardName","boardName","b64encode","getMemberList","starUserId","deleteBoard","createArticle","articleArray","mediaStr","updateArticle","articleId","mediaIds","deleteArticle","getArticle","getArticles","startArticleId","listOrder","getArticleSummaryByIds","articleInfos","markArticle","removeBoardMember","getContent","subContentId","contentType","blockId","getFriends","startFriendId","getFriendRequest","entityID","deleteFriend","chatId","getMessageList","startMessageId","getMessageBlockList","friendId","messageId","blockID","postMessage","getUserNameByIds","userIds","getUserName","getUserImgByIds","getUserImg","editName","getUsersInfo","all","_ref37","response","value","_ref38","getNameCardByIds","_ref39","getNameCard","getPttOpLogList","logId","getPttMasterOpLog","getPttMeOpLog","getFriendListByMsgCreateTS","getPeers","getContentPeers","getFriendPeers","getContentBoardOpLog","getContentOpkeyOpLog","getContentMasterOpLog","getContentMemberOpLog","getFriendFriendOpLog","entityId","getFriendMasterOpLog","getFriendMemberOpLog","getFriendOpKeyOpLog","getLastAnnounceP2PTS","showMyURL","showURL","showMyKey","uploadImg","uploadFile","deserialize","eachIdx","v","endsWith","b64decode","Base64","encode","decode","INIT","ADD_CHILD","SET_ROOT","REMOVE_CHILDS","REMOVE","SET_DATA","ADD_BOARD","ADD_BOARDS","DELETE_BOARD","utils","getBoardList","isFirstFetch","preprocessSetStartLoading","serverUtils","slicedToArray","reqResult","creatorIds","C","usersInfo","postprocessGetBoardList","postprocessSetFinshLoading","userNameMap","N","BT","S","eachJoin","NodeID","Name","joinBoardIndex","findIndex","getMoreBoards","_ref3","postprocessGetMoreBoards","allBoardsLoaded","boards","_addMoreBoards","friendInvited","_ref4","_ref5","boardUrlResult","boardJoinKey","Pn","URL","UT","expirePeriod","inviteMessages","fID","sentInviteMessages","_ref6","invite","_ref7","addBoard","_ref8","_ref9","_ref10","postprocessCreateBoard","newBoard","_addBoard","_action$data","updateIn","callBack","_ref11","_ref11$response","postprocessJoinBoard","joinedBoard","CreateTS","_ref12","postprocessDeleteBoard","_deleteBoard","clearData","postprocessClearData","reducer","createReducer","_myDuck$createReducer","OPEN_MODAL","CLOSE_MODAL","SET_SUBMIT","SET_INPUT","openModal","modalType","closeModal","setSubmit","modalSubmit","setInput","ModalContainer_myDuck$createReducer","currentModal","modalInput","GA_KEY","googleAnalytics","_initialized","_shouldTrack","localStorage","hasOwnProperty","getItem","track","_initialize","gaUserId","ReactGA","initialize","debug","titleCase","testMode","gaOptions","isConfigured","getConfig","saveConfig","doTrack","setItem","clearConfig","removeItem","firePageView","path","urlPath","pathname","pageview","fireEventOnProb","category","probability","random","event","fireEvent","HubPage","refreshPageInterval","showAlert","markSeen","doHubPage","actions","setInterval","_this$props2","clearInterval","_this$props3","hubPage","_this$props3$actions","doModalContainer","_this$state","components_Empty","toJS","joinBoardCallBack","that","components_HubComponent","modalAddBoardSubmit","modalJoinBoardSubmit","startsWith","onJoinBoard","modalData","components_AlertComponent","connect","ownProps","bindActionCreators","BoardBar","boardInfo","onOpenOPLogModal","ArticleListComponent","topItem","sliderInIndex","onListItemClick","scrollToBottom","needFetchMore","allArticlesLoaded","scrollTop","onGetMoreArticles","childNodes","mode","pageEnd","scrollIntoView","behavior","prevProps","ReactDOM","findDOMNode","summaryData","noArticle","aliveArticles","post","ArticleListComponent_ArticleComponent","el","ArticleComponent","_this$props4","isUnreadArticle","CommentCreateTS","listItemClass","itemLink","summary","PreviewText","B","sData","hidden","CreatorImg","dangerouslySetInnerHTML","__html","NPush","BoardComponent","articleList","articleSummaries","createArticleAction","deleteArticleAction","components_BoardBar","components_ArticleListComponent","UPDATE_DATA","ADD_ARTICLE","DELETE_ARTICLE","PREPEND_ARTICLES","APPEND_ARTICLES","INSERT_SUMMARIES","initParams","getBoardInfo","postprocessGetBoardInfo","inviteFriend","postprocessInviteFriend","postprocessSetBoardName","markBoard","postprocessMarkBoard","leaveBoard","callBackFunc","_ref8$response","postprocessLeaveBoard","_ref9$response","removeMember","memberToRemove","memberIds","mID","memberId","member","removeBoardMembers","postprocessRemoveMember","getArticleList","articleIds","cBlockIds","ContentBlockID","postprocessGetArticleList","A","summariesResult","summaries","postprocessGetSummaries","userImgMap","I","createTS","BoardID","CID","NBlock","NBoo","NB","NP","boardArticles","lru","articles","reverse","_insertSummaries","getMoreArticles","_ref13","postprocessGetMoreArticles","_ref14","_prependArticles","oriOffset","_appendArticles","lruCache","LRU","resultArticleList","article","localLRU","startArticle","earlistTS","oriIndex","newIndex","mergeIndex","oriList","mergedList","oriArticle","newArticle","reset","addArticle","_ref15","postprocessCreateArticle","previewText","BID","cID","AID","_addArticle","_action$data2","_ref16","postprocessDeleteArticle","_deteleArticle","createArticleWithAttachments","reducedArticleArray","attachments","attachment","_ref17","attachmentId","mediaId","_ref18","uploadAttachments","attachmentIdObjs","attachmentIdMap","current","_ref19","BoardPage_myDuck$createReducer","BoardPage","getLatestArticle","doBoardPage","_this$props5","boardPage","_this$props5$actions","openCreateArticleSubmit","leaveBoardCallBack","history","deleteBoardCallBack","components_BoardComponent","isCreator","onEditBoardName","onInviteFriend","onRemoveMember","onDeleteBoard","onLeaveBoard","noResult","nextProp","pullCount","articleContentsList","articleInfo","openNameCard","htmlContent","final","piece","contentBlockArray","cntDown","CommentReplyListComponent","comment","commentValidate","submitComment","isEmpty","MAX_COMMENT_SIZE","onCommentAdded","trim","isComposing","$","is","addEventListener","removeEventListener","tagName","toUpperCase","isEditIndex","commentContents","openCommentSettingMenuModal","CommentReplyListComponent_CommentReplyListItem","openMenu","autoFocus","onChange","CommentReplyListItem","_this3","editComment","onEditComment","setToEditMode","onMenuClicked","_this4","_this5","_this$state2","creatorImg","creatorId","ArticleBar","openManageArticleModal","APPEND_ARTICLE","APPEND_COMMENT","ADD_COMMENT","DELETE_COMMENT","getArticleInfo","postprocessGetArticleInfo","UpdateTSkey","postprocessMarkArticle","getArticleContent","articleResult","totalBlockNum","postprocessGetArticleContent","articleContents","RID","ct","commentType","mt","allArticleLoaded","_appendArticle","matchIndex","getCommentContent","latestSubContentId","postprocessGetCommentContent","commentContentsList","CT","comments","_appendComment","resultCommentList","startComment","oriComment","newComment","getMoreComments","startSubContentId","maps","postprocessGetMoreComments","allCommentsLoaded","editArticle","contentResult","addComment","postprocessAddComment","commentId","_addComment","deleteComment","postprocessDeleteComment","_deleteComment","isCommentLoading","downloadFile","gzip","ArticlePage_myDuck$createReducer","ArticlePage","pullTimer","attachmentTimer","count","pullContent","attachmentLoaded","downloadAttachment","getLatestComment","doArticlePage","iframeParams","createObjectURL","Blob","appendChild","click","_this$props6","articlePage","_this$state3","idx","contents","find","ele","attr","_this$props7","_this$scroller","clientHeight","scrollHeight","_this$props8","startContentId","_this$props9","_this$state4","_this$props10","_this$props10$actions","openEditArticleSubmit","openEditArticleModal","articleTitle","onDeleteArticle","components_ArticleBar","onEditArticle","isEmptyObject","components_ArticleComponent","isEditable","components_CommentReplyListComponent","onDeleteComment","ProfilePage_myDuck$createReducer","ProfilePage","profilePic","onSettingClicked","doProfilePage","FriendListComponent","onMenuTrigger","allFriendsLoaded","onGetMoreFriends","friendList","friendID","openFriendSettingMenuModal","noFriend","intl","friendSortedList","sort","SummaryUpdateTS","friend","FriendStatus","friendLink","summaryObj","Summary","isFriendUnread","Img","formatMessage","nameCard","INVITING_USER_NAME","SummaryUserName","INVITED_USER_NAME","SummaryUserID","injectIntl","FriendComponent","addFriendAction","components_FriendListComponent","PREPEND_FRIENDS","APPEND_FRIENDS","ADD_FRIEND","DELETE_FRIEND","getChatSummaries","chatIds","messageResult","getFriendList","friendResult","friendReqResult","summaryResult","FID","SummaryUserIds","postprocessGetFriendList","summaryUserId","userNameCardMap","userNameCard","SummaryUserImg","SummaryStatus","joinFriendIndex","myFriends","friends","getMoreFriendlist","postprocessGetMoreFriendList","_prependFriends","_appendFriends","resultFriendList","startFriend","oriFriend","newFriend","addFriend","_ref7$response","friendReqUrl","postprocessAddNewFriend","combinedFriend","_addNewFriend","postprocessDeleteFriend","_deleteFriend","getKeyInfo","keyInfo","postprocessGetKeyInfo","deviceJoinKeyInfo","userPrivateKeyInfo","friendJoinKeyInfo","combinedKeyInfo","userPrivateKey","deviceJoinKey","friendJoinKey","FriendListPage_myDuck$createReducer","FriendListPage","doFriendListPage","friendListPage","refreshKeyInfo","addFriendCallBack","modalAddFriend","myURL","onAddFriend","deleteFriendCallBack","components_FriendComponent","onDeleteFriend","FriendChatBar","friendData","NameCard","react_fontawesome_index_es","icon","FriendChatComponent","inputMessage","onInputEnter","handleMessageSubmit","handleAcceptInvite","onMessageAdded","trimmedMessage","allMessagesLoaded","onGetMoreMessages","messageList","MessageID","setTimeout","noMessage","placeholder","FriendChatComponent_MessageListComponent","MessageListComponent","epochTS1","epochTS2","FriendChatComponent_Message","assign","Message","messageObj","Buf","isOwn","inviteInfo","inviteType","keyUpdateTS_T","keyExpiration","expTimeVal","FriendChatComponent_InvitationBlock","InvitationBlock","inviteBoard","isBefore","isValid","ADD_MESSAGE","PREPEND_MESSAGES","APPEND_MESSAGES","getFriend","warn","postprocessGetFriend","markChat","postprocessMarkChat","getMessagesContent","messageIds","subContentIds","validResult","BlockID","messageBlockList","postprocessGetMessageList","ArticleID","friendMessages","getMoreMessageList","postprocessGetMoreMessageList","_prependMessages","_appendMessages","resultMessageList","startMessage","oriMessage","newMessage","postprocessPostMessage","_addMessage","_ref12$response","_ref13$response","FriendChatPage_myDuck$createReducer","FriendChatPage","getLatestMessage","doFriendChatPage","friendChatPage","components_FriendChatBar","components_FriendChatComponent","friendIds","postprocessgetFriendList","chatID","CreateBoardModal_myDuck$createReducer","CreateBoardModal","onKeydown","onNameChange","onFriendInvited","onSubmitAndClose","keyCode","newFriendInvited","onModalClose","MAX_BOARDNAME_SIZE","doCreateBoardModal","createBoardModal","modal","onKeyDown","BOARD_NAME","getBoardJoinKey","postprocessGetBoardJoinKey","ManageBoardModal_myDuck$createReducer","ManageBoardModal","doManageBoardModal","_this$props2$modalInp","memberResult","memeberIds","postprocessGetMembers","friendListResult","memeberListResult","memberMap","memberList","isBoardMember","memberStatus","memberUpdateTS","ManageBoardMemberModal_myDuck$createReducer","ManageBoardMemberModal","onMemberToRemove","newMemberToRemove","doManageBoardMemberModal","manageBoardMemberModal","JOIN_TIME","postprocessgetFriends","sendFriendInvite","inviteMessage","InviteToBoardModal_myDuck$createReducer","InviteToBoardModal","refreshBoardJoinKey","qrCodeCopied","copyBoardIdText","doInviteToBoardModal","inviteToBoardModal","react_copy_to_clipboard_lib","onCopy","App_myDuck$createReducer","CreateArticleModal_myDuck$createReducer","BlockEmbed","Quill","import","Break","FileAttachment","node","getAttribute","blotName","ImageAttachment","htmlArray","html","cleanEach","register","PttaiEditor","editor","initHtmlArray","attachedObjs","selection","titleChanged","contentChanged","onTitleChange","onPrevPageClick","onContentClick","mountQuill","attachmentUpload","handleChange","onDelete","onSubmit","onSubmitArticle","isTitleTooLong","reducedHtmlArray","replaced","MAX_ARTICLE_SIZE","onCloseArticle","isEdit","children","focus","clipboard","addMatcher","Node","TEXT_NODE","delta","matches","ops","beforeLink","shift","insert","attributes","ELEMENT_NODE","op","on","eventName","innerHTML","retain","ch","whiteSpace","isWhitespace","endRetain","getText","substr","updateContents","htmlStr","htmlObj","iframeElement","parseHTML","imgElement","html2Array","range","uploadingText","querySelector","fileReader","imgReader","insertPointIndex","MAX_FILE_UPLOAD_SIZE","readAsDataURL","insertText","onloadend","deleteText","insertEmbed","newRange","setSelection","orientation","Image","imageEvent","canvas","getContext","drawImage","oriWidth","oriHeight","degrees","newSize","ctx","clearRect","save","translate","rotate","restore","dataUrl","toDataURL","_this$state5","sel","getSelection","CreateArticleModal","onModalSubmit","shouldCloseOnEsc","components_PttaiEditor","doCreateArticleModal","EditArticleModal_myDuck$createReducer","EditArticleModal","_this$props$modalInpu","resultArray","block","doEditArticleModal","AndroidScanner","openCamera","parentElement","classList","contains","remove","play","onScanned","react_qr_reader_lib_default","delay","onError","err","onScan","IosScanner","getQRCode","code","documentElement","WebScanner","QRScannerSubmodal","QRScannerSubmodal_AndroidScanner","QRScannerSubmodal_IosScanner","QRScannerSubmodal_WebScanner","AddKnownBoardModal_myDuck$createReducer","AddKnownBoardModal","doAddKnownBoardModal","getProfile","_data","nameData","nameCardData","userImgData","postprocessGetProfile","profile","editProfile","postprocessEditProfile","postprocessEditName","combinedUserInfo","createTime","userID","updateTime","version","V","editProfileImg","imgBase64","myImg","postprocessEditProfileImg","NameCardModal_myDuck$createReducer","NameCardModal","isEditing","openQRCodeModal","doNameCardModal","wait","button","nameCardModal","company_placeholder","jobtitle_placeholder","email_placeholder","phone_placeholder","description_placeholder","NameCardModal_EditingNameCard","finishEdit","line","EditingNameCard","onCompanyChange","onJobTitleChange","onEmailChange","onPhoneChange","onDescriptionChange","onUpload","updateProfile","editedProfile","resizeReader","imgDataUrl","trimmedName","trimmedCompany","trimmedJobTitle","trimmedEmail","trimmedPhone","trimmedDescription","DEFAULT_USER_NAME","MAX_USER_NAME_SIZE","MAX_USER_COMPANY_SIZE","MAX_USER_JOBTITLE_SIZE","MAX_USER_EMAIL_SIZE","MAX_USER_PHONE_SIZE","MAX_USER_DESCRIPTION_SIZE","validator","isEmail","rows","FirstPopupModal_myDuck$createReducer","FirstPopupModal","nodeId","gaAgree","termsAgree","submodalType","onSubmitSignUp","onScannerClose","onNodeIdChange","onSignIn","openPrivacySetting","scannerIsOpen","signUp","onModalSwitch","firstPopUpInput","fromSignInPage","signIn","inputNodeId","inputPrivateKey","placeholder2","checked","doFirstPopupModal","PrivacySettingModal_myDuck$createReducer","PrivacySettingModal","onCancel","disabled","doPrivacySettingModal","MultiDeviceModal_myDuck$createReducer","MultiDeviceModal","menuIsOpen","openCurrent","onAddButtonClicked","onMenuClose","device","openAddDevice","manufacturer","layout","os","NodeName","NodeType","CreateTime","doMultiDeviceModal","AddFriendModal_myDuck$createReducer","AddFriendModal","refreshKeyInfoInterval","friendReqId","currentTab","onFriendIdChange","onTabChange","currentTarget","dataset","displayClasses","scannerClasses","activeTabClass","data-id","AddFriendModal_ScannerPage","AddFriendModal_QRCodePage","QRCodePage","addFriendUrl","qrcode_react_lib_default","ScannerPage","doAddFriendModal","AddDeviceModal_myDuck$createReducer","AddDeviceModal","copied","onSwtichToMultiDevices","readOnly","doAddDeviceModal","AddDeviceScannerModal_myDuck$createReducer","AddDeviceScannerModal","keyCopied","onPKeyChange","onNext","onComplete","slider","slickNext","addDeviceAction","placeholder1","react_slick_lib_default","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","rtl","arrows","doAddDeviceScannerModal","BoardActionModal_myDuck$createReducer","BoardActionModal","onSwitchAndClose","doBoardActionModal","SettingMenuModal_myDuck$createReducer","SettingMenuModal","doSettingMenuModal","FriendSettingMenuModal_myDuck$createReducer","FriendSettingMenuModal","onDeleteClicked","doFriendSettingMenuModal","BoardSettingMenuModal_myDuck$createReducer","BoardSettingMenuModal","doBoardSettingMenuModal","ArticleSettingMenuModal_myDuck$createReducer","ArticleSettingMenuModal","doArticleSettingMenuModal","CommentSettingMenuModal_myDuck$createReducer","CommentSettingMenuModal","doCommentSettingMenuModal","NewsBar","prevClicked","NewsListComponent","itemClicked","BoardName","NewsComponent","components_NewsBar","components_NewsListComponent","LatestPageModal_myDuck$createReducer","LatestPageModal","components_NewsComponent","doLatestPageModal","getOpLogs","getAllOpLogs","O","uid","UID","postprocessGetOpLogs","opLogs","accumulator","currentValue","opLog","ShowOpLogModal_myDuck$createReducer","DropdownComponent","listOpen","handleClickOutside","toggleList","prevState","ShowOpLogModal","tab","expandIdx","expandRow","doShowOpLogModal","showOpLogModal","dropdownList","fTitle","fullTitle","selected","components_DropdownComponent","Addr","IP","Port","Zone","itemMeta","Version","Oplog ID","Is Sync","OplogConst","OID","D","ModalContainer","Modal","setAppElement","idMap","_this$props$modal","_this$props$actions","modalSwitch","containers_CreateBoardModal","containers_ManageBoardModal","containers_ManageBoardMemberModal","containers_InviteToBoardModal","containers_CreateArticleModal","containers_EditArticleModal","containers_NameCardModal","containers_FirstPopupModal","containers_PrivacySettingModal","containers_AddKnownBoardModal","containers_MultiDeviceModal","containers_AddFriendModal","containers_AddDeviceModal","containers_AddDeviceScannerModal","containers_BoardActionModal","containers_SettingMenuModal","containers_FriendSettingMenuModal","containers_BoardSettingMenuModal","containers_ArticleSettingMenuModal","containers_CommentSettingMenuModal","containers_LatestPageModal","containers_ShowOpLogModal","hubPageId","boardPageId","articlePageId","profilePageId","friendListPageId","friendChatPageId","createBoardModalId","manageBoardModalId","showOpLogModalId","getUserInfoById","getUserInfo","asyncToGenerator","regenerator_default","mark","_callee","resolve","userInfo","info","userMetaInfo","metaInfo","userNameResult","_keyInfo","wrap","_context","prev","next","sent","abrupt","meta","getAllKeyInfo","postprocessGetUserInfo","stop","_x","_x2","apply","userImgResult","userNameCardResult","getDeviceInfo","postprocessGetDeviceInfo","combinedDeviceInfo","NID","TCP","UDP","UpdateTime","deviceInfo","addDevice","pKey","_ref14$response","getBoardMetaMap","boardIds","_callee2","_context2","_x3","_x4","getMetaInfoMaps","getAllArticles","_callee3","_ref20","aResult","_ref21","_error","_context3","_x5","_x6","getLatestArticles","_callee4","pttOpLogListRes","_context4","bID","postprocessGetLatestArticles","latestArticles","boardIdMap","getLogLastSeen","_ref23","updateLogLastSeenData","markLogSeen","_ref24","logLastSeen","fetchLatestMessage","_callee5","emptyTS","friendListRes","messageListRes","_context5","postprocessGetFriendListByMsgCreateTS","latestFriendList","creatorID","messageID","getFriendListSeen","_ref26","updateFriendLastSeenData","markFriendListSeen","_ref27","friendLastSeen","RootPage_myDuck$createReducer","setup","Notification","permission","requestPermission","RootPage","toastId","browserTabInterval","pageLastSeenTS","sentNotifications","resetTitle","refreshPage","refreshBrowserTabTitle","checkMarkFriendListSeen","checkMarkHubSeen","handleBrowserTabNotification","handleBrowserToast","doRootPage","QueryString","openFirstPopupModal","sender","notifyOneTitle","SENDER","notifyTwoTitle","toast","isActive","autoClose","latestMessage","includes","noti","createNoti","showNotification","tag","la","lf","myComponent","getRootId","latestHasUnread","markHubSeen","markFriendRead","createBoardId","manageBoardId","manageBoardMemberId","inviteToBoardId","modalIdMap","CREATE_BOARD_MODAL","MANAGE_BOARD_MODAL","SHOW_OP_LOG_MODAL","MANAGE_BOARD_MEMBER_MODAL","INVITE_TO_BOARD_MODAL","MAIN_PAGE","containers_HubPage","containers_BoardPage","containers_ArticlePage","containers_FriendListPage","containers_FriendChatPage","containers_ProfilePage","onLatestClicked","hasUnread","components_Navigator","containers_ModalContainer","react_toastify","hideProgressBar","withRouter","logger","createLogger","level","middlerwares","thunk","store","callAPI","bailout","types","Error","isArray","every","actionWith","finalAction","_types","requestType","successType","failureType","createDevTools","redux_devtools_dock_monitor_lib_default","toggleVisibilityKey","changePositionKey","redux_devtools_log_monitor_lib_default","reducers","combineReducers","manageBoardModal","rootPage","profilePage","enhancer","compose","applyMiddleware","middleware","DevTools","instrument","configure","initialState","createStore","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","library","faMinus","faSearch","faArrowLeft","faArrowCircleLeft","faCheck","faCaretRight","faEllipsisH","faPen","Component","renderDevTools","basename","react_router","exact","render","containers_RootPage","react_hot_loader","locale","es","getElementById","origin","fetch","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","setupNotification","join-board-button","create-board-button","dd-wrapper","dd-header","dd-list","dd-list-item-wrapper","dd-list-item"],"mappings":"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","file":"static/js/main.e81bf91f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ArticleComponent_root__D8j7b\",\"loading\":\"ArticleComponent_loading__2Q302\",\"main-content\":\"ArticleComponent_main-content__17hyq\",\"author\":\"ArticleComponent_author__fZAz_\",\"edit-button\":\"ArticleComponent_edit-button__2LZV1\",\"content\":\"ArticleComponent_content__2oNPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BoardComponent_root__3yRoo\",\"add-icon-container\":\"BoardComponent_add-icon-container__2bYpA\",\"add-icon-subcontainer\":\"BoardComponent_add-icon-subcontainer__2zXNz\",\"add-icon\":\"BoardComponent_add-icon__11iZ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ShowOpLogModal_root__3gtEJ\",\"top-bar\":\"ShowOpLogModal_top-bar__2MAFQ\",\"prev-button\":\"ShowOpLogModal_prev-button__1UI-6\",\"prev-button-icon\":\"ShowOpLogModal_prev-button-icon__2GPxC\",\"title\":\"ShowOpLogModal_title__1crXl\",\"multi-device\":\"ShowOpLogModal_multi-device__fw3Fo\",\"content\":\"ShowOpLogModal_content__2SOgq\",\"content-title\":\"ShowOpLogModal_content-title__cAeul\",\"oplog-item\":\"ShowOpLogModal_oplog-item__22ZAH\",\"item-index\":\"ShowOpLogModal_item-index__2H9H6\",\"item\":\"ShowOpLogModal_item__3e4ou\",\"op-title-index\":\"ShowOpLogModal_op-title-index___hOT8\",\"op-title\":\"ShowOpLogModal_op-title__2cU_L\",\"op-value-index\":\"ShowOpLogModal_op-value-index__2mzJ9\",\"op-value\":\"ShowOpLogModal_op-value__1tRkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ArticlePage_root__3KJuo\",\"time\":\"ArticlePage_time__2WAnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MultiDeviceModal_root__18hI0\",\"top-bar\":\"MultiDeviceModal_top-bar__3qvAI\",\"prev-button\":\"MultiDeviceModal_prev-button__1qNaK\",\"prev-button-icon\":\"MultiDeviceModal_prev-button-icon__1FbxM\",\"title\":\"MultiDeviceModal_title__1m7iz\",\"null-space\":\"MultiDeviceModal_null-space__1bOXO\",\"device-list\":\"MultiDeviceModal_device-list__2k9VY\",\"device-item\":\"MultiDeviceModal_device-item__htW7z\",\"item-index\":\"MultiDeviceModal_item-index__oKF03\",\"item\":\"MultiDeviceModal_item__2_sXY\",\"op-title-index\":\"MultiDeviceModal_op-title-index__2kxW5\",\"op-title\":\"MultiDeviceModal_op-title__1l-4q\",\"op-value-index\":\"MultiDeviceModal_op-value-index__1fcRl\",\"op-value\":\"MultiDeviceModal_op-value__1NB0F\",\"add-icon-container\":\"MultiDeviceModal_add-icon-container__2gTA-\",\"add-icon-subcontainer\":\"MultiDeviceModal_add-icon-subcontainer__2jjJ_\",\"add-icon\":\"MultiDeviceModal_add-icon__3qG52\",\"submodal-action-section\":\"MultiDeviceModal_submodal-action-section__glGFs\",\"submodal-join-board-button\":\"MultiDeviceModal_submodal-join-board-button__2n1AG\",\"submodal-create-board-button\":\"MultiDeviceModal_submodal-create-board-button__Qnimm\",\"submodal-close-button\":\"MultiDeviceModal_submodal-close-button__O2cml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NameCardModal_root__1KCO0\",\"modal-action-section\":\"NameCardModal_modal-action-section__2qfMn\",\"edit-button\":\"NameCardModal_edit-button__QGVJl\",\"submit-button\":\"NameCardModal_submit-button__3_zbb\",\"info-section\":\"NameCardModal_info-section__22byN\",\"left-side\":\"NameCardModal_left-side__2CO2P\",\"profile-picture\":\"NameCardModal_profile-picture__cl0DM\",\"right-side\":\"NameCardModal_right-side__153Lc\",\"main-info\":\"NameCardModal_main-info__3vu70\",\"contact-info\":\"NameCardModal_contact-info__2x8kb\",\"other-info\":\"NameCardModal_other-info__1Cadr\",\"profile-input\":\"NameCardModal_profile-input__3nyI3\",\"name\":\"NameCardModal_name__1kDYq\",\"company\":\"NameCardModal_company__1rkRz\",\"job-title\":\"NameCardModal_job-title__axVz-\",\"email\":\"NameCardModal_email__Li7tS\",\"phone\":\"NameCardModal_phone__1JT0L\",\"description\":\"NameCardModal_description__4P3j5\",\"qr-code\":\"NameCardModal_qr-code__3R-FQ\",\"overlay\":\"NameCardModal_overlay__2Pl1_\",\"editing\":\"NameCardModal_editing__3taPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LatestPageModal_root__6nrdy\",\"overlay\":\"LatestPageModal_overlay__3nNG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"RootPage_root__1CDU_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SettingMenuModal_root__OgQGV\",\"action-section\":\"SettingMenuModal_action-section__2n3BD\",\"menu-button\":\"SettingMenuModal_menu-button__2Y4eH\",\"overlay\":\"SettingMenuModal_overlay__2ZjZf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FriendChatComponent_root__1_Bpy\",\"action-section\":\"FriendChatComponent_action-section__17s-z\",\"edit-button\":\"FriendChatComponent_edit-button__IT5Mb\",\"chat\":\"FriendChatComponent_chat__2MHt7\",\"no-message\":\"FriendChatComponent_no-message__28Zzo\",\"user-message-item\":\"FriendChatComponent_user-message-item__2f08J\",\"message-item\":\"FriendChatComponent_message-item__1mOzC\",\"user-message-content\":\"FriendChatComponent_user-message-content__1gdtH\",\"user-message-content-invitation\":\"FriendChatComponent_user-message-content-invitation__3z5Qj\",\"message-content\":\"FriendChatComponent_message-content__2vHab\",\"message-content-invitation\":\"FriendChatComponent_message-content-invitation__3HA2w\",\"expired\":\"FriendChatComponent_expired__aV-rW\",\"user-message-meta\":\"FriendChatComponent_user-message-meta__1hAEx\",\"message-meta\":\"FriendChatComponent_message-meta__-rSTp\",\"user-message-status\":\"FriendChatComponent_user-message-status__1SyKP\",\"message-status\":\"FriendChatComponent_message-status__2nZ2p\",\"user-message-status-circle-pre-alive\":\"FriendChatComponent_user-message-status-circle-pre-alive__dGxs2\",\"message-status-circle-pre-alive\":\"FriendChatComponent_message-status-circle-pre-alive__2qXjL\",\"user-message-status-circle-alive\":\"FriendChatComponent_user-message-status-circle-alive__1x0XM\",\"message-status-circle-alive\":\"FriendChatComponent_message-status-circle-alive__28Zl-\",\"user-message-status-circle-failed\":\"FriendChatComponent_user-message-status-circle-failed__2tlu7\",\"message-status-circle-failed\":\"FriendChatComponent_message-status-circle-failed__yk4ol\",\"user-message-status-circle-post-failed\":\"FriendChatComponent_user-message-status-circle-post-failed__3xQ_H\",\"message-status-circle-post-failed\":\"FriendChatComponent_message-status-circle-post-failed__1gWUJ\",\"user-message-time\":\"FriendChatComponent_user-message-time__3hRQ0\",\"message-time\":\"FriendChatComponent_message-time__U99JA\",\"message-divider\":\"FriendChatComponent_message-divider__2g19i\",\"message-input\":\"FriendChatComponent_message-input__3NbCR\",\"message-action\":\"FriendChatComponent_message-action__aYC42\",\"loader\":\"FriendChatComponent_loader__1H3oq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FirstPopupModal_root__3C0vE\",\"sign-up\":\"FirstPopupModal_sign-up__15hHT\",\"profile-title\":\"FirstPopupModal_profile-title__3OU3j\",\"profile-input\":\"FirstPopupModal_profile-input__1xO25\",\"profile-input-name\":\"FirstPopupModal_profile-input-name__2wVgh\",\"signup-action\":\"FirstPopupModal_signup-action__3p7eQ\",\"close-button\":\"FirstPopupModal_close-button__1aCRq\",\"submit-button\":\"FirstPopupModal_submit-button__3LQv0\",\"overlay\":\"FirstPopupModal_overlay__2_7FF\",\"divider\":\"FirstPopupModal_divider__YzDAX\",\"sign-in\":\"FirstPopupModal_sign-in__2qWh6\",\"signin-action\":\"FirstPopupModal_signin-action__2vLWo\",\"signin-button\":\"FirstPopupModal_signin-button__2nA28\",\"scan-btn-container\":\"FirstPopupModal_scan-btn-container__pXW8a\",\"scan-btn\":\"FirstPopupModal_scan-btn__2Wqhk\",\"submodal-signup-container\":\"FirstPopupModal_submodal-signup-container__1OdBg\",\"submodal-signup\":\"FirstPopupModal_submodal-signup__2z8h8\",\"submodal-signup-title\":\"FirstPopupModal_submodal-signup-title__1QR7A\",\"submodal-checkmark-container\":\"FirstPopupModal_submodal-checkmark-container__AYlW8\",\"checkmark\":\"FirstPopupModal_checkmark__2fsrN\",\"submodal-ga-agreement\":\"FirstPopupModal_submodal-ga-agreement__1yPdG\",\"submodal-ga-agreement-item\":\"FirstPopupModal_submodal-ga-agreement-item__1Qzbv\",\"submodal-ga-agreement-see-more\":\"FirstPopupModal_submodal-ga-agreement-see-more__1f_CT\",\"submodal-signup-profile-input\":\"FirstPopupModal_submodal-signup-profile-input__64CZf\",\"submodal-signup-action-section\":\"FirstPopupModal_submodal-signup-action-section__H4U0V\",\"submodal-signup-confirm\":\"FirstPopupModal_submodal-signup-confirm__28vHo\",\"submodal-signup-cancel\":\"FirstPopupModal_submodal-signup-cancel__7OLFI\",\"submodal-signin-container\":\"FirstPopupModal_submodal-signin-container__3C3Za\",\"submodal-signin\":\"FirstPopupModal_submodal-signin__1bCon\",\"submodal-signin-title\":\"FirstPopupModal_submodal-signin-title__sNa-7\",\"submodal-signin-scanner-container\":\"FirstPopupModal_submodal-signin-scanner-container__2EfpB\",\"submodal-qr-code-scanner\":\"FirstPopupModal_submodal-qr-code-scanner__3Mq2r\",\"submodal-qr-code-text\":\"FirstPopupModal_submodal-qr-code-text__FQ2Ap\",\"submodal-signin-node-id\":\"FirstPopupModal_submodal-signin-node-id__1hMVm\",\"submodal-signin-action-section\":\"FirstPopupModal_submodal-signin-action-section__25abP\",\"submodal-signin-submit\":\"FirstPopupModal_submodal-signin-submit__3uw8M\",\"submodal-signin-cancel\":\"FirstPopupModal_submodal-signin-cancel__3T5Wr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreateBoardModal_root__3PaQ0\",\"title-header\":\"CreateBoardModal_title-header__M2oX0\",\"prev-arrow\":\"CreateBoardModal_prev-arrow__2X8Gw\",\"header-text\":\"CreateBoardModal_header-text__2eEt-\",\"search\":\"CreateBoardModal_search__2dKsX\",\"title-section\":\"CreateBoardModal_title-section__2Eqbz\",\"title-input\":\"CreateBoardModal_title-input__3By4V\",\"invite-title\":\"CreateBoardModal_invite-title__1T1Nr\",\"friend-list-text\":\"CreateBoardModal_friend-list-text__p1Jy7\",\"no-friend-text\":\"CreateBoardModal_no-friend-text__19hyr\",\"friend-item\":\"CreateBoardModal_friend-item__313ZH\",\"list-item-author\":\"CreateBoardModal_list-item-author__2NRx6\",\"list-item-author-pic\":\"CreateBoardModal_list-item-author-pic__3Zo4j\",\"list-item-author-name\":\"CreateBoardModal_list-item-author-name__2TLIc\",\"list-item-main\":\"CreateBoardModal_list-item-main__35Iip\",\"list-item-header\":\"CreateBoardModal_list-item-header__rBxn0\",\"list-item-title\":\"CreateBoardModal_list-item-title__2x9wR\",\"list-item-time\":\"CreateBoardModal_list-item-time__ZM7C9\",\"list-item-content\":\"CreateBoardModal_list-item-content__1DP-Z\",\"list-item-meta\":\"CreateBoardModal_list-item-meta__phIXq\",\"list-item-invited\":\"CreateBoardModal_list-item-invited__-FGRF\",\"list-item-to-invite\":\"CreateBoardModal_list-item-to-invite__jYe6p\",\"action-section\":\"CreateBoardModal_action-section__3wWp2\",\"add-icon-container\":\"CreateBoardModal_add-icon-container__3HFpB\",\"add-icon-subcontainer\":\"CreateBoardModal_add-icon-subcontainer___odh0\",\"add-icon\":\"CreateBoardModal_add-icon__2E650\",\"overlay\":\"CreateBoardModal_overlay__1n_rW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InviteToBoardModal_root__19ge7\",\"modal-bar\":\"InviteToBoardModal_modal-bar__8z-Qs\",\"null-prev-arrow\":\"InviteToBoardModal_null-prev-arrow__3gery\",\"prev-arrow\":\"InviteToBoardModal_prev-arrow__2ZcPR\",\"prev-arrow-icon\":\"InviteToBoardModal_prev-arrow-icon__1qk7J\",\"modal-title\":\"InviteToBoardModal_modal-title__zH2zW\",\"board-name\":\"InviteToBoardModal_board-name__22ceP\",\"invite-title\":\"InviteToBoardModal_invite-title__2MWTA\",\"friend-list\":\"InviteToBoardModal_friend-list__1w9SG\",\"no-friend-text\":\"InviteToBoardModal_no-friend-text__c_Sv6\",\"friend-item\":\"InviteToBoardModal_friend-item__1aFII\",\"list-item-author\":\"InviteToBoardModal_list-item-author__2D2Ww\",\"list-item-author-pic\":\"InviteToBoardModal_list-item-author-pic__2vr_T\",\"list-item-author-name\":\"InviteToBoardModal_list-item-author-name__26dPt\",\"list-item-main\":\"InviteToBoardModal_list-item-main__2Mwia\",\"list-item-header\":\"InviteToBoardModal_list-item-header__3gQLF\",\"list-item-title\":\"InviteToBoardModal_list-item-title__3iyIC\",\"list-item-time\":\"InviteToBoardModal_list-item-time__yhWBT\",\"list-item-content\":\"InviteToBoardModal_list-item-content__FZKF4\",\"list-item-meta\":\"InviteToBoardModal_list-item-meta__LN8qI\",\"list-item-invited\":\"InviteToBoardModal_list-item-invited__28Ypf\",\"list-item-to-invite\":\"InviteToBoardModal_list-item-to-invite__xXuMJ\",\"action-section\":\"InviteToBoardModal_action-section__1jyzc\",\"submit-button\":\"InviteToBoardModal_submit-button__I6lwh\",\"submit-icon-subcontainer\":\"InviteToBoardModal_submit-icon-subcontainer__3yddf\",\"submit-icon\":\"InviteToBoardModal_submit-icon__lapft\",\"null-space\":\"InviteToBoardModal_null-space__3rCh1\",\"copy-space\":\"InviteToBoardModal_copy-space__1EBi4\",\"invite-title-text\":\"InviteToBoardModal_invite-title-text__1G80Q\",\"manageboard-modal-copy\":\"InviteToBoardModal_manageboard-modal-copy__Oq6R8\",\"overlay\":\"InviteToBoardModal_overlay__2eQgk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ManageBoardMemberModal_root__2UtaA\",\"modal-bar\":\"ManageBoardMemberModal_modal-bar__3Ipxl\",\"null-prev-arrow\":\"ManageBoardMemberModal_null-prev-arrow__3XiK5\",\"prev-arrow\":\"ManageBoardMemberModal_prev-arrow__3xsPD\",\"prev-arrow-icon\":\"ManageBoardMemberModal_prev-arrow-icon__1OLXK\",\"board-name\":\"ManageBoardMemberModal_board-name__1rmmU\",\"invite-title\":\"ManageBoardMemberModal_invite-title__2EzRx\",\"friend-list\":\"ManageBoardMemberModal_friend-list__2JQqX\",\"no-friend-text\":\"ManageBoardMemberModal_no-friend-text__1KFBh\",\"friend-item\":\"ManageBoardMemberModal_friend-item__1TRN2\",\"list-item-author\":\"ManageBoardMemberModal_list-item-author__3R9Uo\",\"list-item-author-pic\":\"ManageBoardMemberModal_list-item-author-pic__54Avv\",\"list-item-author-name\":\"ManageBoardMemberModal_list-item-author-name__3jQAx\",\"list-item-main\":\"ManageBoardMemberModal_list-item-main__17y9U\",\"list-item-title\":\"ManageBoardMemberModal_list-item-title__3ugIT\",\"list-item-time\":\"ManageBoardMemberModal_list-item-time__2E2lJ\",\"list-item-meta\":\"ManageBoardMemberModal_list-item-meta__3mfsw\",\"list-item-selected\":\"ManageBoardMemberModal_list-item-selected__2P8ct\",\"list-item-unselect\":\"ManageBoardMemberModal_list-item-unselect__Orxkl\",\"action-section\":\"ManageBoardMemberModal_action-section__PfEVQ\",\"submit-button\":\"ManageBoardMemberModal_submit-button__ro2do\",\"submit-icon-subcontainer\":\"ManageBoardMemberModal_submit-icon-subcontainer__vWes1\",\"submit-icon\":\"ManageBoardMemberModal_submit-icon__ifIr-\",\"null-space\":\"ManageBoardMemberModal_null-space__2z23X\",\"copy-space\":\"ManageBoardMemberModal_copy-space__1KdDY\",\"invite-title-text\":\"ManageBoardMemberModal_invite-title-text__1itRc\",\"overlay\":\"ManageBoardMemberModal_overlay__3v48k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CommentReplyListComponent_root__3Cb8k\",\"spinner-item\":\"CommentReplyListComponent_spinner-item__2KWDt\",\"list-item\":\"CommentReplyListComponent_list-item__1rll2\",\"list-item-menu\":\"CommentReplyListComponent_list-item-menu__VjU_X\",\"list-item-menu-slider\":\"CommentReplyListComponent_list-item-menu-slider__3Ea1M\",\"list-item-menu-item\":\"CommentReplyListComponent_list-item-menu-item__1RzyK\",\"list-item-menu-item-text\":\"CommentReplyListComponent_list-item-menu-item-text__18Ob_\",\"comment-creator-profile\":\"CommentReplyListComponent_comment-creator-profile__2ttA-\",\"mask\":\"CommentReplyListComponent_mask__2APII\",\"comment-creator\":\"CommentReplyListComponent_comment-creator__2gzzK\",\"comment-creator-name\":\"CommentReplyListComponent_comment-creator-name__3BwhV\",\"comment-creator-id-prefix\":\"CommentReplyListComponent_comment-creator-id-prefix__3AXVn\",\"comment-content\":\"CommentReplyListComponent_comment-content__2688R\",\"comment-content-input\":\"CommentReplyListComponent_comment-content-input__17eJO\",\"comment-input\":\"CommentReplyListComponent_comment-input__3akZ8\",\"comment-content-container\":\"CommentReplyListComponent_comment-content-container__1c1mC\",\"comment-content-wrapper\":\"CommentReplyListComponent_comment-content-wrapper__15Cjl\",\"comment-status-wrapper\":\"CommentReplyListComponent_comment-status-wrapper__13jGb\",\"comment-status\":\"CommentReplyListComponent_comment-status__1RWUI\",\"pre-alive\":\"CommentReplyListComponent_pre-alive__XeJ1I\",\"alive\":\"CommentReplyListComponent_alive__1itPU\",\"failed\":\"CommentReplyListComponent_failed__14Yh-\",\"post-failed\":\"CommentReplyListComponent_post-failed__11wL2\",\"comment-manage\":\"CommentReplyListComponent_comment-manage__13bdL\",\"action-section\":\"CommentReplyListComponent_action-section__2i71F\",\"comment-action-input-enter\":\"CommentReplyListComponent_comment-action-input-enter__3t3yI\",\"comment-action-content-input\":\"CommentReplyListComponent_comment-action-content-input__mtLut\",\"comment-action-icon\":\"CommentReplyListComponent_comment-action-icon__1voTb\",\"list-item-ellipsis\":\"CommentReplyListComponent_list-item-ellipsis__1rV_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Empty_root__3Depi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PrivacySettingModal_root__3BTdV\",\"overlay\":\"PrivacySettingModal_overlay__1bJCN\",\"checkmark-container\":\"PrivacySettingModal_checkmark-container__17XVc\",\"checkmark\":\"PrivacySettingModal_checkmark__fV0mI\",\"ga-bar\":\"PrivacySettingModal_ga-bar__IYBOt\",\"prev-button\":\"PrivacySettingModal_prev-button__1dTyv\",\"prev-button-icon\":\"PrivacySettingModal_prev-button-icon__2O75T\",\"null-space\":\"PrivacySettingModal_null-space__2zvn7\",\"ga-title\":\"PrivacySettingModal_ga-title__1tVGO\",\"ga-agreement-paragraph\":\"PrivacySettingModal_ga-agreement-paragraph__3lMSy\",\"ga-agreement\":\"PrivacySettingModal_ga-agreement__3FUgz\",\"ga-agreement-content\":\"PrivacySettingModal_ga-agreement-content__LMn3i\",\"ga-agreement-item\":\"PrivacySettingModal_ga-agreement-item__2wVG5\",\"ga-agreement-item-disabled\":\"PrivacySettingModal_ga-agreement-item-disabled__2ZfmJ\",\"action-section\":\"PrivacySettingModal_action-section__1QHm7\",\"confirm\":\"PrivacySettingModal_confirm__2j8rh\",\"cancel\":\"PrivacySettingModal_cancel__1Z3nN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ArticleListComponent_root__3zuTV\",\"list\":\"ArticleListComponent_list__3LaHg\",\"list-item\":\"ArticleListComponent_list-item__31SoA\",\"read\":\"ArticleListComponent_read__29L45\",\"unread\":\"ArticleListComponent_unread__2yqwJ\",\"list-item-blocker\":\"ArticleListComponent_list-item-blocker__-0j6W\",\"list-item-menu\":\"ArticleListComponent_list-item-menu__ix_kT\",\"list-item-menu-slider\":\"ArticleListComponent_list-item-menu-slider__ZnsuU\",\"list-item-menu-item\":\"ArticleListComponent_list-item-menu-item__12Qt7\",\"no-content-message\":\"ArticleListComponent_no-content-message__2QZiN\",\"list-item-author\":\"ArticleListComponent_list-item-author__VOGmq\",\"list-item-author-pic\":\"ArticleListComponent_list-item-author-pic__26Jqn\",\"list-item-author-name\":\"ArticleListComponent_list-item-author-name__1NPqz\",\"list-item-main\":\"ArticleListComponent_list-item-main__2ssmI\",\"list-item-header\":\"ArticleListComponent_list-item-header__IFhKm\",\"list-item-title\":\"ArticleListComponent_list-item-title__2q8ac\",\"list-item-time\":\"ArticleListComponent_list-item-time__1SXIo\",\"list-item-content\":\"ArticleListComponent_list-item-content__2IjRs\",\"list-item-meta\":\"ArticleListComponent_list-item-meta__1QhFs\",\"list-item-status\":\"ArticleListComponent_list-item-status__3nuUJ\",\"list-item-status-pre-alive\":\"ArticleListComponent_list-item-status-pre-alive__1HWlb\",\"list-item-status-alive\":\"ArticleListComponent_list-item-status-alive__EWCzt\",\"list-item-status-failed\":\"ArticleListComponent_list-item-status-failed__2GgMm\",\"list-item-status-post-failed\":\"ArticleListComponent_list-item-status-post-failed__H07Z1\",\"list-item-circle\":\"ArticleListComponent_list-item-circle__3XO7o\",\"loader\":\"ArticleListComponent_loader__2Xfsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HubPage_root__1SUE1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BoardPage_root__13jpo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FriendListPage_root__3WbV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FriendChatPage_root__1dl6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"CreateArticleModal_overlay__256oA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"EditArticleModal_overlay__3pp8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FriendListComponent_root__1xFQa\",\"no-content-message\":\"FriendListComponent_no-content-message__2lwkM\",\"loader\":\"FriendListComponent_loader__3BAmX\",\"list-item\":\"FriendListComponent_list-item__2Axuu\",\"list-item-author\":\"FriendListComponent_list-item-author__tDAn8\",\"list-item-author-pic\":\"FriendListComponent_list-item-author-pic__U8S7c\",\"list-item-author-status\":\"FriendListComponent_list-item-author-status__2W8TJ\",\"list-item-author-status-circle\":\"FriendListComponent_list-item-author-status-circle__34Zyj\",\"pre-alive\":\"FriendListComponent_pre-alive__2VQeu\",\"failed\":\"FriendListComponent_failed__3rRPu\",\"list-item-author-status-circle-post\":\"FriendListComponent_list-item-author-status-circle-post__waYo3\",\"list-item-main\":\"FriendListComponent_list-item-main__1i15n\",\"list-item-header\":\"FriendListComponent_list-item-header__5mK65\",\"list-item-title\":\"FriendListComponent_list-item-title__15TbD\",\"list-item-time\":\"FriendListComponent_list-item-time__2ck2L\",\"list-item-meta\":\"FriendListComponent_list-item-meta__3qpgh\",\"list-item-circle\":\"FriendListComponent_list-item-circle__17NqE\",\"unread\":\"FriendListComponent_unread__1jqbx\",\"list-item-description\":\"FriendListComponent_list-item-description__1u6-C\",\"list-item-content\":\"FriendListComponent_list-item-content__fyB3S\",\"spinner-item\":\"FriendListComponent_spinner-item__2r7Kl\",\"list-item-ellipsis\":\"FriendListComponent_list-item-ellipsis__2bB1P\",\"list-item-menu\":\"FriendListComponent_list-item-menu__3Byxx\",\"list-item-menu-item\":\"FriendListComponent_list-item-menu-item__XM20K\",\"list-item-menu-item-text\":\"FriendListComponent_list-item-menu-item-text__1S_E6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewsComponent_root__i4Mf9\"};","module.exports = {\n  PTTAI_API_ROOT: 'http://localhost:14779',\n  PTTAI_APP_ROOT: 'http://localhost:9774',\n  PTTAI_URL_BASE: process.env.PUBLIC_URL,\n\n  GA_TRACKING_ID: 'UA-135901043-2'\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AddDeviceScannerModal_root__1_fry\",\"top-bar\":\"AddDeviceScannerModal_top-bar__1pdCy\",\"prev-button\":\"AddDeviceScannerModal_prev-button__3JhKT\",\"title\":\"AddDeviceScannerModal_title__2I1bV\",\"null-space\":\"AddDeviceScannerModal_null-space__13ZqC\",\"slide-list\":\"AddDeviceScannerModal_slide-list__1pZ2B\",\"container\":\"AddDeviceScannerModal_container__34Sxp\",\"p-key\":\"AddDeviceScannerModal_p-key__1Jyec\",\"copy-button\":\"AddDeviceScannerModal_copy-button__2BhOi\",\"text-value\":\"AddDeviceScannerModal_text-value__31XoJ\",\"helper-text\":\"AddDeviceScannerModal_helper-text__2COmW\",\"paste-area-pkey\":\"AddDeviceScannerModal_paste-area-pkey__3kJ0g\",\"scan-btn-container\":\"AddDeviceScannerModal_scan-btn-container__6acwT\",\"scan-btn\":\"AddDeviceScannerModal_scan-btn__3Bg-t\",\"qr-code-scanner-container\":\"AddDeviceScannerModal_qr-code-scanner-container__1syDS\",\"qr-code-scanner\":\"AddDeviceScannerModal_qr-code-scanner__1RCKd\",\"qr-code-text\":\"AddDeviceScannerModal_qr-code-text__2U38t\",\"paste-area-node-id\":\"AddDeviceScannerModal_paste-area-node-id__sKgeL\",\"action-section\":\"AddDeviceScannerModal_action-section__fMHRP\",\"submit-button\":\"AddDeviceScannerModal_submit-button__3WCtI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BoardListComponent_root__u-b35\",\"no-content-message\":\"BoardListComponent_no-content-message__2GiZi\",\"list\":\"BoardListComponent_list__1Ac4s\",\"list-item\":\"BoardListComponent_list-item__I-xIL\",\"read\":\"BoardListComponent_read__2qlxO\",\"unread\":\"BoardListComponent_unread__3HOu2\",\"list-item-hidden\":\"BoardListComponent_list-item-hidden__2IsmU\",\"list-item-label-green\":\"BoardListComponent_list-item-label-green__2A9x0\",\"list-item-label-yellow\":\"BoardListComponent_list-item-label-yellow__1xH6E\",\"list-item-title-wrapper\":\"BoardListComponent_list-item-title-wrapper__rSjFT\",\"list-item-board-status\":\"BoardListComponent_list-item-board-status__1gR68\",\"list-item-board-status-pre-alive\":\"BoardListComponent_list-item-board-status-pre-alive__2Q-9q\",\"list-item-board-status-alive\":\"BoardListComponent_list-item-board-status-alive__2iG6f\",\"list-item-board-status-failed\":\"BoardListComponent_list-item-board-status-failed__26ID7\",\"list-item-board-status-post-failed\":\"BoardListComponent_list-item-board-status-post-failed__MXNmX\",\"list-item-title\":\"BoardListComponent_list-item-title__1QYre\",\"list-item-meta\":\"BoardListComponent_list-item-meta__2V9Iu\",\"list-item-space\":\"BoardListComponent_list-item-space__1r-j4\",\"list-item-time\":\"BoardListComponent_list-item-time__3ZTYp\",\"list-item-author\":\"BoardListComponent_list-item-author__1tbTl\",\"spinner-item\":\"BoardListComponent_spinner-item__2X0_e\",\"list-item-edit-button\":\"BoardListComponent_list-item-edit-button__1tWSa\",\"list-item-ellipsis\":\"BoardListComponent_list-item-ellipsis__3WBbO\",\"loader\":\"BoardListComponent_loader__1x5Vj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AddFriendModal_root__5nDjc\",\"tab-pages-container\":\"AddFriendModal_tab-pages-container__3XE1i\",\"tab-pages\":\"AddFriendModal_tab-pages__3N4RJ\",\"tab-pages-title\":\"AddFriendModal_tab-pages-title__B3IBP\",\"switcher-item-container\":\"AddFriendModal_switcher-item-container__1bW_C\",\"switcher-item\":\"AddFriendModal_switcher-item__AV6i7\",\"active-switcher-item\":\"AddFriendModal_active-switcher-item__1lHJ1\",\"tab-page-container\":\"AddFriendModal_tab-page-container__iaYhK\",\"tab-page\":\"AddFriendModal_tab-page__1p56s\",\"tab-page-submit\":\"AddFriendModal_tab-page-submit__mPO8r\",\"tab-page-cancel\":\"AddFriendModal_tab-page-cancel__1B3i_\",\"qr-code-container\":\"AddFriendModal_qr-code-container__xSA3j\",\"copy-button\":\"AddFriendModal_copy-button__2fvdb\",\"tab-page-node-id\":\"AddFriendModal_tab-page-node-id__2gNDa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submodal-wrapper\":\"QRScannerSubmodal_submodal-wrapper__2PnwN\",\"scanner-btn\":\"QRScannerSubmodal_scanner-btn__16lQu\",\"scanner-btn-container\":\"QRScannerSubmodal_scanner-btn-container__3WZPq\",\"scanner-container\":\"QRScannerSubmodal_scanner-container__23LKz\",\"scanner\":\"QRScannerSubmodal_scanner__1kugd\",\"scanner-text\":\"QRScannerSubmodal_scanner-text__1lUDU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewsListComponent_root__unyM0\",\"list-item\":\"NewsListComponent_list-item__3Lnr4\",\"no-content-message\":\"NewsListComponent_no-content-message__1nZIQ\",\"list-item-author\":\"NewsListComponent_list-item-author__2nwAs\",\"list-item-author-pic\":\"NewsListComponent_list-item-author-pic__p_qYb\",\"list-item-author-name\":\"NewsListComponent_list-item-author-name__3LYpr\",\"list-item-main\":\"NewsListComponent_list-item-main__3Nb_c\",\"list-item-header\":\"NewsListComponent_list-item-header__2qBrA\",\"list-item-title\":\"NewsListComponent_list-item-title__2XOn2\",\"list-item-title-unread\":\"NewsListComponent_list-item-title-unread__Cdjf2\",\"list-item-time\":\"NewsListComponent_list-item-time__D0juX\",\"list-item-boardname\":\"NewsListComponent_list-item-boardname__1T-K8\",\"list-item-board-tag\":\"NewsListComponent_list-item-board-tag__3StCV\",\"list-item-content\":\"NewsListComponent_list-item-content__2ACUE\",\"spinner-item\":\"NewsListComponent_spinner-item__33WWe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Navigator_root__2wAUH\",\"collapsed\":\"Navigator_collapsed__3JBAg\",\"content\":\"Navigator_content__UaYX_\",\"content-selected\":\"Navigator_content-selected__1XjV6\",\"content-block\":\"Navigator_content-block__-f27m\",\"content-not-selected\":\"Navigator_content-not-selected__VPpQm\",\"tabs\":\"Navigator_tabs__dpopv\",\"inactive\":\"Navigator_inactive__3-sWz\",\"tab1-icon\":\"Navigator_tab1-icon__3BSB5\",\"active\":\"Navigator_active__uzg1l\",\"tab2-icon\":\"Navigator_tab2-icon__1P57O\",\"unread\":\"Navigator_unread__1AtBr\",\"tab1-text\":\"Navigator_tab1-text__37QVN\",\"tab2-text\":\"Navigator_tab2-text__3a1pP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ManageBoardModal_root__3NyYy\",\"modal-bar\":\"ManageBoardModal_modal-bar__37NYH\",\"prev-arrow\":\"ManageBoardModal_prev-arrow__38uUA\",\"prev-arrow-icon\":\"ManageBoardModal_prev-arrow-icon__7zNBI\",\"edit-name\":\"ManageBoardModal_edit-name__2T12d\",\"action-section\":\"ManageBoardModal_action-section__3452c\",\"submit-button\":\"ManageBoardModal_submit-button__2eA6k\",\"submit-icon-subcontainer\":\"ManageBoardModal_submit-icon-subcontainer__KVjOU\",\"submit-icon\":\"ManageBoardModal_submit-icon__2AEqK\",\"overlay\":\"ManageBoardModal_overlay__2GI0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AddDeviceModal_root__1wWh7\",\"top-bar\":\"AddDeviceModal_top-bar__Rzy23\",\"prev-button\":\"AddDeviceModal_prev-button__3wkm9\",\"title\":\"AddDeviceModal_title__2favo\",\"null-space\":\"AddDeviceModal_null-space__30kWx\",\"content\":\"AddDeviceModal_content__loIyf\",\"content-title\":\"AddDeviceModal_content-title__1efAC\",\"qr-code\":\"AddDeviceModal_qr-code__3cntq\",\"node-id\":\"AddDeviceModal_node-id__3wjI1\",\"expiration\":\"AddDeviceModal_expiration__30QJU\",\"copy-button\":\"AddDeviceModal_copy-button__29XBN\",\"text-value\":\"AddDeviceModal_text-value__2W36z\",\"helper-text\":\"AddDeviceModal_helper-text__3pdsF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FriendChatBar_root__4Ozdn\",\"content\":\"FriendChatBar_content__9gI3r\",\"prev-button\":\"FriendChatBar_prev-button__KkMig\",\"prev-button-icon\":\"FriendChatBar_prev-button-icon__844rW\",\"main-content\":\"FriendChatBar_main-content__91LPg\",\"profile-pic\":\"FriendChatBar_profile-pic__3OVfT\",\"friend-content\":\"FriendChatBar_friend-content__ifSOa\",\"name\":\"FriendChatBar_name__1c0bK\",\"job\":\"FriendChatBar_job__3Rvs2\",\"description\":\"FriendChatBar_description__34J4E\",\"menu-wrapper\":\"FriendChatBar_menu-wrapper__16mQj\",\"menu\":\"FriendChatBar_menu__-umpo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PttaiEditor_root__MAAkT\",\"title-section\":\"PttaiEditor_title-section__2IcHZ\",\"prev-arrow\":\"PttaiEditor_prev-arrow__3A40F\",\"space\":\"PttaiEditor_space__1xzS5\",\"title-text\":\"PttaiEditor_title-text__1xw4f\",\"pttai-editor-content\":\"PttaiEditor_pttai-editor-content__VeLWt\",\"action-section\":\"PttaiEditor_action-section__1O8mW\",\"upload-button\":\"PttaiEditor_upload-button__3KLV-\",\"delete-button\":\"PttaiEditor_delete-button__2uXbZ\",\"submit-button\":\"PttaiEditor_submit-button__3qbwV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BoardBar_root__3cg-Y\",\"content\":\"BoardBar_content__12weD\",\"prev-button\":\"BoardBar_prev-button__3b95-\",\"prev-button-icon\":\"BoardBar_prev-button-icon__31x2U\",\"prev-button-text\":\"BoardBar_prev-button-text__3Tr1i\",\"board-name\":\"BoardBar_board-name__253Ye\",\"search\":\"BoardBar_search__228Zk\",\"list-item-ellipsis\":\"BoardBar_list-item-ellipsis__1vNEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AddKnownBoardModal_root__f3ovG\",\"profile-title\":\"AddKnownBoardModal_profile-title__3iaNp\",\"profile-input\":\"AddKnownBoardModal_profile-input__3ngV0\",\"action-section\":\"AddKnownBoardModal_action-section__1G_lt\",\"close-button\":\"AddKnownBoardModal_close-button__1F6jK\",\"submit-button\":\"AddKnownBoardModal_submit-button__V1cCL\",\"add-known-board-container\":\"AddKnownBoardModal_add-known-board-container__23WwB\",\"add-known-board\":\"AddKnownBoardModal_add-known-board__1Bqz1\",\"add-known-board-title\":\"AddKnownBoardModal_add-known-board-title__3CC2M\",\"add-known-board-scanner-container\":\"AddKnownBoardModal_add-known-board-scanner-container__me0FM\",\"scan-btn-container\":\"AddKnownBoardModal_scan-btn-container__2mNWL\",\"scan-btn\":\"AddKnownBoardModal_scan-btn__3dEdg\",\"submodal-qr-code-scanner\":\"AddKnownBoardModal_submodal-qr-code-scanner__1cnZ7\",\"submodal-qr-code-text\":\"AddKnownBoardModal_submodal-qr-code-text__zFC4a\",\"add-known-board-node-id\":\"AddKnownBoardModal_add-known-board-node-id__2mqJ2\",\"add-known-board-action-section\":\"AddKnownBoardModal_add-known-board-action-section__2swFG\",\"add-known-board-submit\":\"AddKnownBoardModal_add-known-board-submit__2EmZK\",\"add-known-board-cancel\":\"AddKnownBoardModal_add-known-board-cancel__r0CO7\",\"overlay\":\"AddKnownBoardModal_overlay__2y1KK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AlertComponent_root__vbwsK\",\"message\":\"AlertComponent_message__2FvY9\",\"action-section\":\"AlertComponent_action-section__1popZ\",\"close\":\"AlertComponent_close__rbh9E\",\"confirm\":\"AlertComponent_confirm__3m7Sp\",\"overlay\":\"AlertComponent_overlay__3r6w4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ArticleBar_root__2ia4V\",\"content\":\"ArticleBar_content__1KqMz\",\"prev-button\":\"ArticleBar_prev-button__1wKH6\",\"prev-button-icon\":\"ArticleBar_prev-button-icon__wZasT\",\"menu-button\":\"ArticleBar_menu-button__3Cjk_\",\"menu-button-icon\":\"ArticleBar_menu-button-icon__2coK4\",\"prev-tag\":\"ArticleBar_prev-tag__-RtFM\",\"caret\":\"ArticleBar_caret__adRSX\",\"board-name\":\"ArticleBar_board-name__2cv4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfilePage_root__37HlZ\",\"collapsed\":\"ProfilePage_collapsed__1Yw7j\",\"content\":\"ProfilePage_content__3Q0vh\",\"profile-picture\":\"ProfilePage_profile-picture__1Skti\",\"profile-description\":\"ProfilePage_profile-description__3ogwm\",\"name\":\"ProfilePage_name__1AsRq\",\"profile-latest\":\"ProfilePage_profile-latest__1vz6E\",\"profile-latest-active\":\"ProfilePage_profile-latest-active__2yUHP\",\"profile-qr-code\":\"ProfilePage_profile-qr-code__ZAQ17\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewsBar_root__1iYKg\",\"content\":\"NewsBar_content__kDVRx\",\"prev-button\":\"NewsBar_prev-button__3THUF\",\"prev-button-icon\":\"NewsBar_prev-button-icon__2GYik\",\"prev-button-text\":\"NewsBar_prev-button-text__LRzl_\",\"board-name\":\"NewsBar_board-name__JftlM\",\"search\":\"NewsBar_search__1fh4w\"};","import React, { PureComponent } from 'react'\nimport classnames from 'classnames/bind'\nimport styles from './Empty.module.css'\n\nconst cx = classnames.bind(styles)\n\nclass Empty extends PureComponent {\n  render () {\n    return <div className={cx('hide')} />\n  }\n}\n\nexport default Empty\n","import React, { PureComponent } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Link } from 'react-router-dom'\n\nimport styles from './Navigator.module.css'\n\nclass Navigator extends PureComponent {\n  render () {\n    const { hubHasUnread, friendListHasUnread, onHubClicked, onFriendClicked, isChatRoom } = this.props\n\n    // for chatpage collapse\n    let rootClass = styles['root']\n    if (isChatRoom) { rootClass += ' ' + styles['collapsed'] }\n\n    // for active tab state change\n    let tabOneClass = 'inactive'\n    let tabTwoClass = 'inactive'\n    if (this.props.match.url.indexOf(`/hub`) === 0 ||\n        this.props.match.url.indexOf(`/board`) === 0) {\n      tabOneClass = 'active'\n    } else {\n      tabTwoClass = 'active'\n    }\n\n    let tabOneClasses = [styles[tabOneClass]]\n    let tabTwoClasses = [styles[tabTwoClass]]\n\n    if (hubHasUnread) {\n      tabOneClasses += ' ' + styles['unread']\n    }\n\n    if (friendListHasUnread) {\n      tabTwoClasses += ' ' + styles['unread']\n    }\n\n    return (\n      <div className={rootClass}>\n        <div className={styles['content']}>\n\n          <ul className={styles['tabs']}>\n            <li className={tabTwoClasses} onClick={onFriendClicked}>\n              <Link id='friend-tab' to={`/friend`} className={styles['content-block']}>\n                <div className={styles['tab2-icon']} />\n                <div className={styles['tab2-text']}>\n                  <FormattedMessage\n                    id='navigator.tab2'\n                    defaultMessage='Friends'\n                  />\n                </div>\n              </Link>\n            </li>\n            <li className={tabOneClasses} onClick={onHubClicked}>\n              <Link to={`/hub`} className={styles['content-block']}>\n                <div className={styles['tab1-icon']} />\n                <div className={styles['tab1-text']}>\n                  <FormattedMessage\n                    id='navigator.tab1'\n                    defaultMessage='Latest'\n                  />\n                </div>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Navigator\n","import { PTTAI_URL_BASE } from '../config'\n\nexport const CREATE_BOARD_MODAL = 'CREATE_BOARD_MODAL'\nexport const MANAGE_BOARD_MODAL = 'MANAGE_BOARD_MODAL'\nexport const MANAGE_BOARD_MEMBER_MODAL = 'MANAGE_BOARD_MEMBER_MODAL'\nexport const INVITE_TO_BOARD_MODAL = 'INVITE_TO_BOARD_MODAL'\nexport const CREATE_ARTICLE_MODAL = 'CREATE_ARTICLE_MODAL'\nexport const CREATE_MY_ARTICLE_MODAL = 'CREATE_MY_ARTICLE_MODAL'\nexport const EDIT_ARTICLE_MODAL = 'EDIT_ARTICLE_MODAL'\nexport const FIRST_POPUP_MODAL = 'FIRST_POPUP_MODAL'\nexport const PRIVACY_SETTING_MODAL = 'PRIVACY_SETTING_MODAL'\nexport const ADD_KNOWN_BOARD_MODAL = 'ADD_KNOWN_BOARD_MODAL'\nexport const NAME_CARD_MODAL = 'NAME_CARD_MODAL'\nexport const SHOW_DEVICE_INFO = 'SHOW_DEVICE_INFO'\nexport const ADD_FRIEND_MODAL = 'ADD_FRIEND_MODAL'\nexport const ADD_DEVICE_MODAL = 'ADD_DEVICE_MODAL'\nexport const ADD_DEVICE_SCANNER_MODAL = 'ADD_DEVICE_SCANNER_MODAL'\nexport const BOARD_ACTION_MODAL = 'BOARD_ACTION_MODAL'\nexport const SETTING_MENU_MODAL = 'SETTING_MENU_MODAL'\nexport const FRIEND_SETTING_MENU_MODAL = 'FRIEND_SETTING_MENU_MODAL'\nexport const BOARD_SETTING_MENU_MODAL = 'BOARD_SETTING_MENU_MODAL'\nexport const ARTICLE_SETTING_MENU_MODAL = 'ARTICLE_SETTING_MENU_MODAL'\nexport const COMMENT_SETTING_MENU_MODAL = 'COMMENT_SETTING_MENU_MODAL'\nexport const LATEST_PAGE_MODAL = 'LATEST_PAGE_MODAL'\nexport const SHOW_OP_LOG_MODAL = 'SHOW_OP_LOG_MODAL'\n\nexport const EMPTY_ID = ''\nexport const DEFAULT_USER_NAME = 'guest'\nexport const DEFAULT_USER_IMAGE = `${PTTAI_URL_BASE}/images/icon_avatar@2x.png`\nexport const DEFAULT_USER_COMPANY = 'unknown'\nexport const DEFAULT_USER_NAMECARD = {\n  name: DEFAULT_USER_NAME,\n  userImg: DEFAULT_USER_IMAGE,\n  company: '',\n  description: '',\n  email: '',\n  jobTitle: '',\n  phone: ''\n}\n\nexport const TITLE_FLASH_INTERVAL = 1200\nexport const REFRESH_INTERVAL = 5000\nexport const CONTENT_REFETCH_INTERVAL = 1000\nexport const ATTACHMENT_LOAD_INTERVAL = 100\nexport const PRESS_TO_EDIT_DELAY = 400\nexport const ARTICLE_PULL_COUNT_DOWN = 10\n\nexport const NUM_BOARD_PER_REQ = 100\nexport const NUM_FRIEND_PER_REQ = 100\nexport const NUM_MEMBER_PER_REQ = 100\nexport const NUM_ARTICLE_PER_REQ = 50\nexport const NUM_NEWS_PER_REQ = 20\nexport const NUM_CONTENT_PER_REQ = 100\nexport const NUM_MESSAGE_PER_REQ = 30\nexport const NUM_OPLOG_PER_REQ = 100\n\nexport const NUM_CACHE_MESSAGE = 100\nexport const NUM_CACHE_ARTILCE = 100\nexport const NUM_CACHE_FRIEND = 100\nexport const NUM_CACHE_COMMENT = 100\n\nexport const MAX_USER_IMG_SIZE = 32000\nexport const MAX_USER_IMG_WIDTH = 256\nexport const MAX_FILE_UPLOAD_SIZE = 10485760\nexport const MAX_USER_NAME_SIZE = 25\nexport const MAX_USER_COMPANY_SIZE = 25\nexport const MAX_USER_JOBTITLE_SIZE = 25\nexport const MAX_USER_EMAIL_SIZE = 50\nexport const MAX_USER_PHONE_SIZE = 15\nexport const MAX_USER_DESCRIPTION_SIZE = 100\n\nexport const MAX_COMMENT_SIZE = 500\nexport const MAX_ARTICLE_SIZE = 131072\nexport const MAX_BOARDNAME_SIZE = 50\n\nexport const MAX_EDITOR_IMG_SIZE = 32000\nexport const MAX_EDITOR_IMG_WIDTH = 1024\n\nexport const SHOW_PTT_MASTER_TAB = 'SHOW_PTT_MASTER_TAB'\nexport const SHOW_PTT_ME_TAB = 'SHOW_PTT_ME_TAB'\nexport const SHOW_CONTENT_BOARD_TAB = 'SHOW_CONTENT_BOARD_TAB'\nexport const SHOW_CONTENT_OPKEY_TAB = 'SHOW_CONTENT_OPKEY_TAB'\nexport const SHOW_CONTENT_MASTER_TAB = 'SHOW_CONTENT_MASTER_TAB'\nexport const SHOW_CONTENT_MEMBER_TAB = 'SHOW_CONTENT_MEMBER_TAB'\nexport const SHOW_FRIEND_FRIEND_TAB = 'SHOW_FRIEND_FRIEND_TAB'\nexport const SHOW_FRIEND_MASTER_TAB = 'SHOW_FRIEND_MASTER_TAB'\nexport const SHOW_FRIEND_MEMBER_TAB = 'SHOW_FRIEND_MEMBER_TAB'\nexport const SHOW_FRIEND_OPKEY_TAB = 'SHOW_FRIEND_OPKEY_TAB'\nexport const SHOW_PTT_PEERS_TAB = 'SHOW_PTT_PEERS_TAB'\nexport const SHOW_CONTENT_PEERS_TAB = 'SHOW_CONTENT_PEERS_TAB'\nexport const SHOW_FRIEND_PEERS_TAB = 'SHOW_FRIEND_PEERS_TAB'\nexport const SHOW_LAST_ANNOUNCE_P2P_TAB = 'SHOW_LAST_ANNOUNCE_P2P_TAB'\n\nexport const CONTENT_TYPE_ARTICLE = 0\nexport const CONTENT_TYPE_COMMENT = 1\nexport const CONTENT_TYPE_REPLY = 2\nexport const BOARD_TYPE_INVALID = 0\nexport const BOARD_TYPE_PERSONAL = 1\nexport const BOARD_TYPE_PRIVATE = 2\nexport const BOARD_TYPE_PUBLIC = 3\nexport const CONTENT_TYPE_TEXT = 'TEXT'\nexport const CONTENT_TYPE_IMAGE = 'IMAGE'\nexport const CONTENT_TYPE_FILE = 'FILE'\n\nexport const PTT_EDITOR_CLASS_NAME = 'ql-editor'\nexport const IFRAME_CLASS_NAME = 'ql-attachment'\nexport const FILE_CLASS_NAME = 'pttai-editor-file-attachment'\nexport const IMAGE_CLASS_NAME = 'pttai-editor-image-attachment'\n\nexport const LIST_ORDER_PREV = 1\nexport const LIST_ORDER_NEXT = 2\n\nexport const MESSAGE_TYPE_TEXT = 1\nexport const MESSAGE_TYPE_INVITE = 2\n\nexport const ENTITY_TYPE_ARRAY = [\n  'EntityTypeInvalid',\n  'EntityTypePersonal',\n  'EntityTypePrivate',\n  'EntityTypePublic'\n]\n\nexport const PEER_TYPE_ARRAY = [\n  'PeerTypeErr',\n  'PeerTypeRemoved',\n  'PeerTypeRandom',\n  'PeerTypePending',\n  'PeerTypeMember',\n  'PeerTypeImportant',\n  'PeerTypeHub',\n  'PeerTypeMe',\n  'NPeerType'\n]\n\nexport const OP_TYPE_ARRAY = [\n  'JoinMsg',\n  'JoinAckChallengeMsg',\n\n  'JoinEntityMsg',\n  'ApproveJoinMsg',\n\n  'JoinAlreadyRegisteredMsg',\n  'JoinAckAlreadyRegistedMsg',\n\n  'AddOpKeyOplogMsg', // 7\n  'AddOpKeyOplogsMsg',\n  'AddPendingOpKeyOplogMsg',\n  'AddPendingOpKeyOplogsMsg',\n\n  'SyncOpKeyOplogMsg',\n  'SyncOpKeyOplogAckMsg',\n  'SyncPendingOpKeyOplogMsg',\n  'SyncPendingOpKeyOplogAckMsg',\n\n  'SyncCreateOpKeyMsg',\n  'SyncCreateOpKeyAckMsg',\n\n  // master\n  'AddMasterOplogMsg', // 17\n  'AddMasterOplogsMsg',\n\n  'AddPendingMasterOplogMsg',\n  'AddPendingMasterOplogsMsg',\n\n  'SyncMasterOplogMsg',\n  'SyncMasterOplogAckMsg',\n  'SyncMasterOplogNewOplogsMsg',\n  'SyncMasterOplogNewOplogsAckMsg',\n\n  'SyncPendingMasterOplogMsg',\n  'SyncPendingMasterOplogAckMsg',\n\n  // member\n  'AddMemberOplogMsg', // 27\n  'AddMemberOplogsMsg',\n\n  'AddPendingMemberOplogMsg',\n  'AddPendingMemberOplogsMsg',\n\n  'SyncMemberOplogMsg',\n  'SyncMemberOplogAckMsg',\n  'SyncMemberOplogNewOplogsMsg',\n  'SyncMemberOplogNewOplogsAckMsg',\n\n  'SyncPendingMemberOplogMsg',\n  'SyncPendingMemberOplogAckMsg',\n\n  // peer\n  'IdentifyPeerMsg', // 37\n  'IdentifyPeerAckMsg',\n\n  'BoardLastSeenMsg',\n  'ArticleLastSeenMsg',\n\n  'NMsg'\n]\n\nexport const PTT_ME_OP_TYPE_ARRAY = [\n  'MeOpTypeInvalid',\n  'MeOpTypeCreateMe',\n  'MeOpTypeSetNodeName',\n\n  'OffsetMeOpTypeEntity',\n\n  'MeOpTypeCreateBoard',\n  'MeOpTypeJoinBoard',\n  'MeOpTypeCreateFriend',\n  'MeOpTypeJoinFriend',\n\n  'MeOpTypeMigrateMe',\n  'MeOpTypeDeleteMe',\n\n  'NMeOpType'\n]\n\nexport const PTT_OP_TYPE_ARRAY = [\n  'PttOpTypeCreateMe',\n\n  'PttOpTypeCreateArticle',\n  'PttOpTypeCreateComment',\n  'PttOpTypeCreateReply',\n\n  'PttOpTypeCreateFriend',\n  'PttOpTypeJoinBoard'\n]\n\nexport const BOARD_OP_TYPE_ARRAY = [\n  'BoardOpTypeInvalid',\n\n  'BoardOpTypeCreateBoard',\n  'BoardOpTypeDeleteBoard',\n  'BoardOpTypeMigrateBoard',\n\n  'BoardOpTypeCreateTitle',\n  'BoardOpTypeUpdateTitle',\n\n  'BoardOpTypeCreateArticle',\n  'BoardOpTypeUpdateArticle',\n  'BoardOpTypeDeleteArticle',\n\n  'BoardOpTypeCreateMedia',\n  'BoardOpTypeDeleteMedia',\n\n  'BoardOpTypeCreateComment',\n  'BoardOpTypeDeleteComment',\n\n  'BoardOpTypeCreateReply',\n  'BoardOpTypeUpdateReply',\n  'BoardOpTypeDeleteReply',\n\n  'NBoardOpType'\n]\n\nexport const FRIEND_OP_TYPE_ARRAY = [\n  'FriendOpTypeInvalid',\n\n  'FriendOpTypeCreateFriend',\n  'FriendOpTypeDeleteFriend',\n\n  'FriendOpTypeCreateMessage',\n\n  'FriendOpTypeCreateMedia',\n\n  'NFriendOpType'\n]\n\nexport const STATUS_ARRAY = [\n  'StatusInvalid',\n  'StatusInit',\n  'StatusInternalSync',\n  'StatusInternalPending',\n  'StatusPending',\n  'StatusSync',\n  'StatusToBeSynced',\n  'StatusAlive',\n  'StatusFailed',\n  // Putting intenal-deleted after alive.\n  // Because it's the competition between update-object and pending-delete, which does not affect the new-object, and no dead-lock for pending-delete (referring to new-object).\n  'StatusInternalDeleted',\n  'StatusInternalRevoke',\n  'StatusInternalTransfer',\n  'StatusInternalMigrate',\n  'StatusInternalTerminal',\n  'StatusPendingDeleted',\n  'StatusPendingRevoke',\n  'StatusPendingTransfer',\n  'StatusPendingMigrate',\n  'StatusPendingTerminal',\n  'StatusDeleted',\n  'StatusRevoked',\n  'StatusTransferred',\n  'StatusMigrated',\n  'StatusTerminal'\n]\n\nexport const JOIN_STATUS_ARRAY = [\n  'JoinStatusPending',\n  'JoinStatusRequested',\n  'JoinStatusWaitAccepted',\n  'JoinStatusAccepted'\n]\n\nexport const NODE_TYPE_ARRAY = [\n  'NodeTypeUnknown',\n  'NodeTypeMobile',\n  'NodeTypeDesktop',\n  'NodeTypeServer'\n]\n\nexport const IMG_TYPE_ARRAY = [\n  'ImgTypeJPEG',\n  'ImgTypeGIF',\n  'ImgTypePNG'\n]\n","import React from 'react'\nimport uuidv4 from 'uuid/v4'\nimport Immutable from 'immutable'\nimport camelCase from 'camelcase'\nimport decamelize from 'decamelize'\nimport QueryString from 'query-string'\nimport moment from 'moment'\nimport sanitizeHtml from 'sanitize-html'\nimport { PTTAI_APP_ROOT,\n  PTTAI_URL_BASE } from '../config'\nimport platform from 'platform'\nimport { addLocaleData } from 'react-intl'\n\nimport * as constants from '../constants/Constants'\n\nimport locale_en from 'react-intl/locale-data/en'\nimport locale_zh from 'react-intl/locale-data/zh'\nimport messages_zh from '../translations/zh.json'\nimport messages_en from '../translations/en.json'\n\naddLocaleData([...locale_en, ...locale_zh])\n\n// Localization\nconst all_messages = {\n  'zh': messages_zh,\n  'en': messages_en\n}\n\n// language without region code\nexport const language = (() => {\n  let lang = navigator.language.split(/[-_]/)[0]\n  return (lang in all_messages) ? lang : 'en'\n})()\n\nexport const messages = all_messages[language]\n\nconst GLOBAL_IDS = new Set()\n\nexport const getFileTemplate = (file) => {\n  const fileHTML = `<div class=\"${file.fileClass}\" style=\"display: flex; flex-direction: row; font-family: sans-serif; width: calc(100vw - 16px); box-sizing: border-box; padding: 8px; border: solid 1px #bbbbbb; border-radius: 12px; margin: auto 0px; cursor: pointer;\">\n                      <div class=\"attachment-icon\" style=\"background-image: url(${PTTAI_URL_BASE}/images/icon_attach@2x.png); background-repeat: no-repeat; background-size: 50px; width: 50px; min-height:50px; min-width:50px; margin-right: 10px;\">\n                      </div>\n                      <div class=\"attachment-meta\" style=\"display: flex; flex-direction: column; width: calc(100% - 50px); \">\n                        <div class=\"attachment-title\" title=\"${file.fileName}\" style=\"padding:2px 5px; height: 20px; line-height: 24px; font-size: 16px; color: #484848; text-overflow: ellipsis; white-space: nowrap; overflow: hidden;\">\n                          ${file.fileName}\n                        </div>\n                        <div class=\"attachment-size\" style=\"padding:2px 5px; height: 20px; line-height: 24px; font-size: 13px; color: #b1b1b1;\">\n                          ${bytesToSize(file.fileSize)}\n                        </div>\n                      </div>\n                    </div>`\n  return fileHTML.replace(/\\s+/g, ' ')\n}\n\nexport const getSummaryTemplate = (rowData, extraParams) => {\n  let template = `<div></div>`\n  let params = rowData.param\n\n  if (rowData.type === constants.CONTENT_TYPE_FILE) {\n    template = `<div style=\"display: flex; flex-direction: row;\">\n                  <div style=\"background-image: url(${PTTAI_URL_BASE}/images/icon_attach@2x.png); background-repeat: no-repeat; background-size: 20px; width: 20px; min-height:20px; min-width:20px; margin-left: 5px; margin-right: 10px;\">\n                  </div>\n                <div style=\"line-height: 20px; border-bottom: 0px solid #000;\">\n                  ${extraParams.CreatorName} ${messages['summary-template.user-upload-file']}</div>\n                </div>`\n  } else if (rowData.type === constants.CONTENT_TYPE_IMAGE) {\n    template = `<div style=\"display: flex; flex-direction: row;\">\n                  <img src=\"${PTTAI_APP_ROOT + '/api/img/' + extraParams.boardId + '/' + params.id}\" style=\"height: 20px; width: 20px; margin-right: 10px; margin-left: 5px; margin-top: 0px; margin-bottom: 0px; border-radius: 3px;\">\n                  <div style=\"height: 20px; line-height: 20px; border-bottom: 0px solid #000;\">\n                    ${extraParams.CreatorName} ${messages['summary-template.user-upload-image']}\n                  </div>\n                </div>`\n  } else {\n    template = sanitizeDirtyHtml(rowData.content)\n  }\n\n  return template.replace(/\\s+/g, ' ')\n}\n\nexport const toJson = (data) => {\n  let result = {}\n  try {\n    result = JSON.parse(data)\n  } catch (e) {\n    return result\n  }\n  return result\n}\n\nexport const sanitizeDirtyHtml = (dirtyHtml) => {\n  let cleanHtml = sanitizeHtml(dirtyHtml, {\n    allowedTags: ['li', 'ol', 'ul', 'a', 'p', 'br'],\n    allowedAttributes: {\n      'a': [ 'href', 'target' ]\n    },\n    allowedClasses: {\n      'li': [ 'ql-indent-1', 'ql-indent-2', 'ql-indent-3']\n    }\n  })\n  return cleanHtml\n}\n\nexport const array2Html = (array, boardId) => {\n  return array.reduce((acc, each, index) => {\n    if (each.type === constants.CONTENT_TYPE_FILE) {\n      const fileInfo = {\n        fileId: each.param.id,\n        fileClass: each.param.class,\n        fileName: each.param.name,\n        fileSize: each.param.size,\n        fileType: each.param.type\n      }\n\n      let iframe = document.createElement('iframe')\n      iframe.className = constants.IFRAME_CLASS_NAME\n      iframe.srcdoc = getFileTemplate(fileInfo)\n      iframe.frameborder = 0\n      iframe.allowfullscreen = true\n      iframe.width = '100%'\n      iframe.height = '84px'\n      iframe.setAttribute('style', 'border-width: 0px')\n      iframe.setAttribute('data-id', fileInfo.fileId)\n      iframe.setAttribute('data-class', fileInfo.fileClass)\n      iframe.setAttribute('data-name', fileInfo.fileName)\n      iframe.setAttribute('data-size', fileInfo.fileSize)\n      iframe.setAttribute('data-type', fileInfo.fileType)\n\n      return acc + iframe.outerHTML.replace(/\\s\\s+/g, ' ')\n    } else if (each.type === constants.CONTENT_TYPE_IMAGE) {\n      const imageInfo = {\n        imageId: each.param.id,\n        imageClass: each.param.class\n      }\n\n      let image = document.createElement('img')\n      image.src = PTTAI_APP_ROOT + '/api/img/' + boardId + '/' + imageInfo.imageId\n      image.alt = 'not working'\n      image.style.width = '100%'\n      image.setAttribute('data-id', imageInfo.imageId)\n      image.setAttribute('data-class', imageInfo.imageClass)\n\n      return acc + image.outerHTML.replace(/\\s\\s+/g, ' ')\n    } else if (each.type === constants.CONTENT_TYPE_TEXT) {\n      return acc + sanitizeDirtyHtml(each.content)\n    } else {\n      return acc\n    }\n  }, '')\n}\n\nexport const getUUID = (isCheck = true) => {\n  let theID = ''\n  while (true) {\n    theID = uuidv4()\n    if (!isCheck) break\n\n    if (GLOBAL_IDS.has(theID)) { continue }\n\n    GLOBAL_IDS.add(theID)\n    break\n  }\n  return theID\n}\n\nexport const isUUID = (val) => typeof val === 'string' && val.length === 36\n\nexport const delay = (milliseconds) => new Promise(() => {\n  setTimeout(() => { Promise.resolve() }, milliseconds)\n})\n\nexport const delayFunc = (func, params, milliseconds = 200) => setTimeout(() => { func(...params) }, milliseconds)\n\nexport const queryToString = (query) => {\n  if (!query) return ''\n\n  return Object.keys(query).reduce((acc, cur) => {\n    if (!query[cur]) return acc\n    return acc += `${cur}=${query[cur]}&`\n  }, '')\n}\n\nexport const parseQueryString = (str) => QueryString.parse(str)\n\nexport const getRoot = (state) => {\n  const { app } = state\n\n  let rootId = app.get('rootId', '')\n  let rootClass = app.get('rootClass', '')\n  let camelCasedClass = toCamelCase(rootClass)\n\n  if (!state[camelCasedClass]) return Immutable.Map()\n\n  return state[camelCasedClass].get(rootId, Immutable.Map())\n}\n\nexport const getStateChild = (state, child) => {\n  return state[child]\n}\n\nexport const getRootId = (state) => {\n  const { app } = state\n  if (!app) return ''\n  return app.get('rootId', '')\n}\n\nexport const getSingleChild = (state, childName) => {\n  const child = state[childName]\n  const ids = child.getIn(['ids', 0], '')\n  return child.get(ids, Immutable.Map())\n}\n\nexport const getChildId = (me, child) => me.getIn(['children', child, 0], '')\n\nexport const getChildIds = (me, child) => me.getIn(['children', child], Immutable.List())\n\nexport const toCamelCase = (str) => camelCase(str)\n\nexport const toUnderscore = (str) => decamelize(str)\n\nexport const encodeURIObj = (data) => {\n  return Object.keys(data).reduce((r, eachIdx, i) => {\n    let v = data[eachIdx]\n    if (typeof data[eachIdx] === 'string' && !eachIdx.endsWith('ID')) {\n      v = encodeURIComponent(data[eachIdx])\n    }\n    r[eachIdx] = v\n    return r\n  }, {})\n}\n\nexport const decodeURIObj = (data) => {\n  return Object.keys(data).reduce((r, eachIdx, i) => {\n    let v = data[eachIdx]\n    if (typeof data[eachIdx] === 'string' && !eachIdx.endsWith('ID')) {\n      v = decodeURIComponent(data[eachIdx])\n    }\n    r[eachIdx] = v\n    return r\n  }, {})\n}\n\nexport const isUnRead = (updateTS, lastSeen) => {\n  if (moment.unix(updateTS).isAfter(moment.unix(lastSeen))) {\n    return true\n  }\n  return false\n}\n\nexport const dataURLtoFile = (dataurl, filename) => {\n  let arr = dataurl.split(','); let mime = arr[0].match(/:(.*?);/)[1]\n\n  let bstr = atob(arr[1]); let n = bstr.length; let u8arr = new Uint8Array(n)\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n)\n  }\n\n  return new File([u8arr], filename, { type: mime })\n}\n\nexport const decodeBase64 = str => {\n  try {\n    return decodeURIComponent(atob(str).split('').map(function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\n    }).join(''))\n  } catch (e) {\n    return ''\n  }\n}\n\nexport const bytesToSize = (bytes) => {\n  let sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\n\n  if (bytes === 0) return '0 Byte'\n\n  let i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)), 10)\n\n  return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i]\n}\n\nexport const isWhitespace = (ch) => {\n  let whiteSpace = false\n  if ((ch === ' ') || (ch === '\\t') || (ch === '\\n')) {\n    whiteSpace = true\n  }\n  return whiteSpace\n}\n\nexport const getOrientation = (file, callback) => {\n  let reader = new FileReader()\n\n  reader.onload = function (e) {\n    let view = new DataView(e.target.result)\n    if (view.getUint16(0, false) !== 0xFFD8) return callback(-2)\n    let length = view.byteLength; let offset = 2\n\n    while (offset < length) {\n      let marker = view.getUint16(offset, false)\n      offset += 2\n      if (marker === 0xFFE1) {\n        if (view.getUint32(offset += 2, false) !== 0x45786966) return callback(-1)\n        let little = view.getUint16(offset += 6, false) === 0x4949\n        offset += view.getUint32(offset + 4, little)\n        let tags = view.getUint16(offset, little)\n        offset += 2\n        for (let i = 0; i < tags; i++) {\n          if (view.getUint16(offset + (i * 12), little) === 0x0112) { return callback(view.getUint16(offset + (i * 12) + 8, little)) }\n        }\n      } else if ((marker & 0xFF00) !== 0xFF00) break\n      else offset += view.getUint16(offset, false)\n    }\n    return callback(-1)\n  }\n\n  reader.readAsArrayBuffer(file)\n}\n\nexport const newCanvasSize = (w, h, rotation) => {\n  /* normalize image size by rotation */\n  let rads = rotation * Math.PI / 180\n\n  let c = Math.cos(rads)\n  let s = Math.sin(rads)\n\n  if (s < 0) {\n    s = -s\n  }\n  if (c < 0) {\n    c = -c\n  }\n\n  return [h * s + w * c, h * c + w * s]\n}\n\nexport const getStatusClass = (status) => {\n  let statusClass = 'pre-alive'\n\n  if (status !== 0 && !status) {\n    /* null or undefined */\n    return 'invalid'\n  }\n\n  if (status > 23 || status < 0 || !Number.isInteger(status)) {\n    /* invalid */\n    return 'invalid'\n  }\n\n  if (status >= 0 && status < 7) {\n    statusClass = 'pre-alive'\n  } else if (status === 7) {\n    statusClass = 'alive'\n  } else if (status === 8) {\n    statusClass = 'failed'\n  } else {\n    statusClass = 'post-failed'\n  }\n  return statusClass\n}\n\nconst isLink = str => {\n  // https://stackoverflow.com/a/5717133/5032696\n\n  var pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n    '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n    '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n    '(\\\\#[-a-z\\\\d_]*)?$', 'i') // fragment locator\n  return !!pattern.test(str)\n}\n\nexport const linkParser = (pure_message) => {\n  if (!pure_message) return ''\n\n  let messageArr = pure_message.split(/\\s/).map((msg, i) => {\n    if (isLink(msg)) {\n      let link = msg\n\n      if (!/^http(s?):\\/\\//.test(msg)) {\n        link = '//' + msg\n      }\n\n      return <a key={i} href={link} rel='noopener noreferrer' target='_blank'>{msg}</a>\n    }\n\n    return <span key={i}>{msg}</span>\n  })\n\n  return messageArr.reduce((a, b) => a === null ? [b] : [a, ' ', b], null)\n}\n\nexport const isMobile = () => {\n  /* If true, autofocus will be disabled */\n  /* Currently, the following should return true: */\n  /* Android and iOS device */\n  return platform.description.indexOf('Mobile') !== -1 || // Android and iOS chorome browser\n      platform.description.indexOf('Android') !== -1 || // Android app\n      platform.description.indexOf('iOS') !== -1 // iOS safari browser\n}\n\nexport const isIOS = () => {\n  return platform.description.indexOf('iOS') !== -1 // iOS app\n}\n\nexport const isAndroid = () => {\n  return platform.description.indexOf('Android') !== -1 // Android app\n}\n","import moment from 'moment'\n\nimport { language } from './utils'\n\nmoment.relativeTimeRounding(Math.floor)\nmoment.relativeTimeThreshold('s', 60)\nmoment.relativeTimeThreshold('m', 60)\nmoment.relativeTimeThreshold('h', 24)\nmoment.relativeTimeThreshold('d', 31)\nmoment.relativeTimeThreshold('M', 12)\n\nif (language === 'zh') {\n  moment.defineLocale('zh-tw', {\n    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n    weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n    longDateFormat: {\n      LT: 'Ah點mm分',\n      LTS: 'Ah點m分s秒',\n      L: 'YYYY-MM-DD',\n      LL: 'YYYY年MMMD日',\n      LLL: 'YYYY年MMMD日Ah點mm分',\n      LLLL: 'YYYY年MMMD日ddddAh點mm分',\n      l: 'YYYY-MM-DD',\n      ll: 'YYYY年MMMD日',\n      lll: 'YYYY年MMMD日Ah點mm分',\n      llll: 'YYYY年MMMD日ddddAh點mm分'\n    },\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0\n      }\n      if (meridiem === '凌晨' || meridiem === '早上' ||\n                    meridiem === '上午') {\n        return hour\n      } else if (meridiem === '下午' || meridiem === '晚上') {\n        return hour + 12\n      } else {\n        // '中午'\n        return hour >= 11 ? hour : hour + 12\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      var hm = hour * 100 + minute\n      if (hm < 600) {\n        return '凌晨'\n      } else if (hm < 900) {\n        return '早上'\n      } else if (hm < 1130) {\n        return '上午'\n      } else if (hm < 1230) {\n        return '中午'\n      } else if (hm < 1800) {\n        return '下午'\n      } else {\n        return '晚上'\n      }\n    },\n    calendar: {\n      sameDay: function () {\n        return this.minutes() === 0 ? '[今天]Ah[點整]' : '[今天]LT'\n      },\n      nextDay: function () {\n        return this.minutes() === 0 ? '[明天]Ah[點整]' : '[明天]LT'\n      },\n      lastDay: function () {\n        return this.minutes() === 0 ? '[昨天]Ah[點整]' : '[昨天]LT'\n      },\n      nextWeek: function () {\n        var startOfWeek, prefix\n        startOfWeek = moment().startOf('week')\n        prefix = this.unix() - startOfWeek.unix() >= 7 * 24 * 3600 ? '[下]' : '[本]'\n        return this.minutes() === 0 ? prefix + 'dddAh點整' : prefix + 'dddAh點mm'\n      },\n      lastWeek: function () {\n        var startOfWeek, prefix\n        startOfWeek = moment().startOf('week')\n        prefix = this.unix() < startOfWeek.unix() ? '[上]' : '[本]'\n        return this.minutes() === 0 ? prefix + 'dddAh點整' : prefix + 'dddAh點mm'\n      },\n      sameElse: 'LL'\n    },\n    ordinalParse: /\\d{1,2}(日|月|周)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'd':\n        case 'D':\n        case 'DDD':\n          return number + '日'\n        case 'M':\n          return number + '月'\n        case 'w':\n        case 'W':\n          return number + '周'\n        default:\n          return number\n      }\n    },\n    relativeTime: {\n      future: '%s内',\n      past: '%s前',\n      s: '幾秒',\n      m: '1 分鐘',\n      mm: '%d 分鐘',\n      h: '1 小時',\n      hh: '%d 小時',\n      d: '1 天',\n      dd: '%d 天',\n      M: '1 個月',\n      MM: '%d 個月',\n      y: '1 年',\n      yy: '%d 年'\n    },\n    week: {\n      // GB/T 7408-1994, equivalent to ISO 8601:1988\n      dow: 1, // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n  })\n} else {\n  moment.updateLocale('en', {\n    ordinal: function (number, period) {\n      var b = number % 10\n      var output = (~~(number % 100 / 10) === 1) ? 'th'\n        : (b === 1) ? 'st'\n          : (b === 2) ? 'nd'\n            : (b === 3) ? 'rd' : 'th'\n      return number + output\n    }\n  })\n}\n\nexport const epoch2FullTimeMsFormat = (epoch) => {\n  let epochTS = epoch.T + epoch.NT * 0.000000001\n  return moment.unix(epochTS).format('YYYY-MM-DD HH:mm:ss.SSS')\n}\n\nexport const epoch2FullTimeFormat = (epochTS) => {\n  return moment.unix(epochTS).format('YYYY-MM-DD HH:mm:ss')\n}\n\nexport const epoch2MessageTimeFormat = (epochTS) => {\n  if (language === 'zh') {\n    return moment.unix(epochTS).format('a h:mm')\n  } else {\n    return moment.unix(epochTS).format('h:mm a')\n  }\n}\n\nexport const epoch2MessageDateFormat = (epochTS) => {\n  return moment.unix(epochTS).format('MMM Do')\n}\n\nexport const doesCrossDay = (epochTS1, epochTS2) => {\n  return moment.unix(epochTS1).format('YYYY-MM-DD') !== moment.unix(epochTS2).format('YYYY-MM-DD')\n}\n\nexport const epoch2ReadFormat = (epochTS) => {\n  let targetTime = moment.unix(epochTS)\n  let currentTime = moment()\n  let readableTime = targetTime\n  let A_WEEK_OLD = currentTime.clone().subtract(7, 'days').startOf('day')\n  let A_YEAR_OLD = currentTime.clone().subtract(1, 'years').startOf('day')\n\n  if (!targetTime.isAfter(A_WEEK_OLD) && targetTime.isAfter(A_YEAR_OLD)) {\n    if (language === 'zh') {\n      // Show 月 and 日\n      readableTime = targetTime.format('MoDo')\n      readableTime = (targetTime.year() + 1 === currentTime.year()) ? ('去年' + readableTime) : (readableTime)\n    } else {\n      readableTime = targetTime.format('MMM Do')\n    }\n  } else {\n    readableTime = targetTime.from(currentTime)\n  }\n\n  return readableTime\n}\n\nexport const isValid = (updateTS_T, period) => {\n  let targetTime = moment.unix(updateTS_T)\n  let expiredTime = targetTime.add(period, 'seconds')\n  return moment().isBefore(expiredTime)\n}\n\nexport const expiredFormat = (updateTS_T, period) => {\n  let isZh = language === 'zh'\n  let result = ''\n\n  if (!updateTS_T || !period) {\n    result = isZh ? '日期錯誤' : 'Wrong Date'\n  }\n\n  // updateTS + period - current\n  let targetTime = moment.unix(updateTS_T)\n  let expiredTime = targetTime.add(period, 'seconds')\n\n  if (moment().isAfter(expiredTime)) {\n    result = isZh ? '已過期' : 'Expired'\n  } else {\n    let timeleft = expiredTime.toNow(true)\n    result = isZh ? `${timeleft} 後過期` : `Expired in ${timeleft}`\n  }\n\n  return result\n}\n\nexport const epoch2FullDate = (epochTS) => {\n  if (language === 'zh') {\n    return moment.unix(epochTS).format('YYYY年MoDo')\n  } else {\n    return moment.unix(epochTS).format('YYYY-MM-D')\n  }\n}\n\nexport const milliTimestampToDatetime = (milli_timestamp) => new Date(parseInt(milli_timestamp, 10))\n\nexport const secTimestampToDatetime = (sec_timestamp) => new Date(parseInt(sec_timestamp * 1000, 10))\n\nexport const getCurrentDatetime = (timezone = 8) => {\n  // get current datetime, default to tw\n  let theDatetime = new Date()\n  return new Date(theDatetime.getTime() + theDatetime.getTimezoneOffset() * 60 * 1000 + timezone * 3600 * 1000)\n}\n\nexport const getCurrentUTCDatetime = () => getCurrentDatetime(0)\n\nexport const getCurrentDate = (timezone = 8) => {\n  // get Current date, default to tw\n  let theDate = getCurrentDatetime(timezone)\n  theDate.setHours(0)\n  theDate.setMinutes(0)\n  theDate.setSeconds(0)\n  theDate.setMilliseconds(0)\n  return theDate\n}\n\nexport const getCurrentUTCDate = () => getCurrentDate(0)\n\nexport const getCurrentDatetimeSec = (timezone = 8) => {\n  let theDate = getCurrentDatetime(timezone)\n  theDate.setMilliseconds(0)\n  return theDate\n}\n\nexport const getCurrentUTCDatetimeSec = () => getCurrentDatetimeSec(0)\n\nexport const addDay = (theDate, days) => new Date(theDate.getTime() + days * 86400 * 1000)\n\nexport const maxDate = (a, b) => new Date(Math.max(a, b))\n\nexport const minDate = (a, b) => new Date(Math.min(a, b))\n","import React, { PureComponent } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ClipLoader } from 'react-spinners'\nimport { FormattedMessage } from 'react-intl'\n\nimport { isUnRead, getStatusClass } from '../utils/utils'\nimport { epoch2FullDate, epoch2ReadFormat } from '../utils/utilDatetime'\nimport * as constants from '../constants/Constants'\n\nimport styles from './BoardListComponent.module.css'\n\nclass BoardListComponent extends PureComponent {\n  constructor (props) {\n    super()\n\n    this.onEditBoard = this.onEditBoard.bind(this)\n    // this.needFetchMore    = this.needFetchMore.bind(this)\n    this.handleScroll = this.handleScroll.bind(this)\n  }\n\n  onEditBoard (e, item) {\n    const { manageBoard } = this.props\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    manageBoard(item)\n  }\n\n  // needFetchMore() {\n  //   const { isLoading, allBoardsLoaded } = this.props\n  //   const { scrollTop } = this.scroller\n  //   return (\n  //     this.scroller &&\n  //     !isLoading &&\n  //     !allBoardsLoaded &&\n  //     scrollTop <= 0\n  //   )\n  // }\n\n  handleScroll () {\n    // TODO\n\n    // if (this.needFetchMore()) {\n    //   const { onGetMoreBoards, friendList } = this.props\n\n    //   let startFriendId = friendList[0].friendID\n\n    //   this.topItem = this.scroller.childNodes[0].childNodes.length === 0? null : this.scroller.childNodes[0].childNodes[0];\n    //   onGetMoreBoards(startFriendId)\n    // }\n  }\n\n  render () {\n    const { userId, /* userName, */ listData, isLoading, /* createBoard, */ noBoard } = this.props\n\n    if (noBoard) {\n      return (\n        <div className={styles['root']} onScroll={this.handleScroll} ref={(scroller) => { this.scroller = scroller }}>\n          <div className={styles['no-content-message']}>\n            <FormattedMessage\n              id='board-list-component.message'\n              defaultMessage='You have no group yet, click below button to add'\n            />\n          </div>\n        </div>\n      )\n    }\n\n    let boardType = (board) => {\n      if (board.BoardType === constants.BOARD_TYPE_PERSONAL) {\n        return board.CreatorID === userId ? '-green' : '-yellow'\n      }\n      return ''\n    }\n\n    let activeList = listData.filter((item) => item.Status < constants.STATUS_ARRAY.indexOf('StatusDeleted'))\n\n    return (\n      <div className={styles['root']} onScroll={this.handleScroll} ref={(scroller) => { this.scroller = scroller }}>\n        {\n          <div className={styles['list']}>\n            {\n              isLoading ? (\n                <div className={styles['loader']}>\n                  <ClipLoader color={'#aaa'} size={35} loading={isLoading} />\n                </div>\n              ) : (null)\n            }\n            {\n              activeList.map((item, index) => {\n                let isBoardUnread = isUnRead(item.ArticleCreateTS.T, item.LastSeen.T)\n                let itemStatus = isBoardUnread ? styles['unread'] : styles['read']\n\n                return (\n                  <div className={`${styles['list-item']} ${itemStatus}`} key={index}>\n                    <div className={styles['list-item-label' + boardType(item)]} />\n                    <Link to={`/board/${encodeURIComponent(item.ID)}`}>\n                      <div title={constants.STATUS_ARRAY[item.Status]} className={styles['list-item-board-status']}>\n                        <div className={styles['list-item-board-status-' + getStatusClass(item.Status)]} />\n                      </div>\n                      <div className={styles['list-item-title-wrapper']}>\n                        <div className={styles['list-item-title']}>\n                          {item.Title} {constants.JOIN_STATUS_ARRAY[item.joinStatus] === 'JoinStatusAccepted' ? '' : '(' + constants.JOIN_STATUS_ARRAY[item.joinStatus].slice(10) + ')'}\n                        </div>\n                      </div>\n                      <div className={styles['list-item-author']}>\n                        {\n                          (item.BoardType === constants.BOARD_TYPE_PERSONAL) ? (\n                            <FormattedMessage\n                              id='board-list-component.board-type'\n                              defaultMessage='[Personal] {name}'\n                              values={{ name: item.creatorName }}\n                            />\n                          ) : (\n                            item.creatorName\n                          )\n                        }\n                      </div>\n                      <div className={styles['list-item-meta']}>\n                        <div className={styles['list-item-space']} />\n                        <div title={epoch2FullDate(item.UpdateTS.T)} className={styles['list-item-time']}>\n                          {epoch2ReadFormat(item.UpdateTS.T)}\n                        </div>\n                        <div className={styles['list-item-edit-button']}>\n                          {\n                            true || item.CreatorID !== userId ? (null) : (\n                              <div className={styles['list-item-ellipsis']} onClick={(e) => this.onEditBoard(e, item)} />\n                            )\n                          }\n                        </div>\n                      </div>\n                    </Link>\n                  </div>\n                )\n              })\n            }\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default BoardListComponent\n","import React, { PureComponent } from 'react'\n\nimport BoardListComponent from '../components/BoardListComponent'\n\nimport styles from './HubComponent.module.css'\n\nclass HubComponent extends PureComponent {\n  render () {\n    const { userId, userName, boardList, isLoading, noBoard, createBoardAction, manageBoardAction } = this.props\n\n    return (\n      <div className={styles['root']}>\n        <BoardListComponent\n          userId={userId}\n          userName={userName}\n          noBoard={noBoard}\n          listData={boardList}\n          isLoading={isLoading}\n          // createBoard={createBoardAction}\n          manageBoard={manageBoardAction} />\n        <div className={styles['add-icon-container']}>\n          <div className={styles['add-icon-subcontainer']}>\n            <div className={styles['add-icon-container']}>\n              <div className={styles['add-icon-subcontainer']}>\n                <div className={styles['add-icon']} onClick={createBoardAction} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default HubComponent\n","export const alertStyles = {\n  content: {\n    position: 'absolute',\n    padding: '20px 30px',\n    backgroundColor: '#FFF',\n    width: '90%',\n    height: 'auto',\n    maxWidth: '400px',\n    margin: '0px auto',\n    top: 'calc(50% - 100px)',\n    left: '0px',\n    right: '0px',\n    bottom: 'auto',\n    border: 'none',\n    borderRadius: '5px',\n    zIndex: 40,\n    boxShadow: '0 0 6px 0 rgba(0, 0, 0, 0.35)'\n  }\n}\n\nexport const createArticleModalStyles = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    width: '100%',\n    height: 'auto',\n    maxWidth: '414px',\n    margin: 'auto',\n    top: '170px',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    border: 'none',\n    borderRadius: '0px',\n    backgroundColor: 'none',\n    overflow: 'none' // for firefox\n  }\n}\n\nexport const editArticleModalStyles = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    width: '100%',\n    height: 'auto',\n    maxWidth: '414px',\n    margin: 'auto',\n    top: '170px',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    border: 'none',\n    borderRadius: '0px',\n    backgroundColor: 'none',\n    overflow: 'none' // for firefox\n  }\n}\n\nexport const createBoardModalStyles = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    width: '100%',\n    height: 'auto',\n    maxWidth: '414px',\n    margin: 'auto',\n    top: '78px',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    border: 'none',\n    borderRadius: '5px',\n    backgroundColor: 'none'\n  }\n}\n\nexport const manageBoardModalStyles = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    width: '100%',\n    height: 'auto',\n    maxWidth: '414px',\n    margin: 'auto',\n    top: '78px',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    border: 'none',\n    borderRadius: '0px',\n    backgroundColor: 'none'\n  }\n}\n\nexport const joinBoardModalStyles = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    width: '90%',\n    height: '256px',\n    maxWidth: '400px',\n    margin: '0px auto',\n    top: 'calc(50% - 128px)',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    border: 'none',\n    borderRadius: '5px',\n    backgroundColor: '#4C474E'\n  }\n}\n\nexport const nameCardModalStyles = {\n  content: {\n    position: 'relative',\n    padding: '0px',\n    height: '306px',\n    width: '396px',\n    maxWidth: '95%',\n    margin: 'auto',\n    top: 'calc(50% - 153px)',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    border: 'none',\n    borderRadius: '10px',\n    boxShadow: '0 0 10px 0 rgba(0, 0, 0, 0.5)'\n  }\n}\n\nexport const signupModalStyels = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    width: '100%',\n    height: '100%',\n    maxWidth: '414px',\n    margin: '0px auto',\n    top: '0px',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    borderRadius: '0px',\n    backgroundColor: '#4C474E'\n  }\n}\n\nexport const firstPopupModalStyels = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    width: '100%',\n    height: '100%',\n    maxWidth: '414px',\n    margin: '0px auto',\n    top: '0px',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    borderRadius: '0px',\n    backgroundColor: '#4C474E',\n    zIndex: 40\n  }\n}\n\nexport const privacySettingModalStyels = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    width: '100%',\n    height: '100%',\n    maxWidth: '414px',\n    margin: '0px auto',\n    top: '0px',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    borderRadius: '0px',\n    backgroundColor: '#4C474E',\n    zIndex: 40\n  }\n}\n\nexport const latestPageModalStyles = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    backgroundColor: '#FFF',\n    width: '90%',\n    height: 'calc(100% - 120px)',\n    maxWidth: 'calc(414px - 2px)',\n    margin: '0px auto',\n    top: '78px',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    border: 'none',\n    borderRadius: '5px',\n    zIndex: 40,\n    boxShadow: '0 0 6px 0 rgba(0, 0, 0, 0.35)'\n  }\n}\n\nexport const addDeviceCompleteStyles = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    backgroundColor: '#FFF',\n    width: '100%',\n    height: '128px',\n    maxWidth: '414px',\n    margin: '0px auto',\n    top: 'calc(50% - 100px)',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    border: 'none',\n    borderRadius: '0px',\n    zIndex: 40\n  }\n}\n\nexport const showOpLogModalStyels = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    width: '100%',\n    height: '100%',\n    maxWidth: '414px',\n    margin: '0px auto',\n    top: '0px',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    border: 'none',\n    borderRadius: '0px'\n  }\n}\n\nexport const scannerModalStyels = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    width: '100%',\n    height: '100%',\n    maxWidth: '414px',\n    margin: '0px auto',\n    top: '0px',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    border: 'none',\n    borderRadius: '0px'\n  }\n}\n\nexport const addDeviceModalStyels = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    width: '100%',\n    height: '100%',\n    maxWidth: '414px',\n    margin: '0px auto',\n    top: '0px',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    border: 'none',\n    borderRadius: '0px'\n  }\n}\n\nexport const multiDeviceModalStyels = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    backgroundColor: '#FFF',\n    width: '100%',\n    height: '100%',\n    maxWidth: '414px',\n    margin: '0px auto',\n    top: '0px',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    border: 'none',\n    borderRadius: '0px'\n  }\n}\n\nexport const settingMenuModalStyels = {\n  content: {\n    position: 'relative',\n    padding: '0px',\n    width: '90%',\n    maxWidth: '400px',\n    margin: 'auto',\n    top: 'calc(50% - 127px)',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    border: 'none',\n    borderRadius: '5px',\n    backgroundColor: '#FFFFFF',\n    boxShadow: '0 0 6px 0 rgba(0, 0, 0, 0.35)'\n  }\n}\n\nexport const boardActionModalStyels = {\n  content: {\n    position: 'absolute',\n    padding: '0px',\n    width: '90%',\n    height: '255px',\n    maxWidth: '400px',\n    margin: '0px auto',\n    top: 'calc(50% - 127px)',\n    left: '0px',\n    right: '0px',\n    bottom: '0px',\n    border: 'none',\n    borderRadius: '5px',\n    backgroundColor: '#FFFFFF',\n    boxShadow: '0 0 6px 0 rgba(0, 0, 0, 0.35)'\n  }\n}\n","import React, { PureComponent } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport Modal from 'react-modal'\n\nimport styles from './AlertComponent.module.css'\nimport * as modalConstants from '../constants/ModalConstants'\n\nclass AlertComponent extends PureComponent {\n  constructor (props, context) {\n    super(props, context)\n\n    this.handleDismiss = this.handleDismiss.bind(this)\n    this.handleShow = this.handleShow.bind(this)\n\n    this.state = {\n      show: props.show\n    }\n  }\n\n  handleDismiss () {\n    this.setState({ show: false })\n  }\n\n  handleShow () {\n    this.setState({ show: true })\n  }\n\n  render () {\n    const { show, alertData: { message, onClose, onConfirm } } = this.props\n\n    return (\n      <div className={styles['root']}>\n        {\n          (show) ? (\n            <Modal\n              overlayClassName={styles['overlay']}\n              style={modalConstants.alertStyles}\n              isOpen={show}\n              onRequestClose={null}\n              contentLabel='Alert Modal'>\n              <div className={styles['root']}>\n                {\n                  (message) ? (\n                    <div className={styles['message']}> {message} </div>\n                  ) : null\n                }\n                <div className={styles['action-section']}>\n                  {\n                    (onClose) ? (\n                      <div className={styles['close']} onClick={onClose}>\n                        <FormattedMessage\n                          id='alert-component.action1'\n                          defaultMessage='Cancel'\n                        />\n                      </div>\n                    ) : null\n                  }\n                  {\n                    (onConfirm) ? (\n                      <div className={styles['confirm']} onClick={onConfirm}>\n                        <FormattedMessage\n                          id='alert-component.action2'\n                          defaultMessage='Confirm'\n                        />\n                      </div>\n                    ) : null\n                  }\n                </div>\n              </div>\n            </Modal>\n          ) : null\n        }\n      </div>\n    )\n  }\n}\n\nexport default AlertComponent\n","import Immutable from 'immutable'\nimport { toCamelCase } from '../utils/utils'\n\n// init\nexport const init = ({ myId, myClass, myDuck, parentId, parentClass, parentDuck, ...params }) => {\n  return (dispatch, getState) => {\n    dispatch(initCore({ myId, myClass, myDuck, parentId, parentClass, parentDuck, ...params }))\n    if (parentId) { dispatch(addChild(parentId, parentClass, parentDuck, myId, myClass)) }\n  }\n}\n\nconst initCore = ({ myId, myClass, myDuck, parentId, parentClass, parentDuck, ...params }) => ({\n  myId,\n  myClass,\n  type: myDuck.defineType('INIT'),\n  parentId,\n  parentClass,\n  parentDuck,\n  ...params\n})\n\nexport const reduceInit = (state, action) => {\n  const { myId, myClass, parentId, parentClass, parentDuck, type, ...params } = action\n\n  let currentList = state.get('ids', Immutable.List())\n  let newList = currentList.push(myId)\n\n  return state.merge({ ids: newList, [myId]: { myClass, parentId, parentClass, parentDuck, ...params } })\n}\n\n// set-root\nexport const setRoot = (myId, myClass, appDuck) => ({\n  myId,\n  rootClass: myClass,\n  type: appDuck.defineType('SET_ROOT')\n})\n\nexport const reduceSetRoot = (state, action) => {\n  const { myId, rootClass } = action\n  return state.merge({ rootId: myId, rootClass })\n}\n\n// addChild\nexport const addChild = (myId, myClass, myDuck, childId, childClass) => ({\n  myId,\n  myClass,\n  type: myDuck.defineType('ADD_CHILD'),\n  childId,\n  childClass\n})\n\nexport const reduceAddChild = (state, action) => {\n  const { myId, childId, childClass } = action\n  let currentList = state.getIn([myId, 'children', childClass], Immutable.List())\n  let newList = currentList.push(childId)\n  return state.setIn([myId, 'children', childClass], newList)\n}\n\n// remove-childs\nexport const removeChilds = (myId, myClass, myDuck, childIds, childClass) => ({\n  myId,\n  myClass,\n  type: myDuck.defineType('REMOVE_CHILDS'),\n  childIds,\n  childClass\n})\n\nexport const reduceRemoveChilds = (state, action) => {\n  const { myId, childIds, childClass } = action\n  let childIdSet = new Set(childIds)\n  let currentList = state.getIn([myId, 'children', childClass], Immutable.List())\n  let newList = currentList.filter((eachId) => !childIdSet.has(eachId))\n  return state.setIn([myId, 'children', childClass], newList)\n}\n\n// remove\nexport const remove = (myIds, myClass, myDuck) => {\n  return (dispatch, getState) => {\n    let stateClass = toCamelCase(myClass)\n    let state = getState()[stateClass]\n    if (!state) return\n\n    // remove children from parents\n    let childIdInfosByParents = parseChildIdInfosByParents(state, myIds)\n    Object.keys(childIdInfosByParents).forEach((eachParentId) => {\n      const { parentClass, parentDuck, childIds } = childIdInfosByParents[eachParentId]\n      dispatch(removeChilds(eachParentId, parentClass, parentDuck, childIds, myClass))\n    })\n\n    // remove self\n    dispatch(removeCore(myIds, myClass, myDuck))\n  }\n}\n\nconst parseChildIdInfosByParents = (state, myIds) => {\n  let childIdInfosByParents = myIds.reduce((r, eachId, i) => {\n    let me = state.get(eachId)\n    if (!me) return r\n    let parentId = me.get('parentId')\n    if (!parentId) return r\n\n    if (!r.hasOwnProperty(parentId)) {\n      let parentClass = me.get('parentClass')\n      let parentDuck = me.get('parentDuck').toJS()\n      r[parentId] = { parentClass, parentDuck, childIds: [] }\n    }\n\n    r[parentId].childIds.push(eachId)\n    return r\n  }, {})\n\n  return childIdInfosByParents\n}\n\nconst removeCore = (myIds, myClass, myDuck) => ({\n  myIds,\n  myClass,\n  type: myDuck.defineType('REMOVE')\n})\n\nexport const reduceRemove = (state, action) => {\n  const { myIds } = action\n  let myIdSet = new Set(myIds)\n  let ids = state.get('ids', Immutable.List())\n\n  // set new ids\n  let newIds = ids.filter((eachId) => !myIdSet.has(eachId))\n  let newState = state.set('ids', newIds)\n\n  // delete items\n  myIds.forEach((eachId) => { newState = newState.delete(eachId) })\n\n  return newState\n}\n\n// set-data\nexport const setData = (myId, myClass, myDuck, data) => ({\n  myId,\n  myClass,\n  type: myDuck.defineType('SET_DATA'),\n  data\n})\n\nexport const reduceSetData = (state, action) => {\n  const { myId, data } = action\n  return state.mergeIn([myId], data)\n}\n\n// update-data\nexport const updateData = (myId, myClass, myDuck, data) => ({\n  myId,\n  myClass,\n  type: myDuck.defineType('UPDATE_DATA'),\n  data\n})\n\nexport const reduceUpdateData = (state, action) => {\n  const { myId, data } = action\n  return state.mergeDeepIn([myId], data)\n}\n\nexport const isNullTimeStamp = timestamp => {\n  return JSON.stringify(timestamp) === '{\"T\":0,\"NT\":0}'\n}\n\nexport const emptyTimeStamp = () => {\n  return {\n    T: Date.now() / 1000 | 0,\n    NT: 0\n  }\n}\n","import * as superagent from 'superagent-bluebird-promise'\nimport { createDuck } from 'redux-duck'\nimport config from '../config'\nimport Cookie from 'js-cookie'\nimport { queryToString, toJson } from '../utils/utils'\n\nconst { PTTAI_APP_ROOT, PTTAI_API_ROOT, AUTH_ROOT } = config\n\nexport const CALL_API = Symbol('Call API')\n\nconst myDuck = createDuck('middleware', 'API')\nconst REQUEST = myDuck.defineType('REQUEST')\nconst SUCCESS = myDuck.defineType('SUCCESS')\nconst FAILURE = myDuck.defineType('FAILURE')\n\nexport const API_TYPES = [REQUEST, SUCCESS, FAILURE]\n\nconst callApi = (endpoint, { query, method = 'get', params, files, json }, isWithCredentials = true) => {\n  // XXX hack for adding jsonrpc method info into endpoint\n  if (method === 'post' && json) {\n    endpoint = endpoint + json['method'].replace('_', '/')\n  }\n\n  if (endpoint.indexOf(PTTAI_API_ROOT) === -1 && endpoint.indexOf(PTTAI_APP_ROOT) === -1) {\n    endpoint = PTTAI_API_ROOT + endpoint\n  }\n\n  if (query) {\n    endpoint = `${endpoint}?${queryToString(query)}`\n  }\n\n  let request = superagent[method](endpoint)\n\n  if (files) {\n    for (let name in files) {\n      request = request.attach(name, files[name], files[name].name)\n    }\n    for (let k in params) {\n      request = request.field(k, params[k])\n    }\n  } else if (params) {\n    params = _stringifyParams(params)\n    request = request.set('Content-Type', 'application/x-www-form-urlencoded')\n    request = request.send(params)\n  } else if (json) {\n    request = request.send(json)\n  }\n\n  if (isWithCredentials) {\n    let csrftoken = Cookie.get('csrftoken') || ''\n    request = request.set({ 'X-CSRFToken': csrftoken })\n    request = request.withCredentials()\n  }\n\n  if (method === 'get' && files) {\n    // get binary files\n    return request\n      .responseType('arraybuffer')\n      .then((res) => {\n        console.log('middleware.api: after request: res:', res)\n\n        if (res.status !== 200) {\n          return Promise.reject(res)\n        }\n        return res.body\n      })\n      .catch((res, ...e) => {\n        console.error('middleware.api: unable to call api: res:', res, 'e:', e)\n        if (res && res.status === 401) {\n          let next_url = encodeURIComponent(window.location.href)\n          let url = `${AUTH_ROOT}/login?next=${next_url}`\n          return window.location.href = url\n        }\n\n        return Promise.reject(res)\n      })\n  } else {\n    return request\n      .then((res) => {\n        console.log('middleware.api: after request: res:', res)\n\n        if (res.status !== 200) {\n          return Promise.reject(res)\n        }\n\n        if (method === 'get' && files) {\n          return res.text\n        }\n        const json = toJson(res.text)\n        return json\n      })\n      .catch((res, ...e) => {\n        console.error('middleware.api: unable to call api: res:', res, 'e:', e)\n        if (res && res.status === 401) {\n          let next_url = encodeURIComponent(window.location.href)\n          let url = `${AUTH_ROOT}/login?next=${next_url}`\n          return window.location.href = url\n        }\n\n        return Promise.reject(res)\n      })\n  }\n}\n\nconst _stringifyParams = (params) => {\n  return Object.keys(params).reduce((r, x, i) => {\n    let val = params[x]\n    if (typeof val === 'object') {\n      val = JSON.stringify(val)\n    }\n    r[x] = val\n    return r\n  }, {})\n}\n\nexport default store => next => action => {\n  const callAPI = action[CALL_API]\n\n  if (typeof callAPI === 'undefined') {\n    return next(action)\n  }\n\n  let { endpoint, method, query, params, files, json } = callAPI\n  const { bailout } = callAPI\n  let types = typeof callAPI.types === 'undefined' ? API_TYPES : callAPI.types\n\n  if (typeof endpoint === 'function') {\n    endpoint = endpoint(store.getState())\n  }\n\n  if (typeof endpoint !== 'string') {\n    throw new Error('Specify a string endpoint URL.')\n  }\n\n  if (!Array.isArray(types) || types.length !== 3) {\n    throw new Error('Expected an array of three action types.')\n  }\n\n  if (!types.every(type => typeof type === 'string')) {\n    throw new Error('Expected action types to be strings. types:', types)\n  }\n\n  if (typeof bailout !== 'undefined' && typeof bailout !== 'function') {\n    throw new Error('Expected bailout to either be undefined or a function.')\n  }\n\n  if (bailout && bailout(store.getState())) {\n    return Promise.resolve()\n  }\n\n  let actionWith = (data) => {\n    const finalAction = Object.assign({}, action, data)\n    delete finalAction[CALL_API]\n    return finalAction\n  }\n\n  const [requestType, successType, failureType] = types\n\n  next(actionWith({ type: requestType }))\n\n  return callApi(endpoint, { method, query, params, files, json }).then(\n    response => {\n      console.log('middleware: after callApi: response:', response)\n      return next(actionWith({\n        response,\n        query,\n        type: successType\n      }))\n    },\n    error => {\n      console.log('middleware: after callApi: error:', error)\n      return next(actionWith({\n        type: failureType,\n        error: error.message || 'Something bad happened'\n      }))\n    }\n  )\n}\n","import { PTTAI_APP_ROOT } from '../config'\nimport { Base64 } from 'js-base64'\n\nimport * as api from '../middleware/api'\nimport { getUUID } from '../utils/utils'\n\nimport { LIST_ORDER_PREV, LIST_ORDER_NEXT } from '../constants/Constants'\n\n/*                      */\n/*  Content - Boards    */\n/*                      */\n\nexport const createBoard = (title) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_createBoard', 'params': [b64encode(title), true] }\n    }\n  }\n}\n\nexport const getBoard = (boardId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_getBoard', 'params': [boardId] }\n    }\n  }\n}\n\nexport const getBoardUrl = (boardId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_showBoardURL', 'params': [boardId] }\n    }\n  }\n}\n\nexport const getBoards = (startBoardId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_getBoardList', 'params': [startBoardId, limit, LIST_ORDER_NEXT] }\n    }\n  }\n}\n\nexport const joinBoard = (boardUrl) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_joinBoard', 'params': [boardUrl] }\n    }\n  }\n}\n\nexport const getBoardRequest = (entityID) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_getBoardRequests', 'params': [entityID] }\n    }\n  }\n}\n\nexport const markBoard = (boardId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_markBoardSeen', 'params': [boardId] }\n    }\n  }\n}\n\nexport const setBoardName = (boardId, boardName) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_setTitle', 'params': [boardId, b64encode(boardName)] }\n    }\n  }\n}\n\nexport const getMemberList = (boardId, starUserId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_getMemberList', 'params': [boardId, starUserId, limit, LIST_ORDER_PREV] }\n    }\n  }\n}\n\nexport const leaveBoard = (boardId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_leaveBoard', 'params': [boardId] }\n    }\n  }\n}\n\nexport const deleteBoard = (boardId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_deleteBoard', 'params': [boardId] }\n    }\n  }\n}\n\n/*                      */\n/*  Content - Articles  */\n/*                      */\n\nexport const createArticle = (boardId, title, articleArray, mediaStr) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_createArticle', 'params': [boardId, b64encode(title), articleArray.map(b64encode), mediaStr] }\n    }\n  }\n}\n\nexport const updateArticle = (boardId, articleId, articleArray, mediaIds) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_updateArticle', 'params': [boardId, articleId, articleArray.map(b64encode), mediaIds] }\n    }\n  }\n}\n\nexport const deleteArticle = (boardId, articleId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_deleteArticle', 'params': [boardId, articleId] }\n    }\n  }\n}\n\nexport const getArticle = (boardId, articleId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_getArticle', 'params': [boardId, articleId] }\n    }\n  }\n}\n\nexport const getArticles = (boardId, startArticleId, limit, listOrder = LIST_ORDER_NEXT) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_getArticleList', 'params': [boardId, startArticleId, limit, listOrder] }\n    }\n  }\n}\n\nexport const getArticleSummaryByIds = (boardId, articleInfos) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_getArticleSummaryByIDs', 'params': [boardId, articleInfos] }\n    }\n  }\n}\n\nexport const markArticle = (boardId, articleId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_markArticleSeen', 'params': [boardId, articleId] }\n    }\n  }\n}\n\nexport const removeBoardMember = (boardId, userId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_deleteMember', 'params': [boardId, userId] }\n    }\n  }\n}\n\n/*                      */\n/*  Content - Content   */\n/*                      */\n\nexport const getContent = (boardId, articleId, subContentId, contentType, blockId, limit, listOrder) => {\n/* Only fetch article, set limit = 0        */\n/* Only fetch comment, set contentType = 1  */\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_getArticleBlockList', 'params': [boardId, articleId, subContentId, contentType, blockId, limit, listOrder] }\n    }\n  }\n}\n\nexport const createComment = (boardId, articleId, comment, mediaId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_createComment', 'params': [boardId, articleId, 0, b64encode(comment), mediaId] }\n    }\n  }\n}\n\nexport const deleteComment = (boardId, articleId, commentId, mediaId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_deleteComment', 'params': [boardId, articleId, commentId] }\n    }\n  }\n}\n\n/*           */\n/*  Friend   */\n/*           */\n\nexport const getFriend = (friendId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_getFriendByFriendID', 'params': [friendId] }\n    }\n  }\n}\n\nexport const getFriends = (startFriendId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_getFriendList', 'params': [startFriendId, limit] }\n    }\n  }\n}\n\nexport const addNewFriend = (name) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_joinFriend', 'params': [name] }\n    }\n  }\n}\n\nexport const markFriendSeen = (chatId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_markFriendSeen', 'params': [chatId] }\n    }\n  }\n}\n\nexport const getFriendRequest = (entityID) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_getFriendRequests', 'params': [entityID] }\n    }\n  }\n}\n\nexport const deleteFriend = (chatId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_deleteFriend', 'params': [chatId] }\n    }\n  }\n}\n\n/*           */\n/*  Message  */\n/*           */\n\nexport const getMessageList = (chatId, startMessageId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_getMessageList', 'params': [chatId, startMessageId, limit, LIST_ORDER_PREV] }\n    }\n  }\n}\n\nexport const getMessageBlockList = (friendId, messageId, subContentId, contentType, blockID, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_getMessageBlockList', 'params': [friendId, messageId, subContentId, contentType, blockID, limit] }\n    }\n  }\n}\n\nexport const postMessage = (friendId, message, mediaIds) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_createMessage', 'params': [friendId, message.map(b64encode), mediaIds] }\n    }\n  }\n}\n\n/*           */\n/*  Users    */\n/*           */\n\nexport const getUserNameByIds = (userIds) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'account_getUserNameByIDs', 'params': [userIds] }\n    }\n  }\n}\n\nexport const getUserName = (userId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'account_getUserName', 'params': [userId] }\n    }\n  }\n}\n\nexport const getUserImgByIds = (userIds) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'account_getUserImgByIDs', 'params': [userIds] }\n    }\n  }\n}\n\nexport const getUserImg = (userId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'account_getUserImg', 'params': [userId] }\n    }\n  }\n}\n\nexport const editName = (name) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_setMyName', 'params': [b64encode(name)] }\n    }\n  }\n}\n\nexport const getUsersInfo = (userIds) => {\n  return dispatch => Promise.all([\n    dispatch(getUserNameByIds(userIds))\n      .then(({ response: { result }, type, query, error }) => {\n        if (error) {\n          return { 'error': true, 'key': 'userName', 'value': error }\n        } else {\n          return { 'error': false, 'key': 'userName', 'value': result }\n        }\n      }),\n    dispatch(getUserImgByIds(userIds))\n      .then(({ response: { result }, type, query, error }) => {\n        if (error) {\n          return { 'error': true, 'key': 'userImg', 'value': error }\n        } else {\n          return { 'error': false, 'key': 'userImg', 'value': result }\n        }\n      }),\n    dispatch(getNameCardByIds(userIds))\n      .then(({ response: { result }, type, query, error }) => {\n        if (error) {\n          return { 'error': true, 'key': 'userNameCard', 'value': error }\n        } else {\n          return { 'error': false, 'key': 'userNameCard', 'value': result }\n        }\n      })\n  ])\n}\n\nexport const editProfileImg = (myImg) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_setMyImage', 'params': [myImg] }\n    }\n  }\n}\n\nexport const getNameCard = (userId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'account_getNameCard', 'params': [userId] }\n    }\n  }\n}\n\nexport const getNameCardByIds = (userIds) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'account_getNameCardByIDs', 'params': [userIds] }\n    }\n  }\n}\n\nexport const setMyNameCard = (content) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_setMyNameCard', 'params': [b64encode(content)] }\n    }\n  }\n}\n\nexport const getMe = (entityID) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_getRawMe', 'params': [entityID] }\n    }\n  }\n}\n\n/*           */\n/*  Oplog    */\n/*           */\n\nexport const getPttOpLogList = (logId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'ptt_getPttOplogList', 'params': [logId, limit, LIST_ORDER_PREV] }\n    }\n  }\n}\n\nexport const getPttMasterOpLog = (logId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_getMasterOplogList', 'params': [logId, limit, LIST_ORDER_NEXT] }\n    }\n  }\n}\n\nexport const getPttMeOpLog = (logId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_getMeOplogList', 'params': [logId, limit, LIST_ORDER_NEXT] }\n    }\n  }\n}\n\nexport const getPttOpLogSeen = () => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'ptt_getPttOplogSeen', 'params': [] }\n    }\n  }\n}\n\nexport const markPttOpLogSeen = () => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'ptt_markPttOplogSeen', 'params': [] }\n    }\n  }\n}\n\n/*               */\n/*  Frined List  */\n/*               */\n\nexport const getFriendListByMsgCreateTS = (T, NT, limit, listOrder = LIST_ORDER_PREV) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_getFriendListByMsgCreateTS', 'params': [T, NT, limit, listOrder] }\n    }\n  }\n}\n\nexport const getFriendListSeen = () => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_getFriendListSeen', 'params': [] }\n    }\n  }\n}\n\nexport const markFriendListSeen = () => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_markFriendListSeen', 'params': [] }\n    }\n  }\n}\n\nexport const getPeers = () => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'ptt_getPeers', 'params': [] }\n    }\n  }\n}\n\nexport const getContentPeers = (entityID) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_getPeers', 'params': [entityID] }\n    }\n  }\n}\n\nexport const getFriendPeers = (entityID) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_getPeers', 'params': [entityID] }\n    }\n  }\n}\n\nexport const getContentBoardOpLog = (boardId, logId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_getBoardOplogList', 'params': [boardId, logId, limit, LIST_ORDER_NEXT] }\n    }\n  }\n}\n\nexport const getContentOpkeyOpLog = (boardId, logId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_getOpKeyOplogList', 'params': [boardId, logId, limit, LIST_ORDER_NEXT] }\n    }\n  }\n}\n\nexport const getContentMasterOpLog = (boardId, logId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_getMasterOplogList', 'params': [boardId, logId, limit, LIST_ORDER_NEXT] }\n    }\n  }\n}\n\nexport const getContentMemberOpLog = (boardId, logId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'content_getMemberOplogList', 'params': [boardId, logId, limit, LIST_ORDER_NEXT] }\n    }\n  }\n}\n\nexport const getFriendFriendOpLog = (entityId, logId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_getFriendOplogList', 'params': [entityId, logId, limit, LIST_ORDER_NEXT] }\n    }\n  }\n}\n\nexport const getFriendMasterOpLog = (entityId, logId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_getMasterOplogList', 'params': [entityId, logId, limit, LIST_ORDER_NEXT] }\n    }\n  }\n}\n\nexport const getFriendMemberOpLog = (entityId, logId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_getMemberOplogList', 'params': [entityId, logId, limit, LIST_ORDER_NEXT] }\n    }\n  }\n}\n\nexport const getFriendOpKeyOpLog = (entityId, logId, limit) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'friend_getOpKeyOplogList', 'params': [entityId, logId, limit, LIST_ORDER_NEXT] }\n    }\n  }\n}\n\nexport const getLastAnnounceP2PTS = () => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'ptt_getLastAnnounceP2PTS', 'params': [] }\n    }\n  }\n}\n\n/*                */\n/*  Multi-device  */\n/*                */\n\nexport const getMyNodes = () => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_getMyNodes', 'params': [] }\n    }\n  }\n}\n\nexport const showMyURL = () => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_showMeURL', 'params': [] }\n    }\n  }\n}\n\nexport const showURL = () => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_showURL', 'params': [] }\n    }\n  }\n}\n\nexport const showMyKey = () => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_showMyKey', 'params': [] }\n    }\n  }\n}\n\nexport const showMe = () => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_get', 'params': [] }\n    }\n  }\n}\n\nexport const joinMe = (nodeId, key) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: '/',\n      method: 'post',\n      json: { 'id': getUUID(false), 'method': 'me_joinMe', 'params': [nodeId, key, false] }\n    }\n  }\n}\n\n/*                */\n/*  Multi-media   */\n/*                */\n\nexport const uploadImg = (boardId, image) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: PTTAI_APP_ROOT + '/api/upload/' + boardId,\n      method: 'post',\n      files: { 'file': image.file }\n    }\n  }\n}\n\nexport const uploadFile = (boardId, file) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: PTTAI_APP_ROOT + '/api/uploadfile/' + boardId,\n      method: 'post',\n      files: { 'file': file.file }\n    }\n  }\n}\n\nexport const downloadFile = (boardId, mediaId) => {\n  return {\n    [api.CALL_API]: {\n      endpoint: PTTAI_APP_ROOT + '/api/file/' + boardId + '/' + mediaId,\n      method: 'get',\n      files: { 'gzip': true },\n      gzip: true\n    }\n  }\n}\n\n/*              */\n/*  Utilities   */\n/*              */\n\nexport const deserialize = (data) => {\n  return Object.keys(data).reduce((r, eachIdx, i) => {\n    let v = data[eachIdx]\n    if (typeof data[eachIdx] === 'string' && !eachIdx.endsWith('ID')) {\n      v = b64decode(data[eachIdx])\n    }\n    r[eachIdx] = v\n    return r\n  }, {})\n}\n\nexport const serialize = (data) => {\n  return Object.keys(data).reduce((r, eachIdx, i) => {\n    let v = data[eachIdx]\n    if (typeof data[eachIdx] === 'string' && !eachIdx.endsWith('ID')) {\n      v = b64encode(data[eachIdx])\n    }\n    r[eachIdx] = v\n    return r\n  }, {})\n}\n\nexport const b64encodeByte = (str) => {\n  return Base64.btoa(str)\n}\n\nexport const b64encode = (str) => {\n  return Base64.encode(str)\n}\n\nexport const b64decode = (str) => {\n  return Base64.decode(str)\n}\n\nexport const b64decodeByte = (str) => {\n  return Base64.atob(str)\n}\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport { EMPTY_ID,\n  STATUS_ARRAY,\n  // NUM_BOARD_PER_REQ,\n  DEFAULT_USER_NAME,\n  MESSAGE_TYPE_INVITE,\n  BOARD_TYPE_PRIVATE } from '../constants/Constants'\n\nimport * as utils from './utils'\nimport * as serverUtils from './ServerUtils'\n\nexport const myClass = 'HUB_PAGE'\n\nexport const myDuck = createDuck(myClass, 'hub_page')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\nconst ADD_BOARD = myDuck.defineType('ADD_BOARD')\nconst ADD_BOARDS = myDuck.defineType('ADD_BOARDS')\nconst DELETE_BOARD = myDuck.defineType('DELETE_BOARD')\n\nexport const init = (myId, parentId, parentClass, parentDuck) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, parentId, parentClass, parentDuck }))\n  }\n}\n\n/*                    */\n/*  Get Board List    */\n/*                    */\n\nexport const getBoardList = (myId, isFirstFetch, limit) => {\n  return (dispatch, getState) => {\n    if (isFirstFetch) {\n      dispatch(preprocessSetStartLoading(myId))\n    }\n\n    return Promise.all([\n      dispatch(serverUtils.getBoards(EMPTY_ID, limit)),\n      dispatch(serverUtils.getBoardRequest(EMPTY_ID))\n    ]).then(([{ response: { result } }, { response: reqResult }]) => {\n      let creatorIds = result.map((each) => each.C)\n\n      dispatch(serverUtils.getUsersInfo(creatorIds))\n        .then((usersInfo) => {\n          dispatch(postprocessGetBoardList(myId, result, reqResult.result, usersInfo, isFirstFetch))\n          if (isFirstFetch) {\n            dispatch(postprocessSetFinshLoading(myId))\n          }\n        })\n    })\n  }\n}\n\nconst postprocessGetBoardList = (myId, result, reqResult, usersInfo, isFirstFetch) => {\n  result = result.map((each) => {\n    return {\n      CreatorID: each.C,\n      ...each\n    }\n  })\n\n  result = result.map(serverUtils.deserialize)\n  reqResult = reqResult.map(serverUtils.deserialize)\n\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  let boardList = result.map(each => {\n    let userId = each.CreatorID\n    let userNameMap = usersInfo['userName'] || {}\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n\n    return {\n      BoardType: each.BT,\n      ID: each.ID,\n      Status: each.S,\n      Title: each.Title,\n      ArticleCreateTS: each.ArticleCreateTS ? each.ArticleCreateTS : utils.emptyTimeStamp(),\n      UpdateTS: each.UpdateTS ? each.UpdateTS : utils.emptyTimeStamp(),\n      LastSeen: each.LastSeen ? each.LastSeen : utils.emptyTimeStamp(),\n      CreatorID: each.CreatorID,\n      creatorName: userName,\n      joinStatus: 3\n    }\n  })\n\n  let joinReqs = reqResult.map((eachJoin) => {\n    return {\n      CreatorID: eachJoin.C,\n      NodeID: eachJoin.n,\n      Name: eachJoin.N,\n      Status: eachJoin.S\n    }\n  })\n\n  joinReqs.forEach((join, index) => {\n    let joinBoardIndex = boardList.findIndex((e) => e.ID === join.CreatorID)\n    if (joinBoardIndex >= 0) {\n      boardList[joinBoardIndex].joinStatus = join.Status\n    } else {\n      let userId = EMPTY_ID\n      let userNameMap = usersInfo['userName'] || {}\n      let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n\n      boardList.push({\n        BoardType: BOARD_TYPE_PRIVATE,\n        ID: EMPTY_ID,\n        Status: 0,\n        Title: join.Name,\n        ArticleCreateTS: utils.emptyTimeStamp(),\n        UpdateTS: utils.emptyTimeStamp(),\n        LastSeen: utils.emptyTimeStamp(),\n        CreatorID: join.CreatorID,\n        creatorName: userName,\n        joinStatus: join.Status\n      })\n    }\n  })\n\n  boardList = boardList.filter((each) => { return each.Status !== STATUS_ARRAY.indexOf('StatusMigrated') })\n  boardList = boardList.filter((each) => { return each.BoardType === BOARD_TYPE_PRIVATE })\n\n  if (boardList.length === 0 && isFirstFetch) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { boardList: [], noBoard: true }\n    }\n  } else if (boardList.length === 0 && !isFirstFetch) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: {}\n    }\n  } else {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { boardList: boardList, noBoard: false }\n    }\n  }\n}\n\nexport const getMoreBoards = (myId, startBoardId, limit) => {\n  return (dispatch, getState) => {\n    dispatch(preprocessSetStartLoading(myId))\n    dispatch(serverUtils.getBoards(startBoardId, limit))\n      .then(({ response: { result }, type, query, error }) => {\n        if (!result) {\n          dispatch(postprocessGetMoreBoards(myId, null, null))\n          dispatch(postprocessSetFinshLoading(myId))\n        }\n\n        let creatorIds = result.map((each) => each.C)\n        dispatch(serverUtils.getUsersInfo(creatorIds))\n          .then((usersInfo) => {\n            dispatch(postprocessGetMoreBoards(myId, result, usersInfo))\n            dispatch(postprocessSetFinshLoading(myId))\n          })\n      })\n  }\n}\n\nconst postprocessGetMoreBoards = (myId, result, usersInfo) => {\n  if (!result || result.length === 0) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { allBoardsLoaded: true }\n    }\n  }\n\n  result = result.map((each) => {\n    return {\n      CreatorID: each.C,\n      ...each\n    }\n  })\n\n  result = result.map(serverUtils.deserialize)\n  result = result.slice(1)\n\n  let boardList = result.map(each => {\n    let userId = each.CreatorID\n    let userNameMap = usersInfo['userName'] || {}\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n\n    return {\n      ID: each.ID,\n      creatorName: userName,\n      Status: each.S,\n      Title: each.Title,\n      ArticleCreateTS: each.ArticleCreateTS ? each.ArticleCreateTS : utils.emptyTimeStamp(),\n      LastSeen: each.LastSeen ? each.LastSeen : utils.emptyTimeStamp(),\n      UpdateTS: each.UpdateTS ? each.UpdateTS : utils.emptyTimeStamp(),\n      joinStatus: 3,\n      BoardType: each.BT\n    }\n  })\n\n  boardList = boardList.filter((each) => { return each.Status !== STATUS_ARRAY.indexOf('StatusMigrated') })\n  boardList = boardList.filter((each) => { return each.BoardType === BOARD_TYPE_PRIVATE })\n\n  if (boardList.length === 0) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { allBoardsLoaded: true }\n    }\n  } else {\n    return {\n      myId,\n      myClass,\n      type: ADD_BOARDS,\n      data: { boards: boardList }\n    }\n  }\n}\n\nexport const _addMoreBoards = (state, action) => {\n  const { myId, data: { boards } } = action\n\n  let boardList = state.getIn([myId, 'boardList'], Immutable.List())\n  return state.setIn([myId, 'boardList'], boardList.concat(boards))\n}\n\n/*                      */\n/*  Update Board List   */\n/*                      */\n\nexport const setBoardName = (myId, boardId, name, friendInvited) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.setBoardName(boardId, name))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(serverUtils.getBoardUrl(boardId))\n          .then(({ response: boardUrlResult, type, query, error }) => {\n            const boardJoinKey = {\n              C: boardUrlResult.result.C,\n              ID: boardUrlResult.result.ID,\n              Pn: boardUrlResult.result.Pn,\n              T: boardUrlResult.result.T,\n              URL: boardUrlResult.result.URL,\n              UpdateTS: boardUrlResult.result.UT ? boardUrlResult.result.UT : utils.emptyTimeStamp(),\n              expirePeriod: boardUrlResult.result.e\n            }\n\n            let inviteMessages = Object.keys(friendInvited).filter(fID => friendInvited[fID]).map(friendId => {\n              let chatId = friendInvited[friendId]\n              let message = {\n                type: MESSAGE_TYPE_INVITE,\n                value: `<div data-action-type=\"join-board\" data-board-id=\"${boardId}\" data-board-name=\"${name}\" data-join-key=\"${boardJoinKey.URL}\" data-update-ts=\"${boardJoinKey.UpdateTS.T}\" data-expiration=\"${boardJoinKey.expirePeriod}\"></div>`\n              }\n              return {\n                chatId: chatId,\n                message: JSON.stringify(message)\n              }\n            })\n\n            dispatch(sentInviteMessages(inviteMessages))\n              .then(({ response: inviteResult, type, error, query }) => {\n                // dispatch(postprocessCreateBoard(myId, name, result, userName))\n              })\n          })\n\n        // dispatch(serverUtils.getBoards(EMPTY_ID, NUM_BOARD_PER_REQ))\n        //   .then(({response: {result}, type, query, error}) => {\n        //     dispatch(serverUtils.getBoardRequest(EMPTY_ID))\n        //       .then(({response: reqResult, type, query, error}) => {\n        //         let creatorIds = result.map((each) => each.C)\n        //         dispatch(serverUtils.getUsersInfo(creatorIds))\n        //           .then((usersInfo) => {\n        //             dispatch(postprocessGetBoardList(myId, result, reqResult.result, usersInfo, false))\n        //           })\n        //       })\n        //   })\n      })\n  }\n}\n\nfunction sentInviteMessages (inviteMessages) {\n  return dispatch => Promise.all(inviteMessages.map((invite) => {\n    return dispatch(serverUtils.postMessage(invite.chatId, [invite.message], []))\n      .then(({ response: { result }, type, query, error }) => {\n        return { 'chatId': invite.chatId }\n      })\n  }))\n}\n\nexport const addBoard = (myId, name, userName, friendInvited) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.createBoard(name))\n      .then(({ response: { result }, type, query, error }) => {\n        const boardId = result.ID\n        dispatch(serverUtils.getBoardUrl(boardId))\n          .then(({ response: boardUrlResult, type, query, error }) => {\n            const boardJoinKey = {\n              C: boardUrlResult.result.C,\n              ID: boardUrlResult.result.ID,\n              Pn: boardUrlResult.result.Pn,\n              T: boardUrlResult.result.T,\n              URL: boardUrlResult.result.URL,\n              UpdateTS: boardUrlResult.result.UT ? boardUrlResult.result.UT : utils.emptyTimeStamp(),\n              expirePeriod: boardUrlResult.result.e\n            }\n\n            let inviteMessages = Object.keys(friendInvited).filter(fID => friendInvited[fID]).map(friendId => {\n              let chatId = friendInvited[friendId]\n              let message = {\n                type: MESSAGE_TYPE_INVITE,\n                value: `<div data-action-type=\"join-board\" data-board-id=\"${boardId}\" data-board-name=\"${name}\" data-join-key=\"${boardJoinKey.URL}\" data-update-ts=\"${boardJoinKey.UpdateTS.T}\" data-expiration=\"${boardJoinKey.expirePeriod}\"></div>`\n              }\n              return {\n                chatId: chatId,\n                message: JSON.stringify(message)\n              }\n            })\n\n            dispatch(sentInviteMessages(inviteMessages))\n              .then(({ response: inviteResult, type, error, query }) => {\n                dispatch(postprocessCreateBoard(myId, name, result, userName))\n              })\n          })\n      })\n  }\n}\n\nconst postprocessCreateBoard = (myId, name, result, userName) => {\n  result = serverUtils.deserialize(result)\n\n  const newBoard = {\n    ID: result.ID,\n    Status: 0,\n    Title: name,\n    creatorName: userName,\n    ArticleCreateTS: utils.emptyTimeStamp(),\n    UpdateTS: utils.emptyTimeStamp(),\n    LastSeen: utils.emptyTimeStamp(),\n    joinStatus: 3,\n    BoardType: BOARD_TYPE_PRIVATE\n  }\n\n  return {\n    myId,\n    myClass,\n    type: ADD_BOARD,\n    data: { board: newBoard, noBoard: false }\n  }\n}\n\nexport const _addBoard = (state, action) => {\n  const { myId, data: { board, noBoard } } = action\n\n  state = state.setIn([myId, 'noBoard'], noBoard)\n  state = state.updateIn([myId, 'boardList'], arr => arr.push(Immutable.Map(board)))\n\n  return state\n}\n\nexport const joinBoard = (myId, boardUrl, callBack) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.joinBoard(boardUrl))\n      .then(({ response: { result, error }, type, query }) => {\n        if (error) {\n          callBack({ error: true, data: error.message, boardUrl: boardUrl })\n        } else {\n          callBack({ error: false, data: result })\n        }\n        let creatorIds = [result.C]\n        dispatch(serverUtils.getUsersInfo(creatorIds))\n          .then((usersInfo) => {\n            dispatch(postprocessJoinBoard(myId, boardUrl, result, usersInfo))\n          })\n      })\n  }\n}\n\nconst postprocessJoinBoard = (myId, boardUrl, result, usersInfo) => {\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  let userId = result.C\n  let userNameMap = usersInfo['userName'] || {}\n  let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n\n  const joinedBoard = {\n    ID: result.n,\n    Status: result.S,\n    creatorName: userName,\n    Title: serverUtils.b64decode(result.N),\n    ArticleCreateTS: utils.emptyTimeStamp(),\n    LastSeen: utils.emptyTimeStamp(),\n    CreateTS: utils.emptyTimeStamp(),\n    UpdateTS: utils.emptyTimeStamp(),\n    joinStatus: 0,\n    BoardType: BOARD_TYPE_PRIVATE\n  }\n\n  return {\n    myId,\n    myClass,\n    type: ADD_BOARD,\n    data: { board: joinedBoard }\n  }\n}\n\nexport const deleteBoard = (myId, boardId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.deleteBoard(boardId))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessDeleteBoard(myId, boardId))\n      })\n  }\n}\n\nconst postprocessDeleteBoard = (myId, boardId) => {\n  return {\n    myId,\n    myClass,\n    type: DELETE_BOARD,\n    data: { boardId: boardId }\n  }\n}\n\nexport const _deleteBoard = (state, action) => {\n  const { myId, data: { boardId } } = action\n\n  let boardList = state.getIn([myId, 'boardList'], Immutable.List())\n  boardList = boardList.filter(each => { return each.get('ID') !== boardId })\n\n  return state.setIn([myId, 'boardList'], boardList)\n}\n\n/*             */\n/*  Loading    */\n/*             */\n\nexport const preprocessSetStartLoading = (myId) => {\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { isLoading: true }\n  }\n}\n\nexport const postprocessSetFinshLoading = (myId) => {\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { isLoading: false }\n  }\n}\n\nexport const clearData = (myId) => {\n  return (dispatch, getState) => {\n    dispatch(postprocessClearData(myId))\n  }\n}\n\nconst postprocessClearData = (myId) => {\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { boardList: [], noBoard: false, isLoading: false, allBoardsLoaded: false }\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData,\n  [ADD_BOARD]: _addBoard,\n  [ADD_BOARDS]: _addMoreBoards,\n  [DELETE_BOARD]: _deleteBoard\n}, Immutable.Map())\n\nexport default reducer\n","import { createDuck } from 'redux-duck'\n\nexport const myClass = 'MODAL_CONTAINER'\n\nexport const myDuck = createDuck(myClass, 'Modal_Container')\n\nconst OPEN_MODAL = myDuck.defineType('OPEN_MODAL')\nconst CLOSE_MODAL = myDuck.defineType('CLOSE_MODAL')\nconst SET_SUBMIT = myDuck.defineType('SET_SUBMIT')\nconst SET_INPUT = myDuck.defineType('SET_INPUT')\n\nconst modalState = {\n  currentModal: null\n}\n\nexport const openModal = (modalType) => ({\n  modalType,\n  myClass,\n  type: OPEN_MODAL\n})\n\nconst _openModal = (state, action) => {\n  const { modalType } = action\n  return {\n    ...state,\n    currentModal: modalType\n  }\n}\n\nexport const closeModal = () => ({\n  myClass,\n  type: CLOSE_MODAL\n})\n\nconst _closeModal = (state, action) => {\n  return {\n    ...state,\n    currentModal: null\n  }\n}\n\nexport const setSubmit = (modalSubmit) => ({\n  modalSubmit,\n  myClass,\n  type: SET_SUBMIT\n})\n\nconst _setSubmit = (state, action) => {\n  const { modalSubmit } = action\n\n  return {\n    ...state,\n    modalSubmit: modalSubmit\n  }\n}\n\nexport const setInput = (data) => ({\n  data,\n  myClass,\n  type: SET_INPUT\n})\n\nconst _setInput = (state, action) => {\n  const { data } = action\n\n  return {\n    ...state,\n    modalInput: data\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [OPEN_MODAL]: _openModal,\n  [CLOSE_MODAL]: _closeModal,\n  [SET_SUBMIT]: _setSubmit,\n  [SET_INPUT]: _setInput\n}, modalState)\n\nexport default reducer\n","import config from '../config'\nimport ReactGA from 'react-ga'\n\nconst GA_KEY = 'ga_is_on_for_pttai'\n\nlet googleAnalytics = (() => {\n  let _initialized = false\n\n  let _shouldTrack = () => {\n    return localStorage.hasOwnProperty(GA_KEY) && JSON.parse(localStorage.getItem(GA_KEY)).track === 'true'\n  }\n\n  let _initialize = (userId) => {\n    // Make sure it is initialized only once\n    if (!_shouldTrack()) return false\n\n    if (_initialized) return true\n\n    let gaUserId = userId || (\n      localStorage.hasOwnProperty(GA_KEY) ? JSON.parse(localStorage.getItem(GA_KEY)).userId : 'no-user-id'\n    )\n\n    ReactGA.initialize(config.GA_TRACKING_ID, {\n      debug: true,\n      titleCase: false,\n      testMode: false,\n      gaOptions: {\n        userId: gaUserId\n      }\n    })\n\n    _initialized = true\n    console.log('[GA] setup with ', gaUserId)\n\n    return true\n  }\n\n  return {\n\n    isConfigured: () => {\n      return localStorage.hasOwnProperty(GA_KEY)\n    },\n    getConfig: () => {\n      if (localStorage.hasOwnProperty(GA_KEY)) {\n        return JSON.parse(localStorage.getItem(GA_KEY))\n      }\n      return {}\n    },\n    saveConfig: (userId, doTrack) => {\n      localStorage.setItem(GA_KEY, JSON.stringify({\n        track: doTrack.toString(),\n        userId: userId\n      }))\n      console.log('[GA] config saved to localStorage: ', userId, ', track:', doTrack)\n    },\n    clearConfig: () => {\n      if (localStorage.hasOwnProperty(GA_KEY)) {\n        localStorage.removeItem(GA_KEY)\n        console.log('[GA] cleared on localStorage')\n      }\n    },\n    initialize: (userId) => {\n      return _initialize(userId)\n    },\n    firePageView: (path) => {\n      if (!_shouldTrack()) return\n\n      if (!_initialized) _initialize()\n\n      let urlPath = path || window.location.pathname + window.location.search\n\n      ReactGA.pageview(urlPath)\n      console.log('[GA] pageview: ', urlPath)\n    },\n    fireEventOnProb: (category, action, probability) => {\n      if (Math.random() > probability) return\n\n      if (!_shouldTrack()) return\n\n      if (!_initialized) _initialize()\n\n      ReactGA.event({\n        category: category,\n        action: action || 'no-action-name'\n      })\n      console.log('[GA] event: ', category, action)\n    },\n    fireEvent: (category, action) => {\n      if (!_shouldTrack()) return\n\n      if (!_initialized) _initialize()\n\n      ReactGA.event({\n        category: category,\n        action: action || 'no-action-name'\n      })\n      console.log('[GA] event: ', category, action)\n    }\n  }\n})()\n\nexport default googleAnalytics\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Immutable from 'immutable'\nimport { FormattedMessage } from 'react-intl'\n\nimport Empty from '../components/Empty'\nimport HubComponent from '../components/HubComponent'\nimport AlertComponent from '../components/AlertComponent'\n\nimport * as doHubPage from '../reducers/HubPage'\nimport * as doModalContainer from '../reducers/ModalContainer'\n\nimport * as constants from '../constants/Constants'\n\nimport { getRoot } from '../utils/utils'\nimport googleAnalytics from '../utils/googleAnalytics'\n\nimport styles from './HubPage.module.css'\n\nclass HubPage extends PureComponent {\n  constructor (props) {\n    super()\n    this.refreshPageInterval = null\n    this.state = {\n      showAlert: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n  }\n\n  componentDidMount () {\n    this.props.markSeen()\n    googleAnalytics.firePageView()\n  }\n\n  componentWillMount () {\n    const { myId, actions: { doHubPage } } = this.props\n\n    doHubPage.getBoardList(myId, true, constants.NUM_BOARD_PER_REQ)\n\n    this.refreshPageInterval = setInterval(() => doHubPage.getBoardList(myId, false, constants.NUM_BOARD_PER_REQ), constants.REFRESH_INTERVAL)\n  }\n\n  componentWillUnmount () {\n    const { myId, actions: { doHubPage } } = this.props\n\n    clearInterval(this.refreshPageInterval)\n    doHubPage.clearData(myId)\n  }\n\n  render () {\n    const { myId,\n      hubPage,\n      actions: { doHubPage, doModalContainer } } = this.props\n    const { showAlert, alertData } = this.state\n\n    if (!myId) return (<Empty />)\n\n    let me = hubPage.get(myId, Immutable.Map())\n    let userId = getRoot(this.props).getIn(['userInfo', 'userId'])\n    let userName = getRoot(this.props).getIn(['userInfo', 'userName'])\n\n    let isLoading = me.get('isLoading', false)\n    let noBoard = me.get('noBoard', false)\n    let boardList = me.get('boardList', Immutable.List()).toJS()\n    // let fetchMoreBoard = () => {\n    //   if (!allBoardsLoaded) {\n    //     let startBoardId = boardList.toJS()[boardList.toJS().length-1].ID\n    //     doHubPage.getMoreBoards(myId, startBoardId, constants.NUM_BOARD_PER_REQ)\n    //   }\n    // }\n\n    let joinBoardCallBack = (response) => {\n      let that = this\n      if (response.error) {\n        that.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message7'\n                defaultMessage='[Error] {data}:{boardUrl}'\n                values={{ data: response.data, boardUrl: response.boardUrl }}\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n\n        googleAnalytics.fireEvent('Group', 'JoinGroupFailed')\n      } else {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message29'\n                defaultMessage='[Success] Board Joined'\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n        doModalContainer.closeModal()\n\n        googleAnalytics.fireEvent('Group', 'JoinGroupSuccess')\n      }\n    }\n\n    let onJoinBoard = (boardUrl) => {\n      let that = this\n      if (!boardUrl || !boardUrl.startsWith('pnode://')) {\n        that.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message8'\n                defaultMessage='Board name empty or invalid'\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n      } else {\n        doHubPage.joinBoard(myId, boardUrl, joinBoardCallBack)\n      }\n    }\n\n    let openBoardActionModule = () => {\n      doModalContainer.setInput({\n        modalAddBoardSubmit: (name, friendInvited) => {\n          doHubPage.addBoard(myId, name, userName, friendInvited)\n          googleAnalytics.fireEvent('Group', 'CreateGroupSuccess')\n        },\n        modalJoinBoardSubmit: (boardUrl) => onJoinBoard(boardUrl)\n      })\n      doModalContainer.openModal(constants.BOARD_ACTION_MODAL)\n    }\n\n    let openManageBoardModal = (modalData) => {\n      doModalContainer.setInput({\n        boardId: modalData.ID,\n        boardName: modalData.Title,\n        setBoardName: (boardId, name, friendInvited) => doHubPage.setBoardName(myId, boardId, name, friendInvited),\n        deleteBoard: (boardId) => doHubPage.deleteBoard(myId, boardId)\n      })\n      doModalContainer.openModal(constants.MANAGE_BOARD_MODAL)\n    }\n\n    return (\n      <div className={styles['root']}>\n        <HubComponent\n          userId={userId}\n          userName={userName}\n          noBoard={noBoard}\n          boardList={boardList}\n          isLoading={isLoading}\n          createBoardAction={openBoardActionModule}\n          manageBoardAction={openManageBoardModal} />\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doHubPage: bindActionCreators(doHubPage, dispatch),\n    doModalContainer: bindActionCreators(doModalContainer, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HubPage)\n","import React, { PureComponent } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Link } from 'react-router-dom'\n\nimport styles from './BoardBar.module.css'\n\nclass BoardBar extends PureComponent {\n  render () {\n    const { boardInfo, manageBoardAction, onOpenOPLogModal } = this.props\n    return (\n      <div className={styles['root']}>\n        <div className={styles['content']}>\n          <div className={styles['prev-button']}>\n            <Link to={`/hub`}>\n              <div className={styles['prev-button-icon']} />\n              <div className={styles['prev-button-text']}>\n                <FormattedMessage\n                  id='boardbar.prev-button'\n                  defaultMessage='Boards'\n                />\n              </div>\n            </Link>\n          </div>\n          <div title={boardInfo.Title} className={styles['board-name']} onClick={onOpenOPLogModal}>\n            {boardInfo.Title}\n          </div>\n          <div className={styles['search']}>\n            <div className={styles['list-item-ellipsis']} onClick={() => manageBoardAction(boardInfo.ID)} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BoardBar\n","import React, { PureComponent } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ClipLoader } from 'react-spinners'\nimport { FormattedMessage } from 'react-intl'\nimport ReactDOM from 'react-dom'\n\nimport { epoch2FullDate, epoch2ReadFormat } from '../utils/utilDatetime'\nimport { isUnRead,\n  getStatusClass,\n  toJson,\n  getSummaryTemplate } from '../utils/utils'\nimport * as serverUtils from '../reducers/ServerUtils'\nimport * as constants from '../constants/Constants'\n\nimport styles from './ArticleListComponent.module.css'\n\nclass ArticleListComponent extends PureComponent {\n  constructor (props) {\n    super()\n    this.topItem = null\n    this.state = {\n      sliderInIndex: -1\n    }\n    this.onListItemClick = this.onListItemClick.bind(this)\n    this.scrollToBottom = this.scrollToBottom.bind(this)\n    this.needFetchMore = this.needFetchMore.bind(this)\n    this.handleScroll = this.handleScroll.bind(this)\n  }\n\n  needFetchMore () {\n    const { isLoading, allArticlesLoaded } = this.props\n    const { scrollTop } = this.scroller\n    return (\n      this.scroller &&\n      !isLoading &&\n      !allArticlesLoaded &&\n      scrollTop <= 0\n    )\n  }\n\n  handleScroll () {\n    if (this.needFetchMore()) {\n      const { onGetMoreArticles, listData } = this.props\n\n      let startArticleId = listData[0].ID\n\n      this.topItem = this.scroller.childNodes[0].childNodes.length === 0 ? null : this.scroller.childNodes[0].childNodes[0]\n      onGetMoreArticles(startArticleId)\n    }\n  }\n\n  onListItemClick (e) {\n    const { onListItemClick } = this.state\n    if (onListItemClick !== -1) {\n      this.setState({ sliderInIndex: -1 })\n    } else {\n      e.preventDefault()\n      e.stopPropagation()\n    }\n  }\n\n  scrollToBottom (mode) {\n    this.pageEnd.scrollIntoView({ behavior: mode })\n  }\n\n  componentDidUpdate (prevProps) {\n    if ((prevProps.listData.length === 0 && this.props.listData.length > 0) ||\n        (prevProps.match.path !== this.props.match.path)) {\n      /* First load */\n      this.scrollToBottom('instant')\n    } else if (this.topItem && prevProps.isLoading && !this.props.isLoading) {\n      /* More loaded */\n      ReactDOM.findDOMNode(this.topItem).scrollIntoView()\n    } else if ((prevProps.listData.length > 0 && this.props.listData.length === prevProps.listData.length + 1)) {\n      /* New user message */\n      this.scrollToBottom('smooth')\n    }\n  }\n\n  render () {\n    const { boardId, listData, summaryData, isLoading, noArticle } = this.props\n    const { sliderInIndex } = this.state\n\n    let aliveArticles = listData.filter((post) => post.Status !== constants.STATUS_ARRAY.indexOf('StatusDeleted'))\n\n    if (noArticle) {\n      return (\n        <div className={styles['root']}\n          onScroll={this.handleScroll}\n          ref={scroller => { this.scroller = scroller }}>\n          <div className={styles['no-content-message']}>\n            <FormattedMessage\n              id='article-list-component.message'\n              defaultMessage='You have no articles yet, click below button to add'\n            />\n          </div>\n        </div>\n      )\n    }\n\n    return (\n      <div className={styles['root']} onScroll={this.handleScroll} ref={scroller => { this.scroller = scroller }}>\n        <div className={styles['list']}>\n          {\n            isLoading ? (\n              <div className={styles['loader']}>\n                <ClipLoader color={'#aaa'} size={35} loading={isLoading} />\n              </div>\n            ) : (null)\n          }\n          {\n            aliveArticles.map(item => (\n              <ArticleComponent data={item} summaryData={summaryData} key={item.ID}\n                onClick={this.onListItemClick} sliderInIndex={sliderInIndex} boardId={boardId} />\n            ))\n          }\n        </div>\n        <div className={styles['bottomElement']} ref={(el) => { this.pageEnd = el }} />\n      </div>\n    )\n  }\n}\n\nclass ArticleComponent extends PureComponent {\n  render () {\n    let { data, onClick, sliderInIndex, boardId, summaryData } = this.props\n    let isUnreadArticle = isUnRead(data.CommentCreateTS.T, data.LastSeen.T)\n    let listItemClass = styles['list-item'] + ' ' + (isUnreadArticle ? styles['unread'] : styles['read'])\n    let itemLink = (sliderInIndex === -1) ? `/board/${encodeURIComponent(boardId)}/article/${encodeURIComponent(data.ID)}` : false\n    // let menuClass = (index === sliderInIndex)?'list-item-menu-slider':'list-item-menu'\n\n    let summary = ''\n    if (data.PreviewText) {\n      summary = data.PreviewText\n    } else if (summaryData[data.ID] && summaryData[data.ID].B) {\n      let sData = toJson(serverUtils.b64decode(summaryData[data.ID].B[0]))\n      summary = getSummaryTemplate(sData, { CreatorName: data.CreatorName, boardId: boardId })\n    }\n\n    return (\n      <div className={listItemClass} onClick={onClick}>\n        <Link to={itemLink}>\n          <div hidden className={styles['list-item-blocker']} />\n          <div className={styles['list-item-author']}>\n            <div className={styles['list-item-author-pic']}>\n              <img src={data.CreatorImg || constants.DEFAULT_USER_IMAGE} alt={'Creator Profile'} />\n            </div>\n            <div title={data.CreatorName} className={styles['list-item-author-name']}>{data.CreatorName}</div>\n          </div>\n          <div className={styles['list-item-main']}>\n            <div className={styles['list-item-header']}>\n              <div title={data.Title} className={styles['list-item-title']}>{data.Title}</div>\n              <div title={epoch2FullDate(data.UpdateTS.T)} className={styles['list-item-time']}>\n                {epoch2ReadFormat(data.UpdateTS.T)}\n              </div>\n            </div>\n            <div className={styles['list-item-content']}>\n              {\n                summary ? (\n                  <div dangerouslySetInnerHTML={{ __html: summary }} />\n                ) : (\n                  <FormattedMessage id='article-list-component.empty' defaultMessage='(No content)' />\n                )\n              }\n            </div>\n          </div>\n          <div className={styles['list-item-meta']}>\n            <div className={styles['list-item-circle']}>{data.NPush || 0}</div>\n            <div title={constants.STATUS_ARRAY[data.Status]} className={styles['list-item-status']}>\n              <div className={styles['list-item-status-' + getStatusClass(data.Status)]} />\n            </div>\n          </div>\n        </Link>\n        {/*\n        <div className={styles[menuClass]}>\n          <div className={styles['list-item-menu-item']}\n               onClick={()=> {\n                deleteArticle(item.ID)\n                that.setState({sliderInIndex: -1})\n              }}>\n            <FormattedMessage\n              id=\"article-list-component.action\"\n              defaultMessage=\"Delete\"\n            />\n          </div>\n        </div>\n        */}\n      </div>\n    )\n  }\n}\n\nexport default ArticleListComponent\n","import React, { PureComponent } from 'react'\nimport styles from './BoardComponent.module.css'\n\nimport BoardBar from '../components/BoardBar'\nimport ArticleListComponent from '../components/ArticleListComponent'\nimport * as constants from '../constants/Constants'\n\nclass BoardComponent extends PureComponent {\n  render () {\n    const { boardInfo, match, userId, articleList, articleSummaries, isLoading, noArticle, allArticlesLoaded, onGetMoreArticles, createArticleAction, manageBoardAction, deleteArticleAction, onOpenOPLogModal } = this.props\n\n    return (\n      <div className={styles['root']}>\n        <BoardBar\n          userId={userId}\n          boardInfo={boardInfo}\n          manageBoardAction={manageBoardAction}\n          onOpenOPLogModal={onOpenOPLogModal} />\n        <ArticleListComponent\n          match={match}\n          boardId={boardInfo.ID}\n          listData={articleList}\n          summaryData={articleSummaries}\n          allArticlesLoaded={allArticlesLoaded}\n          onGetMoreArticles={onGetMoreArticles}\n          deleteArticle={deleteArticleAction}\n          isLoading={isLoading}\n          noArticle={noArticle} />\n        {\n          (boardInfo.BoardType === constants.BOARD_TYPE_PERSONAL && boardInfo.CreatorID !== userId) ? null : (\n            <div className={styles['add-icon-container']}>\n              <div className={styles['add-icon-subcontainer']}>\n                <div className={styles['add-icon']} onClick={createArticleAction} />\n              </div>\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default BoardComponent\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\nimport LRU from 'lru-cache'\n\nimport * as utils from './utils'\nimport * as serverUtils from './ServerUtils'\n\nimport * as constants from '../constants/Constants'\nimport { DEFAULT_USER_NAME,\n  DEFAULT_USER_IMAGE,\n  MESSAGE_TYPE_INVITE } from '../constants/Constants'\nimport { toJson,\n  getSummaryTemplate } from '../utils/utils'\n\nexport const myClass = 'BOARD_PAGE'\n\nexport const myDuck = createDuck(myClass, 'board_page')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\nconst UPDATE_DATA = myDuck.defineType('UPDATE_DATA')\n\nconst ADD_ARTICLE = myDuck.defineType('ADD_ARTICLE')\nconst DELETE_ARTICLE = myDuck.defineType('DELETE_ARTICLE')\nconst PREPEND_ARTICLES = myDuck.defineType('PREPEND_ARTICLES')\nconst APPEND_ARTICLES = myDuck.defineType('APPEND_ARTICLES')\nconst INSERT_SUMMARIES = myDuck.defineType('INSERT_SUMMARIES')\n\nexport const init = (myId, parentId, parentClass, parentDuck) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, parentId, parentClass, parentDuck }))\n  }\n}\n\nexport const initParams = (myId, params) => {\n  return (dispatch, getState) => {\n    dispatch({\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { boardId: decodeURIComponent(params.boardId) }\n    })\n  }\n}\n\n/*                          */\n/*  Get Board level Info    */\n/*                          */\n\nexport const getBoardInfo = (myId, boardId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getBoard(boardId))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessGetBoardInfo(myId, result))\n      })\n  }\n}\n\nconst postprocessGetBoardInfo = (myId, result) => {\n  let boardInfo = {\n    ID: result.ID,\n    Title: result.Title,\n    CreatorID: result.C,\n    BoardType: result.BT,\n    Status: result.Status,\n    LastSeen: result.LastSeen ? result.LastSeen : utils.emptyTimeStamp(),\n    UpdateTS: result.UpdateTS ? result.UpdateTS : utils.emptyTimeStamp(),\n    ArticleCreateTS: result.ArticleCreateTS ? result.ArticleCreateTS : utils.emptyTimeStamp()\n  }\n\n  boardInfo = serverUtils.deserialize(boardInfo)\n\n  console.log('doBoardPage.postprocessGetBoardInfo: result:', boardInfo)\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { boardInfo: boardInfo }\n  }\n}\n\n/*                          */\n/*  Update Board  Info      */\n/*                          */\n\nfunction sentInviteMessages (inviteMessages) {\n  return dispatch => Promise.all(inviteMessages.map((invite) => {\n    return dispatch(serverUtils.postMessage(invite.chatId, [invite.message], []))\n      .then(({ response: { result }, type, query, error }) => {\n        return { 'chatId': invite.chatId }\n      })\n  }))\n}\n\nfunction removeBoardMembers (boardId, memberToRemove) {\n  return dispatch => Promise.all(memberToRemove.map((member) => {\n    return dispatch(serverUtils.removeBoardMember(boardId, member.userId))\n      .then(({ response: { result }, type, query, error }) => {\n        return { 'userId': member.userId }\n      })\n  }))\n}\n\nexport const inviteFriend = (myId, boardId, boardName, friendInvited) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getBoardUrl(boardId))\n      .then(({ response: boardUrlResult, type, query, error }) => {\n        const boardJoinKey = {\n          C: boardUrlResult.result.C,\n          ID: boardUrlResult.result.ID,\n          Pn: boardUrlResult.result.Pn,\n          T: boardUrlResult.result.T,\n          URL: boardUrlResult.result.URL,\n          UpdateTS: boardUrlResult.result.UT ? boardUrlResult.result.UT : utils.emptyTimeStamp(),\n          expirePeriod: boardUrlResult.result.e\n        }\n\n        let inviteMessages = Object.keys(friendInvited).filter(fID => friendInvited[fID]).map(friendId => {\n          let chatId = friendInvited[friendId]\n          let message = {\n            type: MESSAGE_TYPE_INVITE,\n            value: `<div data-action-type=\"join-board\" data-board-id=\"${boardId}\" data-board-name=\"${boardName}\" data-join-key=\"${boardJoinKey.URL}\" data-update-ts=\"${boardJoinKey.UpdateTS.T}\" data-expiration=\"${boardJoinKey.expirePeriod}\"></div>`\n          }\n          return {\n            chatId: chatId,\n            message: JSON.stringify(message)\n          }\n        })\n\n        dispatch(sentInviteMessages(inviteMessages))\n          .then(({ response: inviteResult, type, error, query }) => {\n            dispatch(postprocessInviteFriend(myId, boardId))\n          })\n      })\n  }\n}\n\nconst postprocessInviteFriend = (myId, boardId) => {\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: {}\n  }\n}\n\nexport const setBoardName = (myId, boardId, name) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.setBoardName(boardId, name))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessSetBoardName(myId, boardId, name))\n      })\n  }\n}\n\nconst postprocessSetBoardName = (myId, boardId, name) => {\n  const combinedBoardInfo = {\n    ID: boardId,\n    Title: name\n  }\n\n  return {\n    myId,\n    myClass,\n    type: UPDATE_DATA,\n    data: { boardInfo: combinedBoardInfo }\n  }\n}\n\nexport const markBoard = (myId, boardId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.markBoard(boardId))\n      .then(({ response: { result }, type, error, query }) => {\n        dispatch(postprocessMarkBoard(myId, result))\n      })\n  }\n}\n\nconst postprocessMarkBoard = (myId, result) => {\n  /* Do nothing */\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: {}\n  }\n}\n\nexport const leaveBoard = (myId, boardId, callBackFunc) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.leaveBoard(boardId))\n      .then(({ response: { result, error }, type, query }) => {\n        if (error) {\n          callBackFunc({ error: true, data: error.message })\n        } else {\n          callBackFunc({ error: false, data: result })\n          dispatch(postprocessLeaveBoard(myId, boardId))\n        }\n      })\n  }\n}\n\nconst postprocessLeaveBoard = (myId, boardId) => {\n  /* Do nothing */\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: {}\n  }\n}\n\nexport const deleteBoard = (myId, boardId, callBackFunc) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.deleteBoard(boardId))\n      .then(({ response: { result, error }, type, query }) => {\n        if (error) {\n          callBackFunc({ error: true, data: error.message })\n        } else {\n          callBackFunc({ error: false, data: result })\n          dispatch(postprocessDeleteBoard(myId, boardId))\n        }\n      })\n  }\n}\n\nconst postprocessDeleteBoard = (myId, boardId) => {\n  /* Do nothing */\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: {}\n  }\n}\n\nexport const removeMember = (myId, boardId, memberToRemove) => {\n  return (dispatch, getState) => {\n    let memberIds = Object.keys(memberToRemove).filter(mID => memberToRemove[mID]).map(memberId => {\n      let chatId = memberToRemove[memberId]\n      return {\n        userId: memberId,\n        chatId: chatId\n      }\n    })\n\n    dispatch(removeBoardMembers(boardId, memberIds))\n      .then(({ response: removeResult, type, error, query }) => {\n        dispatch(postprocessRemoveMember(myId, boardId))\n      })\n  }\n}\n\nconst postprocessRemoveMember = (myId, boardId) => {\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: {}\n  }\n}\n\n/*                     */\n/*  Get Article List   */\n/*                     */\n\nexport const getArticleList = (myId, boardId, isFirstFetch, limit) => {\n  return (dispatch, getState) => {\n    if (isFirstFetch) {\n      dispatch(preprocessSetStartLoading(myId))\n    }\n    dispatch(serverUtils.getArticles(boardId, constants.EMPTY_ID, limit, constants.LIST_ORDER_PREV))\n      .then(({ response: { result }, type, query, error }) => {\n        let creatorIds = result.map(each => each.CreatorID)\n        let articleIds = result.map(each => each.ID)\n        let cBlockIds = result.map(each => each.ContentBlockID)\n        dispatch(serverUtils.getUsersInfo(creatorIds))\n          .then((usersInfo) => {\n            dispatch(postprocessGetArticleList(myId, result, isFirstFetch, usersInfo))\n          })\n        let articleInfos = []\n        for (let i = 0; i < articleIds.length; i++) {\n          articleInfos.push({\n            'A': articleIds[i],\n            'B': cBlockIds[i]\n          })\n        }\n        dispatch(serverUtils.getArticleSummaryByIds(boardId, articleInfos))\n          .then(({ response: summariesResult, type, query, error }) => {\n            let summaries = summariesResult.result\n            dispatch(postprocessGetSummaries(myId, summaries))\n            if (isFirstFetch) {\n              dispatch(postprocessSetFinshLoading(myId))\n            }\n          })\n      })\n  }\n}\n\nconst postprocessGetArticleList = (myId, result, isFirstFetch, usersInfo) => {\n  result = result.map(serverUtils.deserialize)\n\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  const articleList = result.map(each => {\n    let userId = each.CreatorID\n    let userNameMap = usersInfo['userName'] || {}\n    let userImgMap = usersInfo['userImg'] || {}\n\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n    let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n\n    let createTS = each.CreateTS ? each.CreateTS : utils.emptyTimeStamp()\n    let updateTS = each.UpdateTS ? each.UpdateTS : createTS\n\n    return {\n      BoardID: each.BoardID,\n      ContentBlockID: each.ContentBlockID,\n      CreatorID: each.CID,\n      CreatorName: userName,\n      CreatorImg: userImg,\n      Status: each.S,\n      ID: each.ID,\n      NBlock: each.NBlock,\n      NBoo: each.NB,\n      NPush: each.NP,\n      Title: each.Title,\n      CreateTS: createTS,\n      UpdateTS: updateTS,\n      LastSeen: each.L ? each.L : utils.emptyTimeStamp(),\n      CommentCreateTS: each.c && !utils.isNullTimeStamp(each.c) ? each.c : updateTS\n    }\n  })\n\n  console.log('doBoardPage.postprocessGetArticleList: articleList:', articleList)\n\n  // let matchIndex = articleList.findIndex((each) => each.ID === latestArticleId)\n\n  if (articleList.length === 0 && isFirstFetch) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { boardArticles: { lru: null, offset: 0, articleList: [] }, noArticle: true }\n    }\n  } else if (articleList.length === 0 && !isFirstFetch) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: {}\n    }\n  } else {\n    return {\n      myId,\n      myClass,\n      type: APPEND_ARTICLES,\n      data: { articles: articleList.reverse(), noArticle: false }\n    }\n  }\n}\n\nconst postprocessGetSummaries = (myId, summaries) => {\n  console.log('doBoardPage.postprocessGetSummaries: summaries:', summaries)\n\n  return {\n    myId,\n    myClass,\n    type: INSERT_SUMMARIES,\n    data: { summaries: summaries }\n  }\n}\n\nexport const _insertSummaries = (state, action) => {\n  const { myId, data: { summaries } } = action\n\n  let articleSummaries = state.getIn([myId, 'articleSummaries'], Immutable.Map())\n\n  return state.setIn([myId, 'articleSummaries'], articleSummaries.merge(summaries))\n}\n\nexport const getMoreArticles = (myId, boardId, startArticleId, limit) => {\n  return (dispatch, getState) => {\n    dispatch(preprocessSetStartLoading(myId))\n    dispatch(serverUtils.getArticles(boardId, startArticleId, limit, constants.LIST_ORDER_PREV))\n      .then(({ response: { result }, type, query, error }) => {\n        let creatorIds = result.map(each => each.CreatorID)\n        let articleIds = result.map(each => each.ID)\n        let cBlockIds = result.map(each => each.ContentBlockID)\n        dispatch(serverUtils.getUsersInfo(creatorIds))\n          .then((usersInfo) => {\n            dispatch(postprocessGetMoreArticles(myId, result, usersInfo))\n          })\n        let articleInfos = []\n        for (let i = 0; i < articleIds.length; i++) {\n          articleInfos.push({\n            'A': articleIds[i],\n            'B': cBlockIds[i]\n          })\n        }\n        dispatch(serverUtils.getArticleSummaryByIds(boardId, articleInfos))\n          .then(({ response: summariesResult, type, query, error }) => {\n            let summaries = summariesResult.result\n            dispatch(postprocessGetSummaries(myId, summaries))\n            dispatch(postprocessSetFinshLoading(myId))\n          })\n      })\n  }\n}\n\nconst postprocessGetMoreArticles = (myId, result, usersInfo) => {\n  result = result.map(serverUtils.deserialize)\n  result = result.slice(1)\n\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  const articleList = result.map(each => {\n    let userId = each.CreatorID\n    let userNameMap = usersInfo['userName'] || {}\n    let userImgMap = usersInfo['userImg'] || {}\n\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n    let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n\n    let createTS = each.CreateTS ? each.CreateTS : utils.emptyTimeStamp()\n    let updateTS = each.UpdateTS ? each.UpdateTS : createTS\n\n    return {\n      BoardID: each.BoardID,\n      ContentBlockID: each.ContentBlockID,\n      CreatorID: each.CreatorID,\n      CreatorName: userName,\n      CreatorImg: userImg,\n      Status: each.S,\n      ID: each.ID,\n      NBlock: each.NBlock,\n      NBoo: each.NBoo,\n      NPush: each.NPush,\n      Title: each.Title,\n      CreateTS: createTS,\n      UpdateTS: updateTS,\n      LastSeen: each.L ? each.L : utils.emptyTimeStamp(),\n      CommentCreateTS: each.c && !utils.isNullTimeStamp(each.c) ? each.c : updateTS\n    }\n  })\n\n  console.log('doBoardPage.postprocessGetMoreArticles: articleList:', articleList)\n\n  if (articleList.length === 0) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { allArticlesLoaded: true }\n    }\n  } else {\n    return {\n      myId,\n      myClass,\n      type: PREPEND_ARTICLES,\n      data: { articles: articleList.reverse() }\n    }\n  }\n}\n\nexport const _prependArticles = (state, action) => {\n  const { myId, data: { articles } } = action\n\n  let articleList = state.getIn([myId, 'boardArticles', 'articleList'], Immutable.List())\n  let oriOffset = state.getIn([myId, 'boardArticles', 'offset'], 0)\n\n  state = state.setIn([myId, 'boardArticles', 'offset'], oriOffset + articles.length)\n  state = state.setIn([myId, 'boardArticles', 'articleList'], Immutable.List(articles).concat(articleList))\n\n  return state\n}\n\nexport const _appendArticles = (state, action) => {\n  /* merge the newly fetched artilces to existing artilce list */\n  const { myId, data: { articles, noArticle } } = action\n\n  if (!articles || articles.length <= 0) {\n    return state\n  }\n\n  let boardArticles = state.getIn([myId, 'boardArticles'], Immutable.Map()).toJS()\n  let articleList = boardArticles.articleList || []\n  let lruCache = boardArticles.lru || new LRU(constants.NUM_CACHE_ARTILCE)\n  let offset = boardArticles.offset || 0\n\n  let resultArticleList = []\n  if (articleList.length === 0) {\n    /* append message */\n    articles.forEach((article, index) => {\n      resultArticleList.push(article)\n      lruCache.set(article.ID, { index: index - offset, article: article })\n    })\n  } else {\n    /* 1. find earlist start node and save to local lru */\n    let localLRU = new LRU(constants.NUM_ARTICLE_PER_REQ)\n\n    let startArticle = null\n    let earlistTS = 2147483648 /* year 2038 */\n    articles.forEach((article, index) => {\n      localLRU.set(article.ID, article)\n      if (lruCache.get(article.ID) && lruCache.get(article.ID).article.CreateTS.T < earlistTS) {\n        startArticle = lruCache.get(article.ID)\n        earlistTS = startArticle.article.CreateTS.T\n      }\n    })\n    /* 2. start merge  */\n    let oriIndex = startArticle ? startArticle.index : articleList.length - offset\n    let newIndex = 0\n    let mergeIndex = oriIndex\n\n    let oriList = articleList.slice(0, offset + oriIndex)\n    let mergedList = []\n\n    while (articleList.length > offset + oriIndex || articles.length > newIndex) {\n      if (articleList.length > offset + oriIndex && articles.length > newIndex) {\n        let oriArticle = articleList[offset + oriIndex]\n        let newArticle = articles[newIndex]\n        /* both left */\n        if (oriArticle.CreateTS.T <= newArticle.CreateTS.T) {\n          if (!localLRU.get(oriArticle.ID)) {\n            mergedList.push(oriArticle)\n            lruCache.set(oriArticle.ID, { index: mergeIndex, article: oriArticle })\n            mergeIndex += 1\n          }\n          oriIndex += 1\n        } else {\n          mergedList.push(newArticle)\n          lruCache.set(newArticle.ID, { index: mergeIndex, article: newArticle })\n          mergeIndex += 1\n          newIndex += 1\n        }\n      } else if (articleList.length > offset + oriIndex) {\n        /* only ori */\n        let oriArticle = articleList[offset + oriIndex]\n        if (!localLRU.get(oriArticle.ID)) {\n          mergedList.push(oriArticle)\n          lruCache.set(oriArticle.ID, { index: mergeIndex, article: oriArticle })\n          mergeIndex += 1\n        }\n        oriIndex += 1\n      } else {\n        /* only new */\n        let newArticle = articles[newIndex]\n        mergedList.push(newArticle)\n        lruCache.set(newArticle.ID, { index: mergeIndex, article: newArticle })\n        mergeIndex += 1\n        newIndex += 1\n      }\n    }\n    resultArticleList = oriList.concat(mergedList)\n    localLRU.reset()\n  }\n\n  state = state.setIn([myId, 'noArticle'], noArticle)\n  state = state.setIn([myId, 'boardArticles', 'offset'], offset)\n  state = state.setIn([myId, 'boardArticles', 'lru'], lruCache)\n  state = state.setIn([myId, 'boardArticles', 'articleList'], Immutable.List(resultArticleList))\n\n  return state\n}\n\n/*                         */\n/*  Update Article List    */\n/*                         */\n\nexport const addArticle = (myId, userName, userImg, boardId, title, article, mediaStr) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.createArticle(boardId, title, article, mediaStr))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessCreateArticle(myId, boardId, userName, userImg, title, article, result))\n      })\n  }\n}\n\nconst postprocessCreateArticle = (myId, boardId, userName, userImg, title, articleArray, result) => {\n  let sData = articleArray && articleArray.length > 0 ? toJson(articleArray[0]) : {}\n  let previewText = getSummaryTemplate(sData, { CreatorName: userName, boardId: boardId })\n\n  let newArticle = {\n    BoardID: result.BID,\n    ContentBlockID: result.cID,\n    CreateTS: utils.emptyTimeStamp(),\n    CreatorID: null,\n    CreatorName: userName,\n    CreatorImg: userImg,\n    PreviewText: previewText,\n    Status: 0,\n    ID: result.AID,\n    LastSeen: utils.emptyTimeStamp(),\n    NBlock: null,\n    NBoo: 0,\n    NPush: 0,\n    Title: title,\n    CommentCreateTS: utils.emptyTimeStamp(),\n    UpdateTS: utils.emptyTimeStamp()\n  }\n\n  console.log('doBoardPage.postprocessCreateArticle: result:', newArticle)\n  return {\n    myId,\n    myClass,\n    type: ADD_ARTICLE,\n    data: { article: newArticle, noArticle: false }\n  }\n}\n\nexport const _addArticle = (state, action) => {\n  const { myId, data: { article, noArticle } } = action\n\n  if (!article || !article.ID || !article.BoardID) {\n    return state\n  }\n\n  let boardArticles = state.getIn([myId, 'boardArticles'], Immutable.Map()).toJS()\n\n  let lruCache = boardArticles.lru || new LRU(constants.NUM_CACHE_ARTILCE)\n  let offset = boardArticles.offset || 0\n  let articleList = boardArticles.articleList || []\n\n  lruCache.set(article.ID, { index: articleList.length - offset, article: article })\n\n  state = state.setIn([myId, 'noArticle'], noArticle)\n  state = state.setIn([myId, 'boardArticles', 'lru'], lruCache)\n  state = state.updateIn([myId, 'boardArticles', 'articleList'], arr => arr.push(Immutable.Map(article)))\n\n  return state\n}\n\nexport const deleteArticle = (myId, boardId, articleId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.deleteArticle(boardId, articleId))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessDeleteArticle(myId, boardId, articleId))\n      })\n  }\n}\n\nconst postprocessDeleteArticle = (myId, boardId, articleId) => {\n  console.log('doBoardPage.postprocessDeleteArticle: result:', articleId)\n\n  return {\n    myId,\n    myClass,\n    type: DELETE_ARTICLE,\n    data: { articleId: articleId }\n  }\n}\n\nexport const _deteleArticle = (state, action) => {\n  const { myId, data: { articleId } } = action\n\n  let articleList = state.getIn([myId, 'boardArticles', 'articleList'], Immutable.List())\n  articleList = articleList.filter(each => { return each.get('ID') !== articleId })\n  return state.setIn([myId, 'boardArticles', 'articleList'], articleList)\n}\n\nexport const clearData = (myId) => {\n  return (dispatch, getState) => {\n    dispatch(postprocessClearData(myId))\n  }\n}\n\nconst postprocessClearData = (myId) => {\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { boardArticles: { lru: null, offset: 0, articleList: [] }, allArticlesLoaded: false }\n  }\n}\n\n/*             */\n/*  Loading    */\n/*             */\n\nconst preprocessSetStartLoading = (myId) => {\n  console.log('doBoardPage.preprocessSetStartLoading')\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { isLoading: true }\n  }\n}\n\nconst postprocessSetFinshLoading = (myId) => {\n  console.log('doBoardPage.postprocessSetFinshLoading')\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { isLoading: false }\n  }\n}\n\n/*                                */\n/*  Download/Upload File/Image    */\n/*                                */\n\nfunction uploadAttachments (boardId, attachments) {\n  return dispatch => Promise.all(attachments.map((attachment) => {\n    if (attachment.type === 'IMAGE') {\n      /* for image */\n      return dispatch(serverUtils.uploadImg(boardId, attachment))\n        .then(({ response: { result }, type, query, error }) => {\n          return { 'attachmentId': attachment.id, 'mediaId': result.ID, 'boardId': result.BID, 'type': 'IMAGE' }\n        })\n    } else {\n      /* for file */\n      return dispatch(serverUtils.uploadFile(boardId, attachment))\n        .then(({ response: { result }, type, query, error }) => {\n          return { 'attachmentId': attachment.id, 'mediaId': result.ID, 'boardId': result.BID, 'type': 'FILE' }\n        })\n    }\n  }))\n}\n\nexport const createArticleWithAttachments = (myId, userName, userImg, boardId, title, reducedArticleArray, attachments) => {\n  return (dispatch, getState) => {\n    dispatch(uploadAttachments(boardId, attachments))\n      .then((attachmentIdObjs) => {\n        /* Attachment ID - data url map */\n        let attachmentIdMap = attachmentIdObjs.reduce((acc, current) => {\n          acc[current.attachmentId] = current.mediaId\n          return acc\n        }, {})\n\n        /* Replace attachment ID with medaiId */\n        let articleArray = reducedArticleArray.map((each) => {\n          if (each.type === constants.CONTENT_TYPE_FILE || each.type === constants.CONTENT_TYPE_IMAGE) {\n            let params = each.param\n            attachments.forEach((attachment) => {\n              if (params.id === attachment.id) {\n                params.id = attachmentIdMap[attachment.id]\n              }\n            })\n            each.param = params\n          }\n\n          return JSON.stringify(each)\n        })\n\n        let mediaIds = attachmentIdObjs.map((attachment) => {\n          return attachment.mediaId\n        })\n\n        /* Create article with attachment Ids */\n        dispatch(serverUtils.createArticle(boardId, title, articleArray, mediaIds))\n          .then(({ response: { result }, type, query, error }) => {\n            dispatch(serverUtils.markArticle(boardId, result.AID))\n            dispatch(postprocessCreateArticle(myId, boardId, userName, userImg, title, articleArray, result))\n          })\n      })\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData,\n  [UPDATE_DATA]: utils.reduceUpdateData,\n  [ADD_ARTICLE]: _addArticle,\n  [DELETE_ARTICLE]: _deteleArticle,\n  [PREPEND_ARTICLES]: _prependArticles,\n  [APPEND_ARTICLES]: _appendArticles,\n  [INSERT_SUMMARIES]: _insertSummaries\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Immutable from 'immutable'\nimport { FormattedMessage } from 'react-intl'\n// import { PTTAI_URL_BASE }           from '../config'\n\nimport Empty from '../components/Empty'\nimport BoardComponent from '../components/BoardComponent'\nimport AlertComponent from '../components/AlertComponent'\n\nimport { getRoot } from '../utils/utils'\nimport googleAnalytics from '../utils/googleAnalytics'\nimport * as doBoardPage from '../reducers/BoardPage'\nimport * as doModalContainer from '../reducers/ModalContainer'\nimport * as constants from '../constants/Constants'\n\nimport styles from './BoardPage.module.css'\n\nclass BoardPage extends PureComponent {\n  constructor (props) {\n    super()\n    this.refreshPageInterval = null\n    this.state = {\n      showAlert: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n    this.getLatestArticle = this.getLatestArticle.bind(this)\n  }\n\n  getLatestArticle () {\n    const { myId, markSeen, actions: { doBoardPage }, match: { params } } = this.props\n\n    doBoardPage.getArticleList(myId, decodeURIComponent(params.boardId), false, constants.NUM_ARTICLE_PER_REQ)\n    doBoardPage.markBoard(myId, decodeURIComponent(params.boardId))\n\n    markSeen()\n  }\n\n  componentWillMount () {\n    const { actions: { doBoardPage }, match: { params }, myId } = this.props\n\n    doBoardPage.initParams(myId, params)\n    doBoardPage.getBoardInfo(myId, decodeURIComponent(params.boardId))\n    doBoardPage.getArticleList(myId, decodeURIComponent(params.boardId), true, constants.NUM_ARTICLE_PER_REQ)\n\n    this.refreshPageInterval = setInterval(this.getLatestArticle, constants.REFRESH_INTERVAL)\n  }\n\n  componentWillUnmount () {\n    const { actions: { doBoardPage }, myId } = this.props\n\n    doBoardPage.clearData(myId)\n    clearInterval(this.refreshPageInterval)\n  }\n\n  componentDidMount () {\n    const { markSeen, actions: { doBoardPage }, match: { params }, myId } = this.props\n\n    doBoardPage.markBoard(myId, decodeURIComponent(params.boardId))\n    markSeen()\n    googleAnalytics.firePageView()\n  }\n\n  render () {\n    const { match, myId, boardPage, markSeen, actions: { doBoardPage, doModalContainer } } = this.props\n    const { showAlert, alertData } = this.state\n\n    if (!myId) return (<Empty />)\n\n    let userId = getRoot(this.props).getIn(['userInfo', 'userId'])\n    let userName = getRoot(this.props).getIn(['userInfo', 'userName'])\n    let userImg = getRoot(this.props).getIn(['userInfo', 'userImg'])\n\n    let me = boardPage.get(myId, Immutable.Map())\n\n    let boardId = me.get('boardId', '')\n    let boardInfo = me.get('boardInfo', Immutable.Map()).toJS()\n    let articleList = me.getIn(['boardArticles', 'articleList'], Immutable.List()).toJS()\n    let articleSummaries = me.get('articleSummaries', Immutable.Map()).toJS()\n    let isLoading = me.get('isLoading', false)\n    let noArticle = me.get('noArticle', false)\n    let allArticlesLoaded = me.get('allArticlesLoaded', false)\n\n    let openCreateArticleSubmit = (title, reducedArticleArray, attachments) => {\n      doBoardPage.createArticleWithAttachments(myId, userName, userImg, boardId, title, reducedArticleArray, attachments)\n      doBoardPage.markBoard(myId, boardId)\n      googleAnalytics.fireEvent('Article', 'CreateArticleSuccess')\n      markSeen()\n\n      doModalContainer.closeModal()\n    }\n\n    let openCreateArticleModal = () => {\n      doModalContainer.setInput({ boardId: boardInfo.ID })\n      doModalContainer.setSubmit(openCreateArticleSubmit)\n      doModalContainer.openModal(constants.CREATE_ARTICLE_MODAL)\n    }\n\n    let leaveBoardCallBack = (response) => {\n      if (response.error) {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message32'\n                defaultMessage='[Failed] {data}'\n                values={{ data: response.data }}\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n      } else {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message33'\n                defaultMessage='[Success] Left Group'\n              />),\n            onConfirm: () => {\n              that.setState({ showAlert: false })\n              that.props.history.push(`/hub`)\n            }\n          }\n        })\n        doModalContainer.closeModal()\n      }\n    }\n\n    let deleteBoardCallBack = (response) => {\n      if (response.error) {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message32'\n                defaultMessage='[Failed] {data}'\n                values={{ data: response.data }}\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n      } else {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message34'\n                defaultMessage='[Success] Group Deleted'\n              />),\n            onConfirm: () => {\n              that.setState({ showAlert: false })\n              that.props.history.push(`/hub`)\n            }\n          }\n        })\n        doModalContainer.closeModal()\n      }\n    }\n\n    let openManageBoardModal = (modalData) => {\n      doModalContainer.setInput({\n        isCreator: boardInfo.CreatorID === userId,\n        boardId: boardInfo.ID,\n        boardName: boardInfo.Title,\n        onEditBoardName: (boardId, name) => {\n          doBoardPage.setBoardName(myId, boardId, name)\n        },\n        onInviteFriend: (boardId, boardName, friendInvited) => {\n          doBoardPage.inviteFriend(myId, boardId, boardName, friendInvited)\n        },\n        onRemoveMember: (boardId, memberToRemove) => {\n          doBoardPage.removeMember(myId, boardId, memberToRemove)\n        },\n        onDeleteBoard: () => {\n          doBoardPage.deleteBoard(myId, boardInfo.ID, deleteBoardCallBack)\n        },\n        onLeaveBoard: () => {\n          doBoardPage.leaveBoard(myId, boardInfo.ID, leaveBoardCallBack)\n        }\n      })\n      doModalContainer.openModal(constants.BOARD_SETTING_MENU_MODAL)\n    }\n\n    let onOpenOPLogModal = () => {\n      doModalContainer.setInput({\n        tabs: [\n          constants.SHOW_CONTENT_BOARD_TAB,\n          constants.SHOW_CONTENT_MASTER_TAB,\n          constants.SHOW_CONTENT_MEMBER_TAB,\n          constants.SHOW_CONTENT_OPKEY_TAB,\n          constants.SHOW_CONTENT_PEERS_TAB\n        ],\n        params: {\n          boardId: boardId\n        }\n      })\n      doModalContainer.openModal(constants.SHOW_OP_LOG_MODAL)\n    }\n\n    let onGetMoreArticles = (startArticleId) => {\n      doBoardPage.getMoreArticles(myId, boardId, startArticleId, constants.NUM_ARTICLE_PER_REQ)\n    }\n\n    return (\n      <div className={styles['root']}>\n        <BoardComponent\n          match={match}\n          userId={userId}\n          boardInfo={boardInfo}\n          isLoading={isLoading}\n          noArticle={noArticle}\n          articleList={articleList}\n          articleSummaries={articleSummaries}\n          allArticlesLoaded={allArticlesLoaded}\n          onGetMoreArticles={onGetMoreArticles}\n          createArticleAction={openCreateArticleModal}\n          manageBoardAction={openManageBoardModal}\n          onOpenOPLogModal={onOpenOPLogModal}\n          deleteArticleAction={(articleId) => doBoardPage.deleteArticle(myId, boardInfo.ID, articleId)} />\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doBoardPage: bindActionCreators(doBoardPage, dispatch),\n    doModalContainer: bindActionCreators(doModalContainer, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardPage)\n","import React, { PureComponent } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { PulseLoader } from 'react-spinners'\n// import $                          from 'jquery'\n\nimport styles from './ArticleComponent.module.css'\nimport * as constants from '../constants/Constants'\nimport { array2Html } from '../utils/utils'\n\nimport '../../node_modules/quill/dist/quill.bubble.css'\n\nclass ArticleComponent extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      noResult: false\n    }\n    // this.handleLongPress          = this.handleLongPress.bind(this)\n    // this.handleLongPressRelease   = this.handleLongPressRelease.bind(this)\n  }\n\n  componentWillReceiveProps (nextProp) {\n    const { pullCount } = this.props\n\n    if (pullCount === constants.ARTICLE_PULL_COUNT_DOWN && nextProp.pullCount === 0) {\n      this.setState({ noResult: true })\n    }\n  }\n\n  componentDidMount () {\n    // For mobile\n    // $(\"#article-main-content\").on(\"touchstart\", this.handleLongPress);\n    // $(\"#article-main-content\").on(\"touchend\", this.handleLongPressRelease);\n  }\n\n  componentWillUnmount () {\n    // For mobile\n    // $(\"#article-main-content\").off(\"touchstart\", this.handleLongPress);\n    // $(\"#article-main-content\").off(\"touchend\", this.handleLongPressRelease);\n  }\n\n  render () {\n    const { articleContentsList, pullCount, articleInfo, boardInfo, openNameCard } = this.props\n    const { noResult } = this.state\n\n    let htmlContent = array2Html(articleContentsList.reduce((final, piece) => {\n      return final.concat(piece.contentBlockArray)\n    }, []), boardInfo.ID)\n\n    const loading = (htmlContent === '') && !noResult\n    const cntDown = constants.ARTICLE_PULL_COUNT_DOWN - pullCount\n\n    return (\n      <div id='article-main-content' className={styles['root']}>\n        {\n          loading ? (\n            <div className={styles['loading']}>\n              <FormattedMessage\n                id='article-component.message1'\n                defaultMessage='Allow me to fetch the content ... ({cntDown})'\n                values={{ cntDown: cntDown }}\n              />\n              <PulseLoader color={'#aaa'} size={6} />\n            </div>\n          ) : (\n            <div className={styles['main-content']}\n              // onMouseDown={this.handleLongPress}\n              // onMouseUp={this.handleLongPressRelease}\n            >\n              <div className={styles['author']}>\n                <img src={articleInfo.CreatorImg || constants.DEFAULT_USER_IMAGE} alt={'Author Profile'} onClick={openNameCard} />\n                <div title={articleInfo.CreatorName} onClick={openNameCard}>\n                  {articleInfo.CreatorName}\n                </div>\n              </div>\n              <div id='quill-id' className={styles['content']}>\n                {\n                  (noResult) ? (\n                    <FormattedMessage\n                      id='article-component.message2'\n                      defaultMessage='(No content)'\n                    />\n                  ) : (\n                    <div className={constants.PTT_EDITOR_CLASS_NAME} dangerouslySetInnerHTML={{ __html: htmlContent }} />\n                  )\n                }\n              </div>\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default ArticleComponent\n","import React, { PureComponent } from 'react'\nimport $ from 'jquery'\nimport { FormattedMessage } from 'react-intl'\nimport { ClipLoader } from 'react-spinners'\n\nimport styles from './CommentReplyListComponent.module.css'\n\nimport AlertComponent from '../components/AlertComponent'\n\nimport { getStatusClass,\n  linkParser,\n  isMobile } from '../utils/utils'\nimport { epoch2FullTimeFormat,\n  epoch2ReadFormat } from '../utils/utilDatetime'\n\nimport * as constants from '../constants/Constants'\n\nfunction isEmpty (comment) {\n  return comment.replace(/\\s+/g, '') === ''\n}\n\nclass CommentReplyListComponent extends PureComponent {\n  constructor (props) {\n    super()\n\n    this.state = {\n      comment: '',\n      showAlert: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n\n    this.commentValidate = this.commentValidate.bind(this)\n    this.submitComment = this.submitComment.bind(this)\n    this.onClick = this.onClick.bind(this)\n  }\n\n  commentValidate (comment) {\n    // true means valid\n    let that = this\n\n    if (isEmpty(comment)) return false\n\n    // comment too long\n    if (JSON.stringify(comment).length - 2 > constants.MAX_COMMENT_SIZE) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='comment-reply-list-component.comment-length-alert'\n              defaultMessage='cannot comment more than {MAX_COMMENT_SIZE} words'\n              values={{ MAX_COMMENT_SIZE: constants.MAX_COMMENT_SIZE }}\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n\n      return false\n    }\n\n    return true\n  }\n\n  submitComment (e) {\n    const { onCommentAdded } = this.props\n    let { comment } = this.state\n\n    comment = comment.trim()\n\n    /* isComposing is for 注音輸入法 */\n    // FIXME: safari's e.isComposing work differently from others\n    if (e.isComposing || (e.key && e.key !== 'Enter') || !this.commentValidate(comment)) return\n\n    if ($(':focus').is('input')) e.preventDefault()\n\n    onCommentAdded(comment)\n    this.setState({ comment: '' })\n  }\n\n  componentDidMount () {\n    document.addEventListener('keydown', this.submitComment, false)\n    document.addEventListener('click', this.onClick, false)\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('keydown', this.submitComment, false)\n    document.removeEventListener('click', this.onClick, false)\n  }\n\n  onClick (event) {\n    if (event.target.tagName.toUpperCase() !== 'INPUT' && event.target.className.toString().indexOf('dd-list-item') === -1) {\n      this.setState({ isEditIndex: -1 })\n    }\n  }\n\n  render () {\n    const { commentContents, isLoading, userImg, userId, openCommentSettingMenuModal } = this.props\n    const { comment, showAlert, alertData } = this.state\n\n    return (\n      <div className={styles['root']}>\n        <div className={styles['scrollable']}>\n          <div>\n            {\n              commentContents.map((item, index) => {\n                return <CommentReplyListItem\n                  key={index}\n                  userId={userId}\n                  index={index}\n                  item={item}\n                  openMenu={openCommentSettingMenuModal}\n                />\n              })\n            }\n          </div>\n          {\n            isLoading ? (\n              <div className={styles['spinner-item']}>\n                <ClipLoader color={'#aaa'} size={15} loading={isLoading} />\n              </div>\n            ) : (null)\n          }\n          <div className={styles['action-section']}>\n            <div className={styles['comment-creator-profile']}>\n              <label >\n                <img id='profile-pic' src={userImg || constants.DEFAULT_USER_IMAGE} alt={'Commenter Profile'} />\n              </label>\n            </div>\n            <div className={styles['comment-input']}>\n              <input\n                autoFocus={!isMobile()}\n                value={comment}\n                name='comment-input'\n                onChange={(e) => this.setState({ comment: e.target.value })} />\n            </div>\n            <div className={styles['comment-action-icon']} onClick={this.submitComment} />\n          </div>\n        </div>\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nclass CommentReplyListItem extends PureComponent {\n  constructor (props) {\n    super()\n\n    this.state = {\n      editComment: '',\n      isEditIndex: -1\n    }\n\n    this.onEditComment = this.onEditComment.bind(this)\n    this.setToEditMode = this.setToEditMode.bind(this)\n    this.onMenuClicked = this.onMenuClicked.bind(this)\n  }\n\n  onEditComment (e) {\n    this.setState({ editComment: e.target.value })\n\n    // TODO: wait for Enter clicked, and then submit to update comment\n  }\n\n  setToEditMode (index, editComment) {\n    this.setState({\n      isEditIndex: index,\n      editComment: editComment\n    })\n  }\n\n  onMenuClicked (e, item, index) {\n    e.preventDefault()\n    e.stopPropagation()\n    this.props.openMenu(item.subContentId, () => this.setToEditMode(index, item.contentBlockArray[0]))\n  }\n\n  render () {\n    let { isEditIndex, editComment } = this.state\n    let { userId, item, index } = this.props\n\n    return (\n      <div className={styles['list-item']}>\n        <div className={styles['comment-creator-profile']}>\n          <img src={item.creatorImg || constants.DEFAULT_USER_IMAGE} alt={'Commenter Profile'} />\n        </div>\n\n        <div className={styles['comment-content-container']}>\n          <div>\n            <div className={styles['comment-creator']}>\n              <div className={styles['comment-creator-name']}>\n                {item.creatorName}\n              </div>\n            </div>\n            {\n              (index === isEditIndex) ? (\n                <div className={styles['comment-content-wrapper']}>\n                  <div className={styles['comment-content-input']}>\n                    <span>\n                      <input\n                        autoFocus\n                        name='comment-input'\n                        className={styles['comment-action-content-input']}\n                        value={editComment}\n                        onChange={this.onEditComment} />\n                    </span>\n                  </div>\n                  <div className={styles['comment-action-input-enter']} />\n                </div>\n              ) : (\n                <div className={styles['comment-content']}>\n                  {linkParser(item.contentBlockArray[0])}\n                </div>\n              )\n            }\n          </div>\n          <div title={epoch2FullTimeFormat(item.createTS.T)} className={styles['comment-creator-id-prefix']}>\n            {epoch2ReadFormat(item.createTS.T)}\n            {/* item.creatorId && item.creatorId.length >= 8? item.creatorId.substring(0, 8):'null' */}\n          </div>\n        </div>\n\n        <div title={constants.STATUS_ARRAY[item.status]} className={styles['comment-status-wrapper']}>\n          <div className={`${styles['comment-status']} ${styles[getStatusClass(item.status)]}`} />\n        </div>\n        <div className={styles['comment-manage']}>\n          {\n          // FIXME: i18n from backend\n            (item.contentBlockArray[0] === '(本文已被刪除)' || item.creatorId !== userId) ? (\n              null\n            ) : (\n              <div className={styles['list-item-ellipsis']} onClick={(e) => this.onMenuClicked(e, item, index)} />\n            )\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CommentReplyListComponent\n","import React,\n{ PureComponent } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport styles from './ArticleBar.module.css'\n\nclass ArticleBar extends PureComponent {\n  render () {\n    const { boardInfo, articleInfo, userId, openManageArticleModal } = this.props\n    const isCreator = userId === articleInfo.CreatorID\n\n    return (\n      <div className={styles['root']}>\n        <div className={styles['content']}>\n\n          <div className={styles['prev-button']}>\n            <Link to={`/board/${boardInfo.ID}`}>\n              <div className={styles['prev-button-icon']} />\n            </Link>\n          </div>\n\n          <div title={articleInfo.Title} className={styles['board-name']}>\n            {articleInfo.Title}\n          </div>\n\n          <div className={styles['menu-button']}>\n            {\n              isCreator ? (\n                <div className={styles['menu-button-icon']} onClick={openManageArticleModal} />\n              ) : null\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ArticleBar\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\nimport LRU from 'lru-cache'\n\nimport * as utils from './utils'\nimport * as serverUtils from './ServerUtils'\n\nimport * as constants from '../constants/Constants'\nimport { DEFAULT_USER_NAME,\n  DEFAULT_USER_IMAGE } from '../constants/Constants'\nimport { toJson } from '../utils/utils'\n\nexport const myClass = 'ARTICLE_PAGE'\n\nexport const myDuck = createDuck(myClass, 'article_page')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\nconst APPEND_ARTICLE = myDuck.defineType('APPEND_ARTICLE')\nconst APPEND_COMMENT = myDuck.defineType('APPEND_COMMENT')\nconst ADD_COMMENT = myDuck.defineType('ADD_COMMENT')\nconst DELETE_COMMENT = myDuck.defineType('DELETE_COMMENT')\n\nexport const init = (myId, parentId, parentClass, parentDuck) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, parentId, parentClass, parentDuck }))\n  }\n}\n\nexport const initParams = (myId, params) => {\n  return (dispatch, getState) => {\n    dispatch({\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: {\n        boardId: decodeURIComponent(params.boardId),\n        articleId: decodeURIComponent(params.articleId)\n      }\n    })\n  }\n}\n\n/*                          */\n/*  Get Board level Info    */\n/*                          */\n\nexport const getBoardInfo = (myId, boardId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getBoard(boardId))\n      .then(({ response: { result }, type, error, query }) => {\n        dispatch(postprocessGetBoardInfo(myId, result))\n      })\n  }\n}\n\nconst postprocessGetBoardInfo = (myId, result) => {\n  result = serverUtils.deserialize(result)\n\n  const boardInfo = {\n    ID: result.ID,\n    Status: result.S,\n    Title: result.Title,\n    LastSeen: result.LastSeen ? result.LastSeen : utils.emptyTimeStamp(),\n    UpdateTS: result.UpdateTS ? result.UpdateTS : utils.emptyTimeStamp(),\n    ArticleCreateTS: result.ArticleCreateTS ? result.ArticleCreateTS : utils.emptyTimeStamp()\n  }\n\n  console.log('doArticlePage.postprocessGetBoardInfo: boardInfo:', boardInfo)\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { boardInfo: boardInfo }\n  }\n}\n\n/*                            */\n/*  Get Article level Info    */\n/*                            */\n\nexport const getArticleInfo = (myId, boardId, articleId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getArticle(boardId, articleId))\n      .then(({ response: { result }, type, error, query }) => {\n        let creatorIds = [result.CreatorID]\n        dispatch(serverUtils.getUsersInfo(creatorIds))\n          .then((usersInfo) => {\n            dispatch(postprocessGetArticleInfo(myId, result, usersInfo))\n          })\n      })\n  }\n}\n\nconst postprocessGetArticleInfo = (myId, result, usersInfo) => {\n  result = serverUtils.deserialize(result)\n\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  let userId = result.CreatorID\n  let userNameMap = usersInfo['userName'] || {}\n  let userImgMap = usersInfo['userImg'] || {}\n\n  let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n  let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n\n  const articleInfo = {\n    ID: result.ID,\n    CreateTS: result.CreateTS ? result.CreateTS : utils.emptyTimeStamp(),\n    UpdateTSkey: result.UpdateTSkey,\n    CreatorID: result.CreatorID,\n    CreatorName: userName,\n    CreatorImg: userImg,\n    BoardID: result.BoardID,\n    ContentBlockID: result.ContentBlockID,\n    NBlock: result.NBlock,\n    NPush: result.NPush,\n    NBoo: result.NBoo,\n    Title: result.Title,\n    LastSeen: result.LastSeen ? result.LastSeen : utils.emptyTimeStamp()\n  }\n\n  console.log('doArticlePage.postprocessGetArticleInfo: articleInfo:', articleInfo)\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { articleInfo: articleInfo }\n  }\n}\n\n/*                              */\n/*  Update Article level Info   */\n/*                              */\n\nexport const markArticle = (myId, boardId, articleId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.markArticle(boardId, articleId))\n      .then(({ response: { result }, type, error, query }) => {\n        dispatch(postprocessMarkArticle(myId, result))\n      })\n  }\n}\n\nconst postprocessMarkArticle = (myId, result) => {\n  /* Do nothing */\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: {}\n  }\n}\n\n/*                                */\n/*  Get Article/Comment Content   */\n/*                                */\n\nexport const getArticleContent = (myId, boardId, articleId, blockId, limit) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getArticle(boardId, articleId))\n      .then(({ response: articleResult, type, error, query }) => {\n        const subContentId = articleResult.result.ContentBlockID\n        const totalBlockNum = articleResult.result.NBlock\n        const artilceLimit = (totalBlockNum < limit) ? totalBlockNum : limit\n        dispatch(serverUtils.getContent(boardId, articleId, subContentId, constants.CONTENT_TYPE_ARTICLE, blockId, artilceLimit, constants.LIST_ORDER_NEXT))\n          .then(({ response: { result }, type, error, query }) => {\n            let creatorIds = result.map(each => each.CID).filter(each => each)\n            dispatch(serverUtils.getUsersInfo(creatorIds))\n              .then((usersInfo) => {\n                dispatch(postprocessGetArticleContent(myId, result, blockId, usersInfo))\n              })\n          })\n      })\n  }\n}\n\nconst postprocessGetArticleContent = (myId, result, blockId, usersInfo) => {\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  let articleContents = result.map((each) => {\n    let userId = each.CID\n    let userNameMap = usersInfo['userName'] || {}\n    let userImgMap = usersInfo['userImg'] || {}\n\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n    let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n\n    return {\n      contentBlockArray: each.B.map((e) => { return toJson(serverUtils.b64decode(e)) }),\n      blockId: each.BID,\n      subContentId: each.ID,\n      articleId: each.RID,\n      contentType: each.ct,\n      commentType: each.mt,\n      creatorId: each.CID,\n      status: each.S,\n      creatorName: userName,\n      creatorImg: userImg\n    }\n  })\n\n  console.log('doArticlePage.postprocessGetArticleContent: result:', articleContents)\n\n  if (articleContents.length === 0) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { allArticleLoaded: true }\n    }\n  } else if (blockId === 0) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { articleContentsList: articleContents }\n    }\n  } else {\n    return {\n      myId,\n      myClass,\n      type: APPEND_ARTICLE,\n      data: { articleContents: articleContents }\n    }\n  }\n}\n\nexport const _appendArticle = (state, action) => {\n  const { myId, data: { articleContents } } = action\n\n  let articleContentsList = state.getIn([myId, 'articleContentsList'], Immutable.List())\n\n  let matchIndex = articleContentsList.length\n  if (articleContents.length > 0) {\n    matchIndex = articleContentsList.toJS().findIndex((each) => each.blockId === articleContents[0].blockId)\n  }\n  if (matchIndex === -1) {\n    matchIndex = articleContentsList.length\n  }\n\n  return state.setIn([myId, 'articleContentsList'], articleContentsList.slice(0, matchIndex).concat(articleContents))\n}\n\nexport const getCommentContent = (myId, boardId, articleId, latestSubContentId, blockId, limit) => {\n  return (dispatch, getState) => {\n    let listOrder = null\n    if (latestSubContentId === constants.EMPTY_ID) {\n      /* get initial comments */\n      listOrder = constants.LIST_ORDER_NEXT\n    } else {\n      /* get latest comments */\n      listOrder = constants.LIST_ORDER_PREV\n    }\n    dispatch(serverUtils.getContent(boardId, articleId, latestSubContentId, constants.CONTENT_TYPE_COMMENT, blockId, limit, listOrder))\n      .then(({ response: { result }, type, error, query }) => {\n        let creatorIds = result.map(each => each.CID).filter(each => each)\n        dispatch(serverUtils.getUsersInfo(creatorIds))\n          .then((usersInfo) => {\n            dispatch(postprocessGetCommentContent(myId, result, latestSubContentId, usersInfo))\n          })\n      })\n  }\n}\n\nconst postprocessGetCommentContent = (myId, result, latestSubContentId, usersInfo) => {\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  let commentContentsList = result.map((each) => {\n    let userId = each.CID\n    let userNameMap = usersInfo['userName'] || {}\n    let userImgMap = usersInfo['userImg'] || {}\n\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n    let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n\n    return {\n      contentBlockArray: each.B.map((e) => { return serverUtils.b64decode(e) }),\n      blockId: each.BID,\n      subContentId: each.ID,\n      articleId: each.RID,\n      contentType: each.ct,\n      commentType: each.mt,\n      creatorId: each.CID,\n      status: each.S,\n      creatorName: userName,\n      creatorImg: userImg,\n      createTS: each.CT ? each.CT : utils.emptyTimeStamp(),\n      updateTS: each.UT ? each.UT : utils.emptyTimeStamp()\n    }\n  })\n\n  console.log('doArticlePage.postprocessGetCommentContent: result:', commentContentsList)\n\n  if (latestSubContentId === constants.EMPTY_ID) {\n    /* get initial comments */\n    let lruCache = new LRU(constants.NUM_CACHE_COMMENT)\n    commentContentsList.forEach((comment, index) => {\n      lruCache.set(comment.subContentId, { index: index, comment: comment })\n    })\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { commentContents: { lru: lruCache, commentContentsList: commentContentsList } }\n    }\n  } else {\n    /* get latest comments */\n    return {\n      myId,\n      myClass,\n      type: APPEND_COMMENT,\n      data: { comments: commentContentsList.reverse() }\n    }\n  }\n}\n\nexport const _appendComment = (state, action) => {\n  const { myId, data: { comments } } = action\n\n  let commentContents = state.getIn([myId, 'commentContents'], Immutable.Map()).toJS()\n  let commentContentsList = commentContents.commentContentsList || []\n  let lruCache = commentContents.lru || new LRU(constants.NUM_CACHE_COMMENT)\n\n  let resultCommentList = []\n  if (commentContentsList.length === 0) {\n    /* append comments */\n    comments.forEach((comment, index) => {\n      resultCommentList.push(comment)\n      lruCache.set(comment.subContentId, { index: index, comment: comment })\n    })\n  } else {\n    /* 1. find earlist start comment and save to local lru */\n    let localLRU = new LRU(constants.NUM_CONTENT_PER_REQ)\n    let startComment = null\n    let earlistTS = 2147483648 /* year 2038 */\n    comments.forEach((comment, index) => {\n      localLRU.set(comment.subContentId, comment)\n      if (lruCache.get(comment.subContentId) && lruCache.get(comment.subContentId).comment.createTS.T < earlistTS) {\n        startComment = lruCache.get(comment.subContentId)\n        earlistTS = startComment.comment.createTS.T\n      }\n    })\n    /* 2. start merge  */\n    let oriIndex = startComment ? startComment.index : commentContentsList.length\n    let newIndex = 0\n    let mergeIndex = oriIndex\n    let oriList = commentContentsList.slice(0, oriIndex)\n    let mergedList = []\n\n    while (commentContentsList.length > oriIndex || comments.length > newIndex) {\n      if (commentContentsList.length > oriIndex && comments.length > newIndex) {\n        let oriComment = commentContentsList[oriIndex]\n        let newComment = comments[newIndex]\n        /* both left */\n        if (oriComment.createTS.T <= newComment.createTS.T) {\n          if (!localLRU.get(oriComment.subContentId)) {\n            mergedList.push(oriComment)\n            lruCache.set(oriComment.subContentId, { index: mergeIndex, comment: oriComment })\n            mergeIndex += 1\n          }\n          oriIndex += 1\n        } else {\n          mergedList.push(newComment)\n          lruCache.set(newComment.subContentId, { index: mergeIndex, comment: newComment })\n          mergeIndex += 1\n          newIndex += 1\n        }\n      } else if (commentContentsList.length > oriIndex) {\n        /* only ori */\n        let oriComment = commentContentsList[oriIndex]\n        if (!localLRU.get(oriComment.subContentId)) {\n          mergedList.push(oriComment)\n          lruCache.set(oriComment.subContentId, { index: mergeIndex, comment: oriComment })\n          mergeIndex += 1\n        }\n        oriIndex += 1\n      } else {\n        /* only new */\n        let newComment = comments[newIndex]\n        mergedList.push(newComment)\n        lruCache.set(newComment.subContentId, { index: mergeIndex, comment: newComment })\n        mergeIndex += 1\n        newIndex += 1\n      }\n    }\n    resultCommentList = oriList.concat(mergedList)\n    localLRU.reset()\n  }\n\n  state = state.setIn([myId, 'commentContents', 'lru'], lruCache)\n  state = state.setIn([myId, 'commentContents', 'commentContentsList'], Immutable.List(resultCommentList))\n\n  return state\n}\n\nexport const getMoreComments = (myId, boardId, articleId, startSubContentId, limit) => {\n  return (dispatch, getState) => {\n    dispatch(preprocessSetStartLoading(myId))\n    dispatch(serverUtils.getContent(boardId, articleId, startSubContentId, constants.CONTENT_TYPE_COMMENT, 0, limit, constants.LIST_ORDER_NEXT))\n      .then(({ response: { result }, type, error, query }) => {\n        let creatorIds = result ? result.map(each => each.CID).filter(each => each) : []\n        dispatch(serverUtils.getUsersInfo(creatorIds))\n          .then((maps) => {\n            dispatch(postprocessGetMoreComments(myId, result, startSubContentId, maps))\n            dispatch(postprocessSetFinshLoading(myId))\n          })\n      })\n  }\n}\n\nconst postprocessGetMoreComments = (myId, result, startSubContentId, usersInfo) => {\n  if (!result) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { allCommentsLoaded: true }\n    }\n  }\n\n  result = result.map(serverUtils.deserialize)\n  result = result.slice(1)\n\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  const commentContentsList = result.map(each => {\n    let userId = each.CID\n    let userNameMap = usersInfo['userName'] || {}\n    let userImgMap = usersInfo['userImg'] || {}\n\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n    let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n\n    return {\n      contentBlockArray: each.B.map((e) => { return serverUtils.b64decode(e) }),\n      blockId: each.BID,\n      subContentId: each.ID,\n      articleId: each.RID,\n      contentType: each.ct,\n      commentType: each.mt,\n      status: each.S,\n      creatorId: each.CID,\n      creatorName: userName,\n      creatorImg: userImg,\n      createTS: each.CT ? each.CT : utils.emptyTimeStamp(),\n      updateTS: each.UT ? each.UT : utils.emptyTimeStamp()\n    }\n  })\n\n  console.log('doArticlePage.postprocessGetMoreComments: commentContentsList:', commentContentsList)\n\n  if (commentContentsList.length === 0) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { allCommentsLoaded: true }\n    }\n  } else {\n    return {\n      myId,\n      myClass,\n      type: APPEND_COMMENT,\n      data: { comments: commentContentsList }\n    }\n  }\n}\n\n/*                            */\n/*  Update Article Content    */\n/*                            */\n\nexport const editArticle = (myId, boardId, articleId, article, mediaIds) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.updateArticle(boardId, articleId, article, mediaIds))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(serverUtils.getContent(result.BID, result.AID, result.cID, 0, 0, constants.NUM_CONTENT_PER_REQ, constants.LIST_ORDER_NEXT))\n          .then(({ response: contentResult, type, error, query }) => {\n            let creatorIds = contentResult.result.map(each => each.CID).filter(each => each)\n            let articleResult = contentResult.result\n            dispatch(serverUtils.getUsersInfo(creatorIds))\n              .then((usersInfo) => {\n                dispatch(postprocessGetArticleContent(myId, articleResult, 0, usersInfo))\n              })\n          })\n      })\n  }\n}\n\nexport const deleteArticle = (myId, boardId, articleId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.deleteArticle(boardId, articleId))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessDeleteArticle(myId, boardId, articleId))\n      })\n  }\n}\n\nconst postprocessDeleteArticle = (myId, boardId, articleId) => {\n  console.log('doArticlePage.postprocessDeleteArticle: result:', articleId)\n}\n\n/*                            */\n/*  Update Comment Content    */\n/*                            */\n\nexport const addComment = (myId, boardId, articleId, comment, userName, userImg, userId, mediaId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.createComment(boardId, articleId, comment, mediaId))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessAddComment(myId, boardId, articleId, result.CID, comment, userName, userImg, userId))\n      })\n  }\n}\n\nconst postprocessAddComment = (myId, boardId, articleId, commentId, comment, userName, userImg, userId) => {\n  const newComment = {\n    contentBlockArray: [comment],\n    blockId: 0,\n    subContentId: commentId,\n    articleId: articleId,\n    contentType: 1, /* Comment is 1 */\n    commentType: null,\n    status: 0,\n    creatorId: userId,\n    creatorName: userName,\n    creatorImg: userImg,\n    createTS: utils.emptyTimeStamp(),\n    updateTS: utils.emptyTimeStamp()\n  }\n\n  console.log('doArticlePage.postprocessAddComment: newComment:', newComment)\n\n  return {\n    myId,\n    myClass,\n    type: ADD_COMMENT,\n    data: { comment: newComment }\n  }\n}\n\nexport const _addComment = (state, action) => {\n  const { myId, data: { comment } } = action\n\n  let commentContents = state.getIn([myId, 'commentContents'], Immutable.Map()).toJS()\n  let commentContentsList = commentContents.commentContentsList || []\n  let lruCache = commentContents.lru\n\n  lruCache.set(comment.subContentId, { index: commentContentsList.length, comment: comment })\n\n  state = state.setIn([myId, 'commentContents', 'lru'], lruCache)\n  state = state.updateIn([myId, 'commentContents', 'commentContentsList'], arr => arr.push(Immutable.Map(comment)))\n\n  return state\n}\n\nexport const deleteComment = (myId, boardId, articleId, commentId, mediaId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.deleteComment(boardId, articleId, commentId, mediaId))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessDeleteComment(myId, commentId))\n      })\n  }\n}\n\nconst postprocessDeleteComment = (myId, commentId) => {\n  console.log('doArticlePage.postprocessDeleteComment: commentId:', commentId)\n\n  return {\n    myId,\n    myClass,\n    type: DELETE_COMMENT,\n    data: { commentId: commentId }\n  }\n}\n\nexport const _deleteComment = (state, action) => {\n  const { myId, data: { commentId } } = action\n\n  return state.updateIn([myId, 'commentContents', 'commentContentsList'], arr => arr.filter(each => { return each.subContentId !== commentId }))\n}\n\nexport const clearData = (myId) => {\n  return (dispatch, getState) => {\n    dispatch(postprocessClearData(myId))\n  }\n}\n\nconst postprocessClearData = (myId) => {\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: {\n      articleContentsList: [],\n      commentContents: { lru: null, commentContentsList: [] },\n      allArticleLoaded: false,\n      allCommentsLoaded: false\n    }\n  }\n}\n\n/*             */\n/*  Loading    */\n/*             */\n\nconst preprocessSetStartLoading = (myId) => {\n  console.log('doArticlePage.preprocessSetStartLoading')\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { isCommentLoading: true }\n  }\n}\n\nconst postprocessSetFinshLoading = (myId) => {\n  console.log('doArticlePage.postprocessSetFinshLoading')\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { isCommentLoading: false }\n  }\n}\n\n/*                                */\n/*  Download/Upload File/Image    */\n/*                                */\n\nexport const downloadFile = (myId, boardId, mediaId, callBack) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.downloadFile(boardId, mediaId))\n      .then(({ response: result, type, query, error }) => {\n        callBack(result)\n      })\n  }\n}\n\nfunction uploadAttachments (boardId, attachments) {\n  return dispatch => Promise.all(attachments.map((attachment) => {\n    if (attachment.type === 'IMAGE') {\n      /* for image */\n      return dispatch(serverUtils.uploadImg(boardId, attachment))\n        .then(({ response: { result }, type, query, error }) => {\n          return { 'attachmentId': attachment.id, 'mediaId': result.ID, 'boardId': result.BID, 'type': 'IMAGE' }\n        })\n    } else {\n      /* for file */\n      return dispatch(serverUtils.uploadFile(boardId, attachment))\n        .then(({ response: { result }, type, query, error }) => {\n          return { 'attachmentId': attachment.id, 'mediaId': result.ID, 'boardId': result.BID, 'type': 'FILE' }\n        })\n    }\n  }))\n}\n\nexport const createArticleWithAttachments = (myId, userName, userImg, boardId, articleId, reducedArticleArray, attachments) => {\n  return (dispatch, getState) => {\n    dispatch(uploadAttachments(boardId, attachments))\n      .then((attachmentIdObjs) => {\n        /* Attachment ID - data url map */\n        let attachmentIdMap = attachmentIdObjs.reduce((acc, current) => {\n          acc[current.attachmentId] = current.mediaId\n          return acc\n        }, {})\n\n        /* Replace attachment ID with mediaId */\n        let articleArray = reducedArticleArray.map((each, index) => {\n          if (each.type === constants.CONTENT_TYPE_FILE || each.type === constants.CONTENT_TYPE_IMAGE) {\n            let params = each.param\n            attachments.forEach((attachment) => {\n              if (params.id === attachment.id) {\n                params.id = attachmentIdMap[attachment.id]\n              }\n            })\n            each.param = params\n          }\n\n          return JSON.stringify(each)\n        })\n\n        let mediaIds = attachmentIdObjs.map((attachment) => {\n          return attachment.mediaId\n        })\n\n        /* Update article with attachment Ids */\n        dispatch(serverUtils.updateArticle(boardId, articleId, articleArray, mediaIds))\n          .then(({ response: { result }, type, query, error }) => {\n            let boardId = result.BID\n            let articleId = result.AID\n            let subContentId = result.cID\n            // let totalBlockNum = result.NB\n            let artilceLimit = 0 // (totalBlockNum < constants.NUM_CONTENT_PER_REQ) ? totalBlockNum : constants.NUM_CONTENT_PER_REQ\n            let blockId = 0\n\n            dispatch(serverUtils.getContent(boardId, articleId, subContentId, constants.CONTENT_TYPE_ARTICLE, blockId, artilceLimit, constants.LIST_ORDER_NEXT))\n              .then(({ response: contentResult, type, error, query }) => {\n                let creatorIds = contentResult.result.map(each => each.CID).filter(each => each)\n                dispatch(serverUtils.getUsersInfo(creatorIds))\n                  .then((usersInfo) => {\n                    dispatch(postprocessGetArticleContent(myId, contentResult.result, 0, usersInfo))\n                  })\n              })\n          })\n      })\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData,\n  [APPEND_ARTICLE]: _appendArticle,\n  [ADD_COMMENT]: _addComment,\n  [DELETE_COMMENT]: _deleteComment,\n  [APPEND_COMMENT]: _appendComment\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Immutable from 'immutable'\nimport $ from 'jquery'\n// import { PTTAI_URL_BASE }         from '../config'\n\nimport Empty from '../components/Empty'\nimport ArticleComponent from '../components/ArticleComponent'\nimport CommentReplyListComponent from '../components/CommentReplyListComponent'\nimport ArticleBar from '../components/ArticleBar'\n\nimport { getRoot } from '../utils/utils'\nimport { epoch2FullDate,\n  epoch2ReadFormat } from '../utils/utilDatetime'\nimport googleAnalytics from '../utils/googleAnalytics'\n\nimport * as doArticlePage from '../reducers/ArticlePage'\nimport * as doModalContainer from '../reducers/ModalContainer'\nimport * as constants from '../constants/Constants'\n\nimport styles from './ArticlePage.module.css'\n\nconst iframeClass = 'iframe.' + constants.IFRAME_CLASS_NAME\nconst attachmentClass = '.' + constants.FILE_CLASS_NAME\n\nclass ArticlePage extends PureComponent {\n  constructor (props) {\n    super()\n    this.refreshPageInterval = null\n    this.state = {\n      pullTimer: null,\n      attachmentTimer: null,\n      count: 0\n    }\n    this.pullContent = this.pullContent.bind(this)\n    this.attachmentLoaded = this.attachmentLoaded.bind(this)\n    this.handleScroll = this.handleScroll.bind(this)\n    this.needFetchMore = this.needFetchMore.bind(this)\n    this.downloadAttachment = this.downloadAttachment.bind(this)\n    this.getLatestComment = this.getLatestComment.bind(this)\n  }\n\n  componentWillMount () {\n    const { actions: { doArticlePage }, match: { params }, myId } = this.props\n\n    doArticlePage.initParams(myId, params)\n    doArticlePage.getBoardInfo(myId, decodeURIComponent(params.boardId))\n    doArticlePage.getArticleInfo(myId, decodeURIComponent(params.boardId), decodeURIComponent(params.articleId))\n    doArticlePage.getArticleContent(myId, decodeURIComponent(params.boardId), decodeURIComponent(params.articleId), 0, constants.NUM_CONTENT_PER_REQ)\n    doArticlePage.getCommentContent(myId, decodeURIComponent(params.boardId), decodeURIComponent(params.articleId), constants.EMPTY_ID, 0, constants.NUM_CONTENT_PER_REQ)\n\n    this.refreshPageInterval = setInterval(this.getLatestComment, constants.REFRESH_INTERVAL)\n  }\n\n  getLatestComment () {\n    const { myId, /* articlePage, */ actions: { doArticlePage }, match: { params } } = this.props\n\n    // let me = articlePage.get(myId, Immutable.Map())\n\n    // let commentContents     = me.get('commentContents', Immutable.Map()).toJS()\n    // let commentContentsList = commentContents.commentContentsList || []\n    // let latestSubContentId  = (commentContentsList.length > 0) ? commentContentsList[commentContentsList.length - 1].subContentId: constants.EMPTY_ID\n\n    doArticlePage.getBoardInfo(myId, decodeURIComponent(params.boardId))\n    doArticlePage.getArticleInfo(myId, decodeURIComponent(params.boardId), decodeURIComponent(params.articleId))\n    doArticlePage.getArticleContent(myId, decodeURIComponent(params.boardId), decodeURIComponent(params.articleId), 0, constants.NUM_CONTENT_PER_REQ)\n\n    doArticlePage.getCommentContent(myId, decodeURIComponent(params.boardId), decodeURIComponent(params.articleId), constants.EMPTY_ID, 0, constants.NUM_CONTENT_PER_REQ)\n  }\n\n  downloadAttachment (e, iframeParams) {\n    const { actions: { doArticlePage }, match: { params }, myId } = this.props\n\n    function onDownload (data) {\n      const link = document.createElement('a')\n      link.href = URL.createObjectURL(new Blob([data]))\n      link.setAttribute('download', iframeParams.fileName)\n\n      document.body.appendChild(link)\n      link.click()\n    }\n\n    doArticlePage.downloadFile(myId, decodeURIComponent(params.boardId), iframeParams.fileId, onDownload)\n  }\n\n  componentDidMount () {\n    const { actions: { doArticlePage }, match: { params }, myId } = this.props\n    const { pullTimer, attachmentTimer } = this.state\n\n    clearInterval(pullTimer)\n    clearInterval(attachmentTimer)\n\n    this.setState({\n      pullTimer: setInterval(this.pullContent, constants.CONTENT_REFETCH_INTERVAL),\n      attachmentTimer: setInterval(this.attachmentLoaded, constants.ATTACHMENT_LOAD_INTERVAL)\n    })\n\n    doArticlePage.markArticle(myId, decodeURIComponent(params.boardId), decodeURIComponent(params.articleId))\n    googleAnalytics.firePageView()\n  }\n\n  componentWillUnmount () {\n    const { actions: { doArticlePage }, myId } = this.props\n    const { pullTimer, attachmentTimer } = this.state\n\n    doArticlePage.clearData(myId)\n    clearInterval(pullTimer)\n    clearInterval(attachmentTimer)\n    clearInterval(this.refreshPageInterval)\n  }\n\n  pullContent () {\n    const { myId, articlePage, actions: { doArticlePage }, match: { params } } = this.props\n    const { count, pullTimer } = this.state\n\n    let me = articlePage.get(myId, Immutable.Map())\n    let articleContentsList = me.get('articleContentsList', Immutable.List()).toJS()\n    articleContentsList = articleContentsList.filter((each) => each.contentType === constants.CONTENT_TYPE_ARTICLE)\n\n    doArticlePage.getArticleContent(myId, decodeURIComponent(params.boardId), decodeURIComponent(params.articleId), 0, constants.NUM_CONTENT_PER_REQ)\n\n    if (articleContentsList.length > 0 || count === constants.ARTICLE_PULL_COUNT_DOWN) {\n      this.setState({ count: 0 })\n      clearInterval(pullTimer)\n    } else {\n      this.setState({ count: count + 1 })\n    }\n  }\n\n  attachmentLoaded () {\n    const { attachmentTimer } = this.state\n\n    let that = this\n    let allLoaded = Array.from($(iframeClass)).reduce((acc, current, idx) => {\n      return acc && $($(current).contents()[0], window).find(attachmentClass).length\n    }, true)\n\n    if (allLoaded && Array.from($(iframeClass)).length) {\n      Array.from($(iframeClass)).forEach((ele) => {\n        let iframeParams = {\n          fileId: $(ele).attr('data-id'),\n          fileName: $(ele).attr('data-name'),\n          fileSize: $(ele).attr('data-size'),\n          fileType: $(ele).attr('data-type')\n        }\n        $($(ele).contents()[0], window).find(attachmentClass).bind('click', (e) => that.downloadAttachment(e, iframeParams))\n      })\n      clearInterval(attachmentTimer)\n    }\n  }\n\n  needFetchMore () {\n    const { myId, articlePage } = this.props\n    const { scrollTop, clientHeight, scrollHeight } = this.scroller\n\n    let me = articlePage.get(myId, Immutable.Map())\n\n    let isCommentLoading = me.get('isCommentLoading', false)\n    let allCommentsLoaded = me.get('allCommentsLoaded', false)\n\n    return (\n      this.scroller &&\n      !isCommentLoading &&\n      !allCommentsLoaded &&\n      scrollTop + clientHeight >= scrollHeight\n    )\n  }\n\n  handleScroll () {\n    if (this.needFetchMore()) {\n      const { myId, articlePage, actions: { doArticlePage } } = this.props\n\n      let me = articlePage.get(myId, Immutable.Map())\n      let boardId = me.get('boardId', '')\n      let articleId = me.get('articleId', '')\n      let commentContents = me.get('commentContents', Immutable.Map()).toJS()\n      let commentContentsList = commentContents.commentContentsList || []\n      let startContentId = commentContentsList.length > 0 ? commentContentsList[commentContentsList.length - 1].subContentId : constants.EMPTY_ID\n\n      doArticlePage.getMoreComments(myId, boardId, articleId, startContentId, constants.NUM_CONTENT_PER_REQ)\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { myId,\n      location,\n      match: { params },\n      actions: { doArticlePage } } = this.props\n    const { pullTimer, attachmentTimer } = this.state\n\n    if (prevProps.location.pathname !== location.pathname) {\n      doArticlePage.clearData(myId)\n      doArticlePage.initParams(myId, params)\n      doArticlePage.getBoardInfo(myId, decodeURIComponent(params.boardId))\n      doArticlePage.getArticleInfo(myId, decodeURIComponent(params.boardId), decodeURIComponent(params.articleId))\n      doArticlePage.getArticleContent(myId, decodeURIComponent(params.boardId), decodeURIComponent(params.articleId), 0, constants.NUM_CONTENT_PER_REQ)\n      doArticlePage.getCommentContent(myId, decodeURIComponent(params.boardId), decodeURIComponent(params.articleId), constants.EMPTY_ID, 0, constants.NUM_CONTENT_PER_REQ)\n      doArticlePage.markArticle(myId, decodeURIComponent(params.boardId), decodeURIComponent(params.articleId))\n\n      clearInterval(pullTimer)\n      clearInterval(attachmentTimer)\n      clearInterval(this.refreshPageInterval)\n\n      this.setState({\n        pullTimer: setInterval(this.pullContent, constants.CONTENT_REFETCH_INTERVAL),\n        attachmentTimer: setInterval(this.attachmentLoaded, constants.ATTACHMENT_LOAD_INTERVAL)\n      })\n\n      this.refreshPageInterval = setInterval(this.getLatestComment, constants.REFRESH_INTERVAL)\n    }\n  }\n\n  render () {\n    const { myId, articlePage, actions: { doArticlePage, doModalContainer } } = this.props\n    const { count } = this.state\n\n    if (!myId) return (<Empty />)\n\n    let userId = getRoot(this.props).getIn(['userInfo', 'userId'])\n    let userName = getRoot(this.props).getIn(['userInfo', 'userName'])\n    let userImg = getRoot(this.props).getIn(['userInfo', 'userImg'])\n\n    let me = articlePage.get(myId, Immutable.Map())\n\n    let boardId = me.get('boardId', '')\n    let articleId = me.get('articleId', '')\n    let isCommentLoading = me.get('isCommentLoading', false)\n\n    let boardInfo = me.get('boardInfo', Immutable.Map()).toJS()\n    let articleInfo = me.get('articleInfo', Immutable.Map()).toJS()\n    let articleContentsList = me.get('articleContentsList', Immutable.List()).toJS()\n    let commentContents = me.get('commentContents', Immutable.Map()).toJS()\n    let commentContentsList = commentContents.commentContentsList || []\n\n    let deleteArticle = () => {\n      doArticlePage.deleteArticle(myId, boardId, articleId)\n      doModalContainer.closeModal()\n\n      this.props.history.push(`/board/${boardId}`)\n    }\n\n    let openManageArticleModal = (modalData) => {\n      doModalContainer.setInput({\n        isCreator: articleInfo.CreatorID === userId,\n        articleId: articleInfo.ID,\n        onEditArticle: openEditArticleModal,\n        onDeleteArticle: deleteArticle\n      })\n\n      doModalContainer.openModal(constants.ARTICLE_SETTING_MENU_MODAL)\n    }\n\n    let openEditArticleSubmit = (title, reducedArticleArray, attachments) => {\n      doArticlePage.createArticleWithAttachments(myId, userName, userImg, boardId, articleId, reducedArticleArray, attachments)\n      doArticlePage.markArticle(myId, boardId, articleId)\n\n      doModalContainer.closeModal()\n    }\n\n    const openEditArticleModal = () => {\n      doModalContainer.setInput({\n        boardId: boardInfo.ID,\n        articleTitle: articleInfo.Title,\n        articleContentsList: articleContentsList,\n        onDeleteArticle: deleteArticle\n      })\n      doModalContainer.setSubmit(openEditArticleSubmit)\n      doModalContainer.openModal(constants.EDIT_ARTICLE_MODAL)\n    }\n\n    let openNameCard = () => {\n      doModalContainer.setInput({\n        userId: articleInfo.CreatorID,\n        isEditable: false\n      })\n      doModalContainer.openModal(constants.NAME_CARD_MODAL)\n    }\n\n    let onCommentAdded = (comment) => {\n      let mediaIds = ''\n      doArticlePage.addComment(myId, boardId, articleId, comment, userName, userImg, userId, mediaIds)\n      doArticlePage.markArticle(myId, boardId, articleId)\n\n      googleAnalytics.fireEventOnProb('Comment', 'CreateCommentSuccess', 0.1)\n    }\n\n    const onDeleteComment = (commentId) => {\n      let mediaIds = ''\n      doArticlePage.deleteComment(myId, boardId, articleId, commentId, mediaIds)\n    }\n\n    const openCommentSettingMenuModal = (commentId, setToEditMode) => {\n      doModalContainer.setInput({\n        onDeleteComment: () => onDeleteComment(commentId),\n        onEditComment: setToEditMode\n      })\n      doModalContainer.openModal(constants.COMMENT_SETTING_MENU_MODAL)\n    }\n\n    return (\n      <div className={styles['root']} onScroll={this.handleScroll} ref={(scroller) => { this.scroller = scroller }}>\n        <ArticleBar\n          userId={userId}\n          boardInfo={boardInfo}\n          articleInfo={articleInfo}\n          openManageArticleModal={openManageArticleModal} />\n        {\n          $.isEmptyObject(articleInfo) ? (\n            <div className={styles['time']} />\n          ) : (\n            <div title={epoch2FullDate(articleInfo.CreateTS.T)} className={styles['time']}>\n              {epoch2ReadFormat(articleInfo.CreateTS.T)}\n            </div>\n          )\n        }\n        <ArticleComponent\n          boardInfo={boardInfo}\n          userId={userId}\n          pullCount={count}\n          articleInfo={articleInfo}\n          articleContentsList={articleContentsList}\n          openNameCard={openNameCard} />\n        <CommentReplyListComponent\n          isLoading={isCommentLoading}\n          userId={userId}\n          userImg={userImg}\n          commentContents={commentContentsList}\n          onCommentAdded={onCommentAdded}\n          openCommentSettingMenuModal={openCommentSettingMenuModal} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doArticlePage: bindActionCreators(doArticlePage, dispatch),\n    doModalContainer: bindActionCreators(doModalContainer, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticlePage)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\n\nexport const myClass = 'PROFILE_PAGE'\n\nexport const myDuck = createDuck(myClass, 'Profile_Page')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, parentId, parentClass, parentDuck) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, parentId, parentClass, parentDuck }))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport AlertComponent from '../components/AlertComponent'\n\nimport * as doProfilePage from '../reducers/ProfilePage'\nimport * as doModalContainer from '../reducers/ModalContainer'\n\nimport styles from './ProfilePage.module.css'\n\nclass ProfilePage extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      profilePic: '',\n      showAlert: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n  }\n\n  render () {\n    const { userId,\n      userName,\n      userImg,\n      openNameCard,\n      // hasUnread,\n      // onLatestClicked,\n      isChatRoom,\n      onSettingClicked } = this.props\n\n    const { alertData, showAlert } = this.state\n\n    // let latestClass = hasUnread? 'profile-latest-active':'profile-latest';\n\n    let rootClass = styles['root']\n    if (isChatRoom) { rootClass += ' ' + styles['collapsed'] }\n\n    return (\n      <div className={rootClass}>\n        <div className={styles['content']}>\n          <div className={styles['profile-picture']} onClick={openNameCard}>\n            {\n              userImg ? (\n                <img src={userImg} alt={'User Profile'} />\n              ) : null\n            }\n          </div>\n          <div className={styles['profile-description']} onClick={openNameCard}>\n            <div title={userId} className={styles['name']} >{userName}</div>\n          </div>\n          {/* <div className={styles[latestClass]} onClick={onLatestClicked}></div> */}\n          <div className={styles['profile-qr-code']} onClick={onSettingClicked} />\n        </div>\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doProfilePage: bindActionCreators(doProfilePage, dispatch),\n    doModalContainer: bindActionCreators(doModalContainer, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage)\n","import React, { PureComponent } from 'react'\nimport { BeatLoader, ClipLoader } from 'react-spinners'\n\nimport { Link } from 'react-router-dom'\nimport { injectIntl,\n  FormattedMessage } from 'react-intl'\n\nimport { isUnRead,\n  getStatusClass,\n  toJson } from '../utils/utils'\nimport { epoch2ReadFormat } from '../utils/utilDatetime'\n\nimport * as constants from '../constants/Constants'\n\nimport styles from './FriendListComponent.module.css'\n\nclass FriendListComponent extends PureComponent {\n  constructor (props) {\n    super()\n    this.topItem = null\n    this.onMenuTrigger = this.onMenuTrigger.bind(this)\n    this.needFetchMore = this.needFetchMore.bind(this)\n    this.handleScroll = this.handleScroll.bind(this)\n  }\n\n  needFetchMore () {\n    const { isLoading, allFriendsLoaded } = this.props\n    const { scrollTop } = this.scroller\n    return (\n      this.scroller &&\n      !isLoading &&\n      !allFriendsLoaded &&\n      scrollTop <= 0\n    )\n  }\n\n  handleScroll () {\n    if (this.needFetchMore()) {\n      const { onGetMoreFriends, friendList } = this.props\n\n      let startFriendId = friendList[0].friendID\n\n      this.topItem = this.scroller.childNodes[0].childNodes.length === 0 ? null : this.scroller.childNodes[0].childNodes[0]\n      onGetMoreFriends(startFriendId)\n    }\n  }\n\n  onMenuTrigger (e, item) {\n    const { openFriendSettingMenuModal } = this.props\n    e.preventDefault()\n    e.stopPropagation()\n    openFriendSettingMenuModal(item.chatId)\n  }\n\n  render () {\n    const { friendList, userName, noFriend, isLoading, intl } = this.props\n\n    if (noFriend) {\n      return (\n        <div className={styles['root']} onScroll={this.handleScroll} ref={scroller => { this.scroller = scroller }}>\n          <div className={styles['no-content-message']}>\n            <FormattedMessage\n              id='friend-list-component.message'\n              defaultMessage='You have no friend yet, click below button to add'\n            />\n          </div>\n          <div className={styles['spinner-item']}>\n            <BeatLoader color={'#aaa'} size={10} loading={false} />\n          </div>\n        </div>\n      )\n    }\n\n    let friendSortedList = friendList.sort((a, b) => b.SummaryUpdateTS.T - a.SummaryUpdateTS.T)\n      .filter((friend) => friend.FriendStatus < constants.STATUS_ARRAY.indexOf('StatusDeleted'))\n\n    return (\n      <div className={styles['root']} onScroll={this.handleScroll} ref={scroller => { this.scroller = scroller }}>\n        <div>\n          {\n            isLoading ? (\n              <div className={styles['loader']}>\n                <ClipLoader color={'#aaa'} size={35} loading={isLoading} />\n              </div>\n            ) : (null)\n          }\n          {\n            friendSortedList.map((item, index) => {\n              const friendLink = (item.friendID && item.chatId) ? `/friend/${item.friendID}/chat/${item.chatId}` : '#'\n              const summaryObj = toJson(item.Summary)\n              const isFriendUnread = isUnRead(item.ArticleCreateTS && item.ArticleCreateTS.T, item.LastSeen && item.LastSeen.T)\n\n              return (\n                <div className={styles['list-item'] + ' ' + (isFriendUnread ? styles['unread'] : '')} key={index}>\n                  <Link to={friendLink}>\n                    <div className={styles['list-item-author']}>\n                      <div className={styles['list-item-author-pic']}>\n                        <img src={item.Img || constants.DEFAULT_USER_IMAGE} alt={'Friend Profile'} />\n                      </div>\n                      <div title={constants.STATUS_ARRAY[item.FriendStatus]} className={styles['list-item-author-status']}>\n                        <div className={styles['list-item-author-status-circle'] + ' ' + styles[getStatusClass(item.FriendStatus)]} />\n                      </div>\n                    </div>\n                    <div className={styles['list-item-main']}>\n                      <div className={styles['list-item-header']}>\n                        <div className={styles['list-item-title']}>\n                          {item.Name}\n                          {\n                            constants.JOIN_STATUS_ARRAY[item.joinStatus] === 'JoinStatusAccepted'\n                              ? '' : `(${intl.formatMessage({ id: 'friend-list-component.syncing' })})`\n                          }\n                        </div>\n                        <div className={styles['list-item-time']}>\n                          {\n                            item.ArticleCreateTS.T ? epoch2ReadFormat(item.ArticleCreateTS.T) : ''\n                          }\n                        </div>\n                      </div>\n                      <div className={styles['list-item-description']}>\n                        { item.nameCard && item.nameCard.company ? item.nameCard.company : constants.DEFAULT_USER_COMPANY }\n                      </div>\n                      <div className={styles['list-item-content']}>\n                        {\n                          summaryObj.type === constants.MESSAGE_TYPE_INVITE ? (\n                            <FormattedMessage\n                              id='friend-list-component.message2'\n                              defaultMessage='\\u2605 {INVITING_USER_NAME} invited {INVITED_USER_NAME} to join a board'\n                              values={{ INVITING_USER_NAME: item.SummaryUserName, INVITED_USER_NAME: (item.friendID === item.SummaryUserID) ? userName : item.Name }}\n                            />\n                          ) : (\n                            <span>{summaryObj.value}</span>\n                          )\n                        }\n                      </div>\n                    </div>\n                    <div className={styles['list-item-meta']}>\n                      <div className={styles['list-item-circle']} />\n                      <div className={styles['list-item-ellipsis']} onClick={(e) => this.onMenuTrigger(e, item)} />\n                    </div>\n                  </Link>\n                </div>\n              )\n            })\n          }\n        </div>\n\n        <div className={styles['spinner-item']}>\n          <BeatLoader color={'#aaa'} size={10} loading={false} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default injectIntl(FriendListComponent)\n","import React, { PureComponent } from 'react'\n\n// import FriendBar            from '../components/FriendBar'\nimport FriendListComponent from '../components/FriendListComponent'\n\nimport styles from './FriendComponent.module.css'\n\nclass FriendComponent extends PureComponent {\n  render () {\n    const { friendList, addFriendAction, userName, isLoading, onGetMoreFriends, allFriendsLoaded, noFriend, openFriendSettingMenuModal } = this.props\n\n    return (\n      <div className={styles['root']}>\n        {/*\n          <FriendBar />\n        */}\n        <FriendListComponent\n          userName={userName}\n          isLoading={isLoading}\n          noFriend={noFriend}\n          friendList={friendList}\n          onGetMoreFriends={onGetMoreFriends}\n          allFriendsLoaded={allFriendsLoaded}\n          openFriendSettingMenuModal={openFriendSettingMenuModal} />\n        <div className={styles['add-icon-container']}>\n          <div className={styles['add-icon-subcontainer']}>\n            <div className={styles['add-icon-container']}>\n              <div className={styles['add-icon-subcontainer']}>\n                <div id='add-friend-button' className={styles['add-icon']} onClick={addFriendAction} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default FriendComponent\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\nimport LRU from 'lru-cache'\n\nimport * as utils from './utils'\nimport * as serverUtils from './ServerUtils'\nimport { EMPTY_ID,\n  NUM_CACHE_FRIEND,\n  DEFAULT_USER_NAME,\n  DEFAULT_USER_IMAGE,\n  DEFAULT_USER_NAMECARD,\n  NUM_FRIEND_PER_REQ,\n  MESSAGE_TYPE_TEXT } from '../constants/Constants'\n\nexport const myClass = 'FRIEND_LIST_PAGE'\n\nexport const myDuck = createDuck(myClass, 'Friend_List_Page')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\nconst PREPEND_FRIENDS = myDuck.defineType('PREPEND_FRIENDS')\nconst APPEND_FRIENDS = myDuck.defineType('APPEND_FRIENDS')\nconst ADD_FRIEND = myDuck.defineType('ADD_FRIEND')\nconst DELETE_FRIEND = myDuck.defineType('DELETE_FRIEND')\n\n// init\nexport const init = (myId, parentId, parentClass, parentDuck) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, parentId, parentClass, parentDuck }))\n  }\n}\n\n/*                     */\n/*  Get Friend List    */\n/*                     */\n\nfunction getChatSummaries (chatIds) {\n  return dispatch => Promise.all(\n    chatIds.map((chatId, index) => {\n      return dispatch(serverUtils.getMessageList(chatId, EMPTY_ID, 1))\n        .then(({ response: messageResult, type, error, query }) => {\n          let messageId = (messageResult.result && messageResult.result.length) ? messageResult.result[0].ID : null\n          let subContentId = (messageResult.result && messageResult.result.length) ? messageResult.result[0].ContentBlockID : null\n          let creatorId = (messageResult.result && messageResult.result.length) ? messageResult.result[0].CreatorID : null\n          return dispatch(serverUtils.getMessageBlockList(chatId, messageId, subContentId, 0, 0, 1))\n            .then(({ response: { result }, type, query, error }) => {\n              if (error) {\n                return { 'error': true, 'key': 'messageBlock', 'value': error }\n              } else {\n                let combinedResult = (result && result.length) ? {\n                  UpdateTS: (messageResult.result && messageResult.result.length) ? messageResult.result[0].UpdateTS : utils.emptyTimeStamp(),\n                  SummaryUserID: creatorId,\n                  ...result[0]\n                } : {}\n                return { 'error': false, 'key': 'messageBlock', 'value': combinedResult }\n              }\n            })\n        })\n    })\n  )\n}\n\nexport const getFriendList = (myId, isFirstFetch, limit) => {\n  return (dispatch, getState) => {\n    if (isFirstFetch) {\n      dispatch(preprocessSetStartLoading(myId))\n    }\n    dispatch(serverUtils.getFriends(EMPTY_ID, limit))\n      .then(({ response: friendResult, type, query, error }) => {\n        dispatch(serverUtils.getFriendRequest(EMPTY_ID))\n          .then(({ response: friendReqResult, type, query, error }) => {\n            let chatIds = friendResult.result.map(each => each.ID)\n            dispatch(getChatSummaries(chatIds))\n              .then((summaryResult) => {\n                let creatorIds = friendResult.result.map(each => each.FID).filter(each => each)\n                let summaries = summaryResult.map(each => {\n                  if (each.error) {\n                    return {}\n                  } else {\n                    return each.value\n                  }\n                })\n                let SummaryUserIds = summaries.map(each => each.SummaryUserID).filter(each => each)\n                dispatch(serverUtils.getUsersInfo([...creatorIds, ...SummaryUserIds]))\n                  .then((usersInfo) => {\n                    dispatch(postprocessGetFriendList(myId, friendResult.result, friendReqResult.result, summaries, usersInfo, isFirstFetch))\n                    if (isFirstFetch) {\n                      dispatch(postprocessSetFinshLoading(myId))\n                    }\n                  })\n              })\n          })\n      })\n  }\n}\n\nconst postprocessGetFriendList = (myId, result, reqResult, summaries, usersInfo, isFirstFetch) => {\n  result = result.map((each) => {\n    return {\n      friendID: each.FID,\n      ...each\n    }\n  })\n\n  result = result.map(serverUtils.deserialize)\n  // reqResult = reqResult.map(serverUtils.deserialize)\n\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  let friendList = result.map((each, index) => {\n    let userId = each.friendID\n    let summaryUserId = summaries[index].SummaryUserID\n    let userNameMap = usersInfo['userName'] || {}\n    let userImgMap = usersInfo['userImg'] || {}\n    let userNameCardMap = usersInfo['userNameCard'] || {}\n\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n    let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n    let userNameCard = userNameCardMap[userId] && userNameCardMap[userId].C ? JSON.parse(serverUtils.b64decode(userNameCardMap[userId].C)) : DEFAULT_USER_NAMECARD\n    let SummaryUserName = userNameMap[summaryUserId] ? serverUtils.b64decode(userNameMap[summaryUserId].N) : DEFAULT_USER_NAME\n    let SummaryUserImg = userImgMap[summaryUserId] ? userImgMap[summaryUserId].I : DEFAULT_USER_IMAGE\n    let ArticleCreateTS = each.ArticleCreateTS ? each.ArticleCreateTS : utils.emptyTimeStamp()\n\n    return {\n      Name: userName,\n      Img: userImg,\n      nameCard: userNameCard,\n      friendID: each.friendID,\n      chatId: each.ID,\n      BoardID: each.BID,\n      FriendStatus: each.S,\n      SummaryStatus: summaries[index].S,\n      LastSeen: each.LT ? each.LT : utils.emptyTimeStamp(),\n      ArticleCreateTS: ArticleCreateTS,\n      SummaryUpdateTS: summaries[index].UpdateTS ? summaries[index].UpdateTS : ArticleCreateTS,\n      SummaryUserID: summaryUserId,\n      SummaryUserName: SummaryUserName,\n      SummaryUserImg: SummaryUserImg,\n      Summary: (summaries[index].B && summaries[index].B.length > 0) ? serverUtils.b64decode(summaries[index].B[0]) : JSON.stringify({ type: MESSAGE_TYPE_TEXT, value: '' }),\n      joinStatus: 3\n    }\n  })\n\n  let joinReqs = reqResult.map((eachJoin) => {\n    return {\n      CreatorID: eachJoin.C,\n      NodeID: eachJoin.n,\n      Name: serverUtils.b64decode(eachJoin.N),\n      Status: eachJoin.S\n    }\n  })\n\n  joinReqs.forEach((join, index) => {\n    let joinFriendIndex = friendList.findIndex((e) => e.friendID === join.CreatorID)\n    if (joinFriendIndex >= 0) {\n      friendList[joinFriendIndex].joinStatus = join.Status\n    } else {\n      let userId = join.CreatorID\n      let userNameMap = usersInfo['userName'] || {}\n      let userImgMap = usersInfo['userImg'] || {}\n      let userNameCardMap = usersInfo['userNameCard'] || {}\n\n      let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n      let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n      let userNameCard = userNameCardMap[userId] && userNameCardMap[userId].C ? JSON.parse(serverUtils.b64decode(userNameCardMap[userId].C)) : DEFAULT_USER_NAMECARD\n\n      friendList.push({\n        Name: join.Name || userName,\n        Img: userImg,\n        friendID: userId,\n        nameCard: userNameCard,\n        chatId: null,\n        BoardID: EMPTY_ID,\n        FriendStatus: null,\n        SummaryStatus: null,\n        LastSeen: utils.emptyTimeStamp(),\n        ArticleCreateTS: utils.emptyTimeStamp(),\n        SummaryUpdateTS: utils.emptyTimeStamp(),\n        SummaryUserID: EMPTY_ID,\n        SummaryUserName: '',\n        SummaryUserImg: '',\n        Summary: JSON.stringify({ type: MESSAGE_TYPE_TEXT, value: '' }),\n        joinStatus: join.Status\n      })\n    }\n  })\n\n  console.log('doFriendListPage.postprocessGetFriendList: friendList:', friendList, reqResult)\n\n  if (friendList.length === 0 && isFirstFetch) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { myFriends: { lru: null, offset: 0, friendList: [] }, noFriend: true }\n    }\n  } else if (friendList.length === 0 && !isFirstFetch) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: {}\n    }\n  } else {\n    return {\n      myId,\n      myClass,\n      type: APPEND_FRIENDS,\n      data: { friends: friendList.sort((a, b) => {\n        if (a.SummaryUpdateTS.T < b.SummaryUpdateTS.T) {\n          return -1\n        } else if (a.SummaryUpdateTS.T > b.SummaryUpdateTS.T) {\n          return 1\n        } else {\n          return 0\n        }\n      }),\n      noFriend: false }\n    }\n  }\n}\n\nexport const getMoreFriendlist = (myId, startFriendId, limit) => {\n  return (dispatch, getState) => {\n    dispatch(preprocessSetStartLoading(myId))\n    dispatch(serverUtils.getFriends(startFriendId, limit))\n      .then(({ response: friendResult, type, query, error }) => {\n        dispatch(serverUtils.getFriendRequest(EMPTY_ID))\n          .then(({ response: friendReqResult, type, query, error }) => {\n            let chatIds = friendResult.result.map(each => each.ID)\n            dispatch(getChatSummaries(chatIds))\n              .then((summaryResult) => {\n                let creatorIds = friendResult.result.map(each => each.FID).filter(each => each)\n                let summaries = summaryResult.map(each => {\n                  if (each.error) {\n                    return {}\n                  } else {\n                    return each.value\n                  }\n                })\n                let SummaryUserIds = summaries.map(each => each.SummaryUserID).filter(each => each)\n                dispatch(serverUtils.getUsersInfo([...creatorIds, ...SummaryUserIds]))\n                  .then((usersInfo) => {\n                    dispatch(postprocessGetMoreFriendList(myId, friendResult.result, friendReqResult.result, summaries, usersInfo))\n                    dispatch(postprocessSetFinshLoading(myId))\n                  })\n              })\n          })\n      })\n  }\n}\n\nconst postprocessGetMoreFriendList = (myId, result, reqResult, summaries, usersInfo) => {\n  result = result.map((each) => {\n    return {\n      friendID: each.FID,\n      ...each\n    }\n  })\n\n  result = result.map(serverUtils.deserialize)\n  reqResult = reqResult.map(serverUtils.deserialize)\n\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  let friendList = result.map((each, index) => {\n    let userId = each.friendID\n    let summaryUserId = summaries[index].SummaryUserID\n    let userNameMap = usersInfo['userName'] || {}\n    let userImgMap = usersInfo['userImg'] || {}\n    let userNameCardMap = usersInfo['userNameCard'] || {}\n\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n    let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n    let userNameCard = userNameCardMap[userId] && userNameCardMap[userId].C ? JSON.parse(serverUtils.b64decode(userNameCardMap[userId].C)) : DEFAULT_USER_NAMECARD\n    let SummaryUserName = userNameMap[summaryUserId] ? serverUtils.b64decode(userNameMap[summaryUserId].N) : DEFAULT_USER_NAME\n    let SummaryUserImg = userImgMap[summaryUserId] ? userImgMap[summaryUserId].I : DEFAULT_USER_IMAGE\n    let ArticleCreateTS = each.ArticleCreateTS ? each.ArticleCreateTS : utils.emptyTimeStamp()\n\n    return {\n      Name: userName,\n      Img: userImg,\n      nameCard: userNameCard,\n      friendID: each.friendID,\n      chatId: each.ID,\n      BoardID: each.BID,\n      FriendStatus: each.S,\n      SummaryStatus: summaries[index].S,\n      LastSeen: each.LT ? each.LT : utils.emptyTimeStamp(),\n      ArticleCreateTS: ArticleCreateTS,\n      SummaryUpdateTS: summaries[index].UpdateTS ? summaries[index].UpdateTS : ArticleCreateTS,\n      SummaryUserID: summaryUserId,\n      SummaryUserName: SummaryUserName,\n      SummaryUserImg: SummaryUserImg,\n      Summary: (summaries[index].B && summaries[index].B.length > 0) ? serverUtils.b64decode(summaries[index].B[0]) : JSON.stringify({ type: MESSAGE_TYPE_TEXT, value: '' }),\n      joinStatus: 3\n    }\n  })\n\n  let joinReqs = reqResult.map((eachJoin) => {\n    return {\n      CreatorID: eachJoin.C,\n      NodeID: eachJoin.n,\n      Name: serverUtils.b64decode(eachJoin.N),\n      Status: eachJoin.S\n    }\n  })\n\n  joinReqs.forEach((join, index) => {\n    let joinFriendIndex = friendList.findIndex((e) => e.friendID === join.CreatorID)\n    if (joinFriendIndex >= 0) {\n      friendList[joinFriendIndex].joinStatus = join.Status\n    } else {\n      let userId = join.CreatorID\n      let userNameMap = usersInfo['userName'] || {}\n      let userImgMap = usersInfo['userImg'] || {}\n      let userNameCardMap = usersInfo['userNameCard'] || {}\n\n      let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n      let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n      let userNameCard = userNameCardMap[userId] && userNameCardMap[userId].C ? JSON.parse(serverUtils.b64decode(userNameCardMap[userId].C)) : DEFAULT_USER_NAMECARD\n\n      friendList.push({\n        Name: join.Name || userName,\n        Img: userImg,\n        friendID: userId,\n        nameCard: userNameCard,\n        chatId: null,\n        BoardID: EMPTY_ID,\n        FriendStatus: null,\n        SummaryStatus: null,\n        LastSeen: utils.emptyTimeStamp(),\n        ArticleCreateTS: utils.emptyTimeStamp(),\n        SummaryUpdateTS: utils.emptyTimeStamp(),\n        SummaryUserID: EMPTY_ID,\n        SummaryUserName: '',\n        SummaryUserImg: '',\n        Summary: JSON.stringify({ type: MESSAGE_TYPE_TEXT, value: '' }),\n        joinStatus: join.Status\n      })\n    }\n  })\n\n  console.log('doFriendListPage.postprocessGetMoreFriendList: friendList:', friendList, reqResult)\n\n  if (friendList.length === 0) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { allFriendsLoaded: true }\n    }\n  } else {\n    return {\n      myId,\n      myClass,\n      type: PREPEND_FRIENDS,\n      data: { friendList: friendList.sort((a, b) => {\n        if (a.SummaryUpdateTS.T < b.SummaryUpdateTS.T) {\n          return -1\n        } else if (a.SummaryUpdateTS.T > b.SummaryUpdateTS.T) {\n          return 1\n        } else {\n          return 0\n        }\n      })\n      }\n    }\n  }\n}\n\nexport const _prependFriends = (state, action) => {\n  const { myId, data: { friends } } = action\n\n  let friendList = state.getIn([myId, 'myFriends', 'friendList'], Immutable.List())\n  let oriOffset = state.getIn([myId, 'myFriends', 'offset'], 0)\n\n  state = state.setIn([myId, 'myFriends', 'offset'], oriOffset + friends.length)\n  state = state.setIn([myId, 'myFriends', 'friendList'], Immutable.List(friends).concat(friendList))\n\n  return state\n}\n\nexport const _appendFriends = (state, action) => {\n  /* merge the newly fetched friends to existing friend list */\n  const { myId, data: { friends, noFriend } } = action\n\n  if (!friends || friends.length <= 0) {\n    return state\n  }\n\n  let myFriends = state.getIn([myId, 'myFriends'], Immutable.Map()).toJS()\n  let friendList = myFriends.friendList || []\n  let lruCache = myFriends.lru || new LRU(NUM_CACHE_FRIEND)\n  let offset = myFriends.offset || 0\n\n  let resultFriendList = []\n  if (friendList.length === 0) {\n    /* append friend */\n    friends.forEach((friend, index) => {\n      resultFriendList.push(friend)\n      lruCache.set(friend.friendID, { index: index - offset, friend: friend })\n    })\n  } else {\n    /* 1. find earlist start node and save to local lru */\n    let localLRU = new LRU(NUM_FRIEND_PER_REQ)\n\n    let startFriend = null\n    let earlistTS = 2147483648 /* year 2038 */\n\n    friends.forEach((friend, index) => {\n      localLRU.set(friend.friendID, friend)\n      if (lruCache.get(friend.friendID) && lruCache.get(friend.friendID).friend.SummaryUpdateTS.T < earlistTS) {\n        startFriend = lruCache.get(friend.friendID)\n        earlistTS = startFriend.friend.SummaryUpdateTS.T\n      }\n    })\n    /* 2. start merge  */\n    let oriIndex = startFriend ? startFriend.index : friendList.length - offset\n    let newIndex = 0\n    let mergeIndex = oriIndex\n\n    let oriList = friendList.slice(0, offset + oriIndex)\n    let mergedList = []\n\n    while (friendList.length > offset + oriIndex || friends.length > newIndex) {\n      if (friendList.length > offset + oriIndex && friends.length > newIndex) {\n        let oriFriend = friendList[offset + oriIndex]\n        let newFriend = friends[newIndex]\n        /* both left */\n        if (oriFriend.SummaryUpdateTS.T <= newFriend.SummaryUpdateTS.T) {\n          if (!localLRU.get(oriFriend.friendID)) {\n            mergedList.push(oriFriend)\n            lruCache.set(oriFriend.friendID, { index: mergeIndex, friend: oriFriend })\n            mergeIndex += 1\n          }\n          oriIndex += 1\n        } else {\n          mergedList.push(newFriend)\n          lruCache.set(newFriend.friendID, { index: mergeIndex, friend: newFriend })\n          mergeIndex += 1\n          newIndex += 1\n        }\n      } else if (friendList.length > offset + oriIndex) {\n        /* only ori */\n        let oriFriend = friendList[offset + oriIndex]\n        if (!localLRU.get(oriFriend.friendID)) {\n          mergedList.push(oriFriend)\n          lruCache.set(oriFriend.friendID, { index: mergeIndex, friend: oriFriend })\n          mergeIndex += 1\n        }\n        oriIndex += 1\n      } else {\n        /* only new */\n        let newFriend = friends[newIndex]\n        mergedList.push(newFriend)\n        lruCache.set(newFriend.friendID, { index: mergeIndex, friend: newFriend })\n        mergeIndex += 1\n        newIndex += 1\n      }\n    }\n    resultFriendList = oriList.concat(mergedList)\n    localLRU.reset()\n  }\n\n  state = state.setIn([myId, 'noFriend'], noFriend)\n  state = state.setIn([myId, 'myFriends', 'offset'], offset)\n  state = state.setIn([myId, 'myFriends', 'lru'], lruCache)\n  state = state.setIn([myId, 'myFriends', 'friendList'], Immutable.List(resultFriendList))\n\n  return state\n}\n\n/*                        */\n/*  Update Friend List    */\n/*                        */\n\nexport const addFriend = (myId, name, callBackFunc) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.addNewFriend(name))\n      .then(({ response: { result, error }, type, query }) => {\n        if (error) {\n          callBackFunc({ error: true, data: error.message, friendReqUrl: name })\n        } else {\n          callBackFunc({ error: false, data: result })\n          dispatch(serverUtils.getUsersInfo([result.C]))\n            .then((usersInfo) => {\n              dispatch(postprocessAddNewFriend(myId, result, usersInfo))\n            })\n        }\n      })\n  }\n}\n\nconst postprocessAddNewFriend = (myId, result, usersInfo) => {\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  // result = serverUtils.deserialize(result)\n\n  let userId = result.C\n  let userImgMap = usersInfo['userImg'] || {}\n  let userNameCardMap = usersInfo['userNameCard'] || {}\n\n  let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n  let userNameCard = userNameCardMap[userId] && userNameCardMap[userId].C ? JSON.parse(serverUtils.b64decode(userNameCardMap[userId].C)) : DEFAULT_USER_NAMECARD\n\n  const combinedFriend = {\n    Name: serverUtils.b64decode(result.N),\n    Img: userImg,\n    friendID: userId,\n    nameCard: userNameCard,\n    chatId: null,\n    BoardID: null,\n    FriendStatus: 0,\n    SummaryStatus: 0,\n    LastSeen: utils.emptyTimeStamp(),\n    ArticleCreateTS: utils.emptyTimeStamp(),\n    SummaryUpdateTS: utils.emptyTimeStamp(),\n    SummaryUserID: null,\n    Summary: JSON.stringify({\n      type: MESSAGE_TYPE_TEXT,\n      value: ''\n    }),\n    joinStatus: 0\n  }\n\n  console.log('doFriendListPage.postprocessAddNewFriend: combinedFriend:', combinedFriend)\n\n  return {\n    myId,\n    myClass,\n    type: ADD_FRIEND,\n    data: { friend: combinedFriend, noFriend: false }\n  }\n}\n\nexport const _addNewFriend = (state, action) => {\n  const { myId, data: { friend, noFriend } } = action\n\n  let myFriends = state.getIn([myId, 'myFriends'], Immutable.Map()).toJS()\n  let friendList = myFriends.friendList || []\n  let lruCache = myFriends.lru || new LRU(NUM_CACHE_FRIEND)\n\n  lruCache.set(friend.friendID, { index: friendList.length, friend: friend })\n\n  state = state.setIn([myId, 'noFriend'], noFriend)\n  state = state.setIn([myId, 'myFriends', 'lru'], lruCache)\n  state = state.updateIn([myId, 'myFriends', 'friendList'], arr => arr.push(Immutable.Map(friend)))\n\n  return state\n}\n\nexport const deleteFriend = (myId, chatId, callBackFunc) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.deleteFriend(chatId))\n      .then(({ response: { result, error }, type, query }) => {\n        if (error) {\n          callBackFunc({ error: true, data: error.message, chatId: chatId })\n        } else {\n          callBackFunc({ error: false, data: result })\n          dispatch(serverUtils.getUsersInfo([result.C]))\n            .then((usersInfo) => {\n              dispatch(postprocessDeleteFriend(myId, chatId))\n            })\n        }\n      })\n  }\n}\n\nconst postprocessDeleteFriend = (myId, chatId) => {\n  console.log('doFriendListPage.postprocessDeleteFriend: chatId:', chatId)\n\n  return {\n    myId,\n    myClass,\n    type: DELETE_FRIEND,\n    data: { chatId: chatId }\n  }\n}\n\nexport const _deleteFriend = (state, action) => {\n  const { myId, data: { chatId } } = action\n\n  return state.updateIn([myId, 'myFriends', 'friendList'], arr => arr.filter(each => { return each.chatId !== chatId }))\n}\n\n/*                    */\n/*  Get Key Info      */\n/*                    */\n\nfunction getAllKeyInfo (userId) {\n  return dispatch => Promise.all([\n    dispatch(serverUtils.showMyURL())\n      .then(({ response: { result }, type, query, error }) => {\n        if (error) {\n          return { 'error': true, 'key': 'deviceJoinKey', 'value': error }\n        } else {\n          return { 'error': false, 'key': 'deviceJoinKey', 'value': result }\n        }\n      }),\n    dispatch(serverUtils.showMyKey())\n      .then(({ response: { result }, type, query, error }) => {\n        if (error) {\n          return { 'error': true, 'key': 'userPrivateKey', 'value': error }\n        } else {\n          return { 'error': false, 'key': 'userPrivateKey', 'value': result }\n        }\n      }),\n    dispatch(serverUtils.showURL())\n      .then(({ response: { result }, type, query, error }) => {\n        if (error) {\n          return { 'error': true, 'key': 'friendJoinKey', 'value': error }\n        } else {\n          return { 'error': false, 'key': 'friendJoinKey', 'value': result }\n        }\n      })\n  ])\n}\n\nexport const getKeyInfo = (myId) => {\n  return (dispatch, getState) => {\n    dispatch(getAllKeyInfo())\n      .then((keyInfo) => {\n        dispatch(postprocessGetKeyInfo(myId, keyInfo))\n      })\n  }\n}\n\nconst postprocessGetKeyInfo = (myId, keyInfo) => {\n  console.log('doFriendListPage.postprocessGetKeyInfo: keyInfo: ', keyInfo)\n\n  let deviceJoinKeyInfo = keyInfo.find((key) => key.key === 'deviceJoinKey').value\n  let userPrivateKeyInfo = keyInfo.find((key) => key.key === 'userPrivateKey').value\n  let friendJoinKeyInfo = keyInfo.find((key) => key.key === 'friendJoinKey').value\n\n  const combinedKeyInfo = {\n    userPrivateKey: userPrivateKeyInfo,\n    deviceJoinKey: {\n      URL: deviceJoinKeyInfo.URL,\n      UpdateTS: deviceJoinKeyInfo.UT ? deviceJoinKeyInfo.UT : utils.emptyTimeStamp(),\n      expirePeriod: deviceJoinKeyInfo.e\n    },\n    friendJoinKey: {\n      URL: friendJoinKeyInfo.URL,\n      UpdateTS: friendJoinKeyInfo.UT ? friendJoinKeyInfo.UT : utils.emptyTimeStamp(),\n      expirePeriod: friendJoinKeyInfo.e\n    }\n  }\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { keyInfo: combinedKeyInfo }\n  }\n}\n\n/*             */\n/*  Loading    */\n/*             */\n\nconst preprocessSetStartLoading = (myId) => {\n  console.log('doFriendListPage.preprocessSetStartLoading')\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { isLoading: true }\n  }\n}\n\nconst postprocessSetFinshLoading = (myId) => {\n  console.log('doFriendListPage.postprocessSetFinshLoading')\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { isLoading: false }\n  }\n}\n\nexport const clearData = (myId) => {\n  return (dispatch, getState) => {\n    dispatch(postprocessClearData(myId))\n  }\n}\n\nconst postprocessClearData = (myId) => {\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { myFriends: { lru: null, offset: 0, friendList: [] }, noFriend: false, isLoading: false, allFriendsLoaded: false }\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData,\n  [ADD_FRIEND]: _addNewFriend,\n  [DELETE_FRIEND]: _deleteFriend,\n  [PREPEND_FRIENDS]: _prependFriends,\n  [APPEND_FRIENDS]: _appendFriends\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Immutable from 'immutable'\nimport { FormattedMessage } from 'react-intl'\n\nimport Empty from '../components/Empty'\nimport FriendComponent from '../components/FriendComponent'\nimport AlertComponent from '../components/AlertComponent'\n\nimport * as constants from '../constants/Constants'\nimport * as doFriendListPage from '../reducers/FriendListPage'\nimport * as doModalContainer from '../reducers/ModalContainer'\nimport { getRoot } from '../utils/utils'\nimport googleAnalytics from '../utils/googleAnalytics'\n\nimport styles from './FriendListPage.module.css'\n\nclass FriendListPage extends PureComponent {\n  constructor (props) {\n    super()\n    this.refreshPageInterval = null\n    this.state = {\n      showAlert: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n  }\n\n  componentDidMount () {\n    this.props.markSeen()\n    googleAnalytics.firePageView()\n  }\n\n  componentWillMount () {\n    const { actions: { doFriendListPage }, myId } = this.props\n\n    doFriendListPage.getFriendList(myId, true, constants.NUM_FRIEND_PER_REQ)\n    doFriendListPage.getKeyInfo(myId)\n\n    this.refreshPageInterval = setInterval(() => doFriendListPage.getFriendList(myId, false, constants.NUM_FRIEND_PER_REQ), constants.REFRESH_INTERVAL)\n  }\n\n  componentWillUnmount () {\n    const { actions: { doFriendListPage }, myId } = this.props\n\n    clearInterval(this.refreshPageInterval)\n    doFriendListPage.clearData(myId)\n  }\n\n  render () {\n    const { myId, friendListPage, actions: { doFriendListPage, doModalContainer } } = this.props\n    const { showAlert, alertData } = this.state\n\n    if (!myId) return (<Empty />)\n\n    let userName = getRoot(this.props).getIn(['userInfo', 'userName'])\n\n    let me = friendListPage.get(myId, Immutable.Map())\n    let keyInfo = me.get('keyInfo', Immutable.Map()).toJS()\n    let friendList = me.getIn(['myFriends', 'friendList'], Immutable.List()).toJS()\n    let isLoading = me.get('isLoading', false)\n    let noFriend = me.get('noFriend', false)\n    let allFriendsLoaded = me.get('allFriendsLoaded', false)\n\n    // < start of Add-Friend-Modal\n\n    let refreshKeyInfo = () => {\n      doFriendListPage.getKeyInfo(myId)\n    }\n\n    let addFriendCallBack = (response) => {\n      if (response.error) {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message20'\n                defaultMessage='[Failed] {data}:{friendReqUrl}'\n                values={{ data: response.data, friendReqUrl: response.friendReqUrl }}\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n\n        googleAnalytics.fireEvent('Friend', 'addFriendFailed')\n      } else {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message21'\n                defaultMessage='[Success] Friend Added'\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n        doModalContainer.closeModal()\n\n        googleAnalytics.fireEvent('Friend', 'addFriendSucess')\n      }\n    }\n\n    let onAddFriend = (name) => {\n      let that = this\n      const myURL = keyInfo && keyInfo.friendJoinKey && keyInfo.friendJoinKey.URL\n\n      if (!name || !name.startsWith('pnode://')) {\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message22'\n                defaultMessage='Friend id empty or invalid'\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n      } else if (myURL === name) {\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='add-friend-modal.add-self-alert'\n                defaultMessage='Add yourself is not allowed'\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n      } else {\n        doFriendListPage.addFriend(myId, name, addFriendCallBack)\n      }\n    }\n\n    let modalAddFriend = (name) => {\n      onAddFriend(name)\n    }\n\n    let openAddFriendModal = () => {\n      doModalContainer.setInput({\n        friend: {\n          data: keyInfo,\n          addFriendAction: modalAddFriend,\n          refreshKeyInfo: refreshKeyInfo\n        },\n        keyInfo: {\n          data: keyInfo,\n          refreshKeyInfo: refreshKeyInfo\n        }\n      })\n      doModalContainer.openModal(constants.ADD_FRIEND_MODAL)\n    }\n\n    let onGetMoreFriends = (startFriendId) => {\n      doFriendListPage.getMoreFriendlist(myId, startFriendId, constants.NUM_FRIEND_PER_REQ)\n    }\n\n    // end of Add-Friend-Modal >\n\n    // < start of Friend-Setting-Modal\n\n    const deleteFriendCallBack = (response) => {\n      if (response.error) {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message31'\n                defaultMessage='[Failed] {data}:{chatId}'\n                values={{ data: response.data, chatId: response.chatId }}\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n      } else {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message30'\n                defaultMessage='[Success] Friend Deleted'\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n        doModalContainer.closeModal()\n      }\n    }\n\n    const onDeleteFriend = (chatId) => {\n      doFriendListPage.deleteFriend(myId, chatId, deleteFriendCallBack)\n    }\n\n    let openFriendSettingMenuModal = chatId => {\n      doModalContainer.setInput({\n        onDeleteFriend: () => onDeleteFriend(chatId)\n      })\n      doModalContainer.openModal(constants.FRIEND_SETTING_MENU_MODAL)\n    }\n\n    // start of Friend-Setting-Modal >\n\n    return (\n      <div className={styles['root']}>\n        <FriendComponent\n          userName={userName}\n          isLoading={isLoading}\n          noFriend={noFriend}\n          friendList={friendList}\n          addFriendAction={openAddFriendModal}\n          openFriendSettingMenuModal={openFriendSettingMenuModal}\n          onGetMoreFriends={onGetMoreFriends}\n          allFriendsLoaded={allFriendsLoaded} />\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doFriendListPage: bindActionCreators(doFriendListPage, dispatch),\n    doModalContainer: bindActionCreators(doModalContainer, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendListPage)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport styles from './FriendChatBar.module.css'\n\nimport * as constants from '../constants/Constants'\n\nconst FriendChatBar = props => {\n  const { friendData, /* onOpenOPLogModal, */ openNameCard, openFriendSettingMenuModal } = props\n\n  return (\n    <div className={styles['root']}>\n      <div className={styles['content']}>\n\n        <div className={styles['prev-button']}>\n          <Link to={`/friend`}>\n            <div className={styles['prev-button-icon']} />\n          </Link>\n        </div>\n\n        <div className={styles['main-content']} onClick={openNameCard}>\n          <div className={styles['profile-pic']}>\n            <img src={friendData.Img || constants.DEFAULT_USER_IMAGE} alt={'Friend Profile'} />\n          </div>\n          <div className={styles['friend-content']}>\n            <div className={styles['name']} onClick={openNameCard}>\n              {friendData.Name || constants.DEFAULT_USER_NAME }\n            </div>\n            <div title={friendData.ID} className={styles['job']} onClick={null/* onOpenOPLogModal */}>\n              {(friendData.NameCard && friendData.NameCard.company) || constants.DEFAULT_USER_COMPANY}\n            </div>\n            <div hidden className={styles['description']}>\n              {friendData.description}\n            </div>\n          </div>\n        </div>\n\n        <div className={styles['menu-wrapper']}>\n          <div className={styles['menu']} onClick={() => openFriendSettingMenuModal(friendData.ID)}>\n            <FontAwesomeIcon icon='ellipsis-h' />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default FriendChatBar\n","import React, { PureComponent } from 'react'\nimport ReactDOM from 'react-dom'\nimport { injectIntl,\n  FormattedMessage } from 'react-intl'\nimport $ from 'jquery'\nimport { ClipLoader } from 'react-spinners'\n// import { PTTAI_URL_BASE }          from '../config'\n\nimport { doesCrossDay,\n  epoch2MessageTimeFormat,\n  epoch2MessageDateFormat,\n  isValid,\n  expiredFormat } from '../utils/utilDatetime'\n\nimport { getStatusClass,\n  toJson,\n  linkParser,\n  isMobile } from '../utils/utils'\n\nimport AlertComponent from '../components/AlertComponent'\nimport * as constants from '../constants/Constants'\n\nimport styles from './FriendChatComponent.module.css'\n\nfunction isEmpty (message) {\n  return message.replace(/\\s+/g, '') === ''\n}\n\nclass FriendChatComponent extends PureComponent {\n  constructor (props) {\n    super()\n    this.topItem = null\n    this.state = {\n      inputMessage: '',\n      showAlert: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n\n    this.onInputEnter = this.onInputEnter.bind(this)\n    this.handleMessageSubmit = this.handleMessageSubmit.bind(this)\n    this.handleAcceptInvite = this.handleAcceptInvite.bind(this)\n    this.handleScroll = this.handleScroll.bind(this)\n    this.needFetchMore = this.needFetchMore.bind(this)\n    this.scrollToBottom = this.scrollToBottom.bind(this)\n  }\n\n  onInputEnter (e) {\n    const { inputMessage } = this.state\n\n    /* isComposing is for 注音輸入法 */\n    if (e.isComposing || (e.key && e.key !== 'Enter')) return\n\n    if (e.key === 'Enter' && $(':focus').is('input')) {\n      /* From key pressed */\n      e.preventDefault()\n\n      if (isEmpty(inputMessage)) {\n        return\n      } else {\n        this.handleMessageSubmit(inputMessage)\n      }\n      this.setState({ inputMessage: '' })\n    } else if (!e.key) {\n      /* From button clicked */\n\n      if (isEmpty(inputMessage)) {\n        return\n      } else {\n        this.handleMessageSubmit(inputMessage)\n      }\n      this.setState({ inputMessage: '' })\n    }\n  }\n\n  handleAcceptInvite (boardJoinKey) {\n    const { onJoinBoard } = this.props\n\n    let that = this\n    let joinBoardCallBack = (response) => {\n      if (response.error) {\n        that.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message7'\n                defaultMessage='[Error] {data}:{boardUrl}'\n                values={{ data: response.data, boardUrl: response.boardUrl }}\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n      } else {\n        that.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message25'\n                defaultMessage='[Success] Board Joined'\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n      }\n    }\n\n    if (!boardJoinKey || !boardJoinKey.startsWith('pnode://')) {\n      that.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message8'\n              defaultMessage='Board name empty or invalid'\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else {\n      onJoinBoard(boardJoinKey, joinBoardCallBack)\n    }\n  }\n\n  handleMessageSubmit (message) {\n    const { onMessageAdded } = this.props\n\n    let that = this\n    let trimmedMessage = message.trim()\n\n    if (JSON.stringify(trimmedMessage).length - 2 > constants.MAX_COMMENT_SIZE) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message2'\n              defaultMessage='Input message cannot exceed {MAX_COMMENT_SIZE} words'\n              values={{ MAX_COMMENT_SIZE: constants.MAX_COMMENT_SIZE }}\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else {\n      onMessageAdded(trimmedMessage)\n      // this.scrollToBottom(\"smooth\")\n    }\n  }\n\n  needFetchMore () {\n    const { isLoading, allMessagesLoaded } = this.props\n    const { scrollTop } = this.scroller\n    return (\n      this.scroller &&\n      !isLoading &&\n      !allMessagesLoaded &&\n      scrollTop <= 0\n    )\n  }\n\n  handleScroll () {\n    if (this.needFetchMore()) {\n      const { onGetMoreMessages, messageList } = this.props\n\n      let startMessageId = messageList[0].MessageID\n\n      this.topItem = this.scroller.childNodes[0].childNodes.length === 0 ? null : this.scroller.childNodes[0].childNodes[0]\n\n      onGetMoreMessages(startMessageId)\n    }\n  }\n\n  componentDidMount () {\n    document.addEventListener('keydown', this.onInputEnter, false)\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('keydown', this.onInputEnter, false)\n  }\n\n  scrollToBottom (mode) {\n    this.pageEnd.scrollIntoView({ behavior: mode })\n  }\n\n  componentDidUpdate (prevProps) {\n    if ((prevProps.messageList.length === 0 && this.props.messageList.length > 0) ||\n      (prevProps.match.path !== this.props.match.path)) {\n      /* First load: wait for expand */\n      setTimeout(() => this.scrollToBottom('instant'), 300)\n    } else if (this.topItem && prevProps.isLoading && !this.props.isLoading) {\n      /* More loaded */\n      ReactDOM.findDOMNode(this.topItem).scrollIntoView()\n    } else if ((prevProps.messageList.length > 0 && this.props.messageList.length === prevProps.messageList.length + 1)) {\n      /* New user message */\n      this.scrollToBottom('smooth')\n    }\n  }\n\n  render () {\n    const { intl, messageList, isLoading, noMessage } = this.props\n    const { inputMessage, showAlert, alertData } = this.state\n\n    const placeholder = intl.formatMessage({ id: 'friend-chat-component.placeholder' })\n\n    return (\n      <div className={styles['root']}>\n        <div className={styles['chat']}\n          onScroll={this.handleScroll}\n          ref={(scroller) => { this.scroller = scroller }}>\n          {\n            (() => {\n              if (noMessage) {\n                return (\n                  <div className={styles['no-message']}>\n                    <FormattedMessage\n                      id='friend-chat-component.title'\n                      defaultMessage='Start chatting!'\n                    />\n                  </div>\n                )\n              }\n\n              if (isLoading) {\n                return (\n                  <div>\n                    <div className={styles['loader']}>\n                      <ClipLoader color={'#aaa'} size={35} loading={isLoading} />\n                    </div>\n                  </div>\n                )\n              }\n\n              return <MessageListComponent\n                messageList={messageList}\n                boardList={this.props.boardList}\n                userId={this.props.userId}\n                history={this.props.history}\n                handleAcceptInvite={this.handleAcceptInvite} />\n            })()\n          }\n          <div className={styles['bottomElement']} ref={(el) => { this.pageEnd = el }} />\n        </div>\n        <div className={styles['message-input']}>\n          <input\n            autoFocus={!isMobile()}\n            placeholder={placeholder}\n            value={inputMessage}\n            onChange={(e) => this.setState({ inputMessage: e.target.value })}\n          />\n          <div className={styles['message-action']} onClick={this.onInputEnter} />\n        </div>\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nconst MessageListComponent = props => {\n  const { messageList } = props\n\n  return (\n    <div>\n      {\n        messageList.map((message, index) => {\n          // Date divider\n          let divider = null\n          if (index > 0 && doesCrossDay(messageList[index].CreateTS.T, messageList[index - 1].CreateTS.T)) {\n            divider = (\n              <div className={styles['message-divider']}>\n                <span>{epoch2MessageDateFormat(messageList[index].CreateTS.T)}</span>\n              </div>\n            )\n          }\n\n          return (\n            <div key={message.ID}>\n              {divider}\n              <Message {...props} message={message} />\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nconst Message = props => {\n  const { message, userId } = props\n\n  let messageObj = toJson(message.Buf)\n  let isOwn = (message.CreatorID === userId)\n\n  // is not invite message\n  if (messageObj.type !== constants.MESSAGE_TYPE_INVITE) {\n    if (isOwn) {\n      return (\n        <div className={styles['user-message-item']}>\n          <div className={styles['user-message-meta']}>\n            <div title={constants.STATUS_ARRAY[message.Status]} className={styles['user-message-status']}>\n              <div className={styles['user-message-status-circle-' + getStatusClass(message.Status)]} />\n            </div>\n            <div className={styles['user-message-time']}> {epoch2MessageTimeFormat(message.CreateTS.T)}</div>\n          </div>\n          <div className={styles['user-message-content']}>{linkParser(messageObj.value)}</div>\n        </div>\n      )\n    } else {\n      return (\n        <div className={styles['message-item']}>\n          <div className={styles['message-content']}>{linkParser(messageObj.value)}</div>\n          <div className={styles['message-meta']}>\n            <div title={constants.STATUS_ARRAY[message.Status]} className={styles['message-status']}>\n              <div className={styles['message-status-circle-' + getStatusClass(message.Status)]} />\n            </div>\n            <div className={styles['message-time']}>{epoch2MessageTimeFormat(message.CreateTS.T)}</div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  // Invite message\n\n  let invite = $(messageObj.value)\n  let inviteInfo = {}\n  inviteInfo.inviteType = invite.data('action-type')\n  inviteInfo.boardId = invite.data('board-id')\n  inviteInfo.boardName = invite.data('board-name')\n  inviteInfo.boardJoinKey = invite.data('join-key')\n  inviteInfo.keyUpdateTS_T = invite.data('update-ts')\n  inviteInfo.keyExpiration = invite.data('expiration')\n\n  if (isOwn) {\n    return (\n      <div className={styles['user-message-item']}>\n        <div className={styles['user-message-meta']}>\n          <div title={constants.STATUS_ARRAY[message.Status]} className={styles['user-message-status']}>\n            <div className={styles['user-message-status-circle-' + getStatusClass(message.Status)]} />\n          </div>\n          <div className={styles['user-message-time']}> {epoch2MessageTimeFormat(message.CreateTS.T)}</div>\n        </div>\n        <div className={styles['user-message-content-invitation']}>\n          <span>\n            <FormattedMessage\n              id='friend-chat-component.action3'\n              defaultMessage='Sent Group Invitation'\n            />\n            <span>{inviteInfo.boardName}</span>\n            <FormattedMessage\n              id='friend-chat-component.action4'\n              defaultMessage=' ({expTimeVal})'\n              values={{ expTimeVal: expiredFormat(inviteInfo.keyUpdateTS_T, inviteInfo.keyExpiration) }}\n            />\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className={styles['message-item']}>\n      <InvitationBlock\n        inviteInfo={inviteInfo}\n        handleAcceptInvite={props.handleAcceptInvite}\n        boardList={props.boardList}\n        history={props.history} />\n      <div className={styles['message-meta']}>\n        <div title={constants.STATUS_ARRAY[message.Status]} className={styles['message-status']}>\n          <div className={styles['message-status-circle-' + getStatusClass(message.Status)]} />\n        </div>\n        <div className={styles['message-time']}>{epoch2MessageTimeFormat(message.CreateTS.T)}</div>\n      </div>\n    </div>\n  )\n}\n\nconst InvitationBlock = props => {\n  const { inviteInfo, boardList, handleAcceptInvite, history } = props\n\n  var inviteBoard = boardList.find(each => each.ID === inviteInfo.boardId)\n  var isJoined = inviteBoard && inviteBoard.Status < constants.STATUS_ARRAY.indexOf('StatusDeleted')\n\n  /* TODO: Need remove-board time stamp to disable rejoin */\n  if (isJoined) {\n    return (\n      <div className={styles['message-content-invitation']} onClick={() => history.push(`/board/${inviteInfo.boardId}`)}>\n        <span>\n          <FormattedMessage\n            id='friend-chat-component.action1'\n            defaultMessage='You Have Joined'\n          />\n          <span>{inviteInfo.boardName}</span>\n          <FormattedMessage\n            id='friend-chat-component.action1-2'\n            defaultMessage='Click to go to Group'\n          />\n        </span>\n      </div>\n    )\n  }\n\n  // not joined, invitation still valid\n  if (isValid(inviteInfo.keyUpdateTS_T, inviteInfo.keyExpiration)) {\n    return (\n      <div className={styles['message-content-invitation']} onClick={() => handleAcceptInvite(inviteInfo.boardJoinKey)}>\n        <span>\n          <FormattedMessage\n            id='friend-chat-component.action2'\n            defaultMessage='Invited to' />\n          <span>{inviteInfo.boardName}</span>\n          <FormattedMessage\n            id='friend-chat-component.action2-2'\n            defaultMessage='Click to join ({expTimeVal})'\n            values={{ expTimeVal: expiredFormat(inviteInfo.keyUpdateTS_T, inviteInfo.keyExpiration) }} />\n        </span>\n      </div>\n    )\n  }\n\n  return (\n    <div className={`${styles['message-content-invitation']} ${styles['expired']}`} >\n      <span>\n        <FormattedMessage\n          id='friend-chat-component.action2'\n          defaultMessage='Invited to' />\n        <span>{inviteInfo.boardName}</span>\n        <FormattedMessage\n          id='friend-chat-component.action2-2'\n          defaultMessage='Click to join ({expTimeVal})'\n          values={{ expTimeVal: expiredFormat(inviteInfo.keyUpdateTS_T, inviteInfo.keyExpiration) }} />\n      </span>\n    </div>\n  )\n}\n\nexport default injectIntl(FriendChatComponent)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\nimport LRU from 'lru-cache'\n\nimport * as utils from './utils'\nimport * as serverUtils from './ServerUtils'\n\nimport { EMPTY_ID,\n  DEFAULT_USER_NAME,\n  DEFAULT_USER_IMAGE,\n  DEFAULT_USER_NAMECARD,\n  NUM_MESSAGE_PER_REQ,\n  NUM_CACHE_MESSAGE } from '../constants/Constants'\n\nexport const myClass = 'FRIEND_CHAT_PAGE'\n\nexport const myDuck = createDuck(myClass, 'Friend_Chat_Page')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\nconst ADD_MESSAGE = myDuck.defineType('ADD_MESSAGE')\nconst PREPEND_MESSAGES = myDuck.defineType('PREPEND_MESSAGES')\nconst APPEND_MESSAGES = myDuck.defineType('APPEND_MESSAGES')\nconst DELETE_FRIEND = myDuck.defineType('DELETE_FRIEND')\n\n// init\nexport const init = (myId, parentId, parentClass, parentDuck) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, parentId, parentClass, parentDuck }))\n  }\n}\n\nexport const initParams = (myId, params) => {\n  return (dispatch, getState) => {\n    dispatch({\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: {\n        friendId: decodeURIComponent(params.friendId)\n      }\n    })\n  }\n}\n\n/*                      */\n/*  Get Friend Info     */\n/*                      */\n\nexport const getFriend = (myId, friendId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getFriend(friendId))\n      .then(({ response: { result }, type, error, query }) => {\n        if (error) return console.warn('getFriend got error', error)\n\n        let creatorIds = [result.FID]\n        dispatch(serverUtils.getUsersInfo(creatorIds))\n          .then(usersInfo => dispatch(postprocessGetFriend(myId, result, usersInfo)))\n      })\n  }\n}\n\nconst postprocessGetFriend = (myId, result, usersInfo) => {\n  result = serverUtils.deserialize(result)\n\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  let userId = result.FID\n  let userNameMap = usersInfo['userName'] || {}\n  let userImgMap = usersInfo['userImg'] || {}\n  let userNameCardMap = usersInfo['userNameCard'] || {}\n\n  let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n  let userImg = userImgMap[userId] && userImgMap[userId].I ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n  let userNameCard = userNameCardMap[userId] && userNameCardMap[userId].C ? JSON.parse(serverUtils.b64decode(userNameCardMap[userId].C)) : DEFAULT_USER_NAMECARD\n\n  const friendData = {\n    ID: result.ID,\n    Name: userName,\n    Img: userImg,\n    NameCard: userNameCard,\n    BoardID: result.BID,\n    LastSeen: result.LT ? result.LT : utils.emptyTimeStamp()\n  }\n\n  console.log('doFriendChatPage.postprocessGetFriend: friendData:', friendData)\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { friendData: friendData }\n  }\n}\n\n/*                      */\n/*  Update Friend Info  */\n/*                      */\n\nexport const markChat = (myId, chatId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.markFriendSeen(chatId))\n      .then(({ response: { result }, type, error, query }) => {\n        dispatch(postprocessMarkChat(myId, result))\n      })\n  }\n}\n\nconst postprocessMarkChat = (myId, result) => {\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: {}\n  }\n}\n\n/*                      */\n/*  Get Chat Content    */\n/*                      */\n\nfunction getMessagesContent (chatId, messageIds, subContentIds) {\n  return dispatch => Promise.all(\n    messageIds.map((messageId, index) => {\n      return dispatch(serverUtils.getMessageBlockList(chatId, messageIds[index], subContentIds[index], 0, 0, 1))\n        .then(({ response: { result }, type, query, error }) => {\n          if (error) {\n            return { 'error': true, 'key': 'messageBlock', 'value': error }\n          }\n          if (result && result.length > 0) {\n            return { 'error': false, 'key': 'messageBlock', 'value': result[0] }\n          }\n          console.warn('getMessageBlockList for messageId = ', messageIds[index], ' return empty result :', result)\n          return { 'error': true, 'key': 'messageBlock', 'value': {} }\n        })\n    })\n  )\n}\n\nexport const getMessageList = (myId, chatId, isFirstFetch, limit) => {\n  return (dispatch, getState) => {\n    if (isFirstFetch) {\n      dispatch(preprocessSetStartLoading(myId))\n    }\n\n    dispatch(serverUtils.getMessageList(chatId, EMPTY_ID, limit))\n      .then(({ response: { result }, type, error, query }) => {\n        let validResult = (result && result.length > 0) ? result.filter(each => (each && each.ID && each.BlockID && each.CreatorID)) : []\n\n        let messageIds = validResult.map(each => each.ID)\n        let subContentIds = validResult.map(each => each.BlockID)\n        let creatorIds = validResult.map(each => each.CreatorID)\n\n        Promise.all([\n          dispatch(getMessagesContent(chatId, messageIds, subContentIds)),\n          dispatch(serverUtils.getUsersInfo(creatorIds))\n        ]).then(([messageBlockList, usersInfo]) => {\n          dispatch(postprocessGetMessageList(myId, creatorIds, messageIds, isFirstFetch, messageBlockList, validResult, usersInfo))\n\n          if (isFirstFetch) {\n            dispatch(postprocessSetFinshLoading(myId))\n          }\n        })\n      })\n  }\n}\n\nconst postprocessGetMessageList = (myId, creatorIds, messageIds, isFirstFetch, messageBlockList, result, usersInfo) => {\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  let messageList = []\n  messageBlockList.forEach((each, index) => {\n    if (each.error) return\n\n    let userId = creatorIds[index]\n    let userNameMap = usersInfo['userName'] || {}\n    let userImgMap = usersInfo['userImg'] || {}\n\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n    let userImg = userImgMap[userId] && userImgMap[userId].I ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n\n    messageList.push({\n      ID: each.value.ID,\n      MessageID: messageIds[index],\n      ArticleID: each.value.AID,\n      CreateTS: result[index].CreateTS ? result[index].CreateTS : utils.emptyTimeStamp(),\n      UpdateTS: result[index].UpdateTS ? result[index].UpdateTS : utils.emptyTimeStamp(),\n      CreatorID: creatorIds[index],\n      CreatorName: userName,\n      CreatorImg: userImg,\n      Status: each.value.S,\n      Buf: serverUtils.b64decode(each.value.B)\n    })\n  })\n\n  console.log('doFriendChatPage.postprocessGetMessageList: messageList:', messageList)\n\n  // let matchIndex = messageList.findIndex((each) => each.MessageID === latestMessageId)\n\n  if (messageList.length === 0 && isFirstFetch) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { friendMessages: { lru: null, offset: 0, messageList: [] }, noMessage: true }\n    }\n  } else if (messageList.length === 0 && !isFirstFetch) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: {}\n    }\n  } else {\n    return {\n      myId,\n      myClass,\n      type: APPEND_MESSAGES,\n      data: { messages: messageList.reverse(), noMessage: false }\n    }\n  }\n}\n\nexport const getMoreMessageList = (myId, chatId, startMessageId, limit) => {\n  return (dispatch, getState) => {\n    dispatch(preprocessSetStartLoading(myId))\n    dispatch(serverUtils.getMessageList(chatId, startMessageId, limit))\n      .then(({ response: { result }, type, error, query }) => {\n        let validResult = (result && result.length > 0) ? result.filter(each => (each && each.ID && each.BlockID && each.CreatorID)) : []\n\n        let messageIds = validResult.map(each => each.ID)\n        let subContentIds = validResult.map(each => each.BlockID)\n        let creatorIds = validResult.map(each => each.CreatorID)\n\n        Promise.all([\n          dispatch(getMessagesContent(chatId, messageIds, subContentIds)),\n          dispatch(serverUtils.getUsersInfo(creatorIds))\n        ]).then(([messageBlockList, usersInfo]) => {\n          dispatch(postprocessGetMoreMessageList(myId, creatorIds, messageIds, messageBlockList, validResult, usersInfo))\n          dispatch(postprocessSetFinshLoading(myId))\n        })\n      })\n  }\n}\n\nconst postprocessGetMoreMessageList = (myId, creatorIds, messageIds, messageBlockList, result, usersInfo) => {\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  let messageList = []\n  messageBlockList.forEach((each, index) => {\n    if (index === 0 || each.error) {\n      return\n    }\n\n    let userId = creatorIds[index]\n    let userNameMap = usersInfo['userName'] || {}\n    let userImgMap = usersInfo['userImg'] || {}\n\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n    let userImg = userImgMap[userId] && userImgMap[userId].I ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n\n    messageList.push({\n      ID: each.value.ID, /* messageID */\n      MessageID: messageIds[index],\n      ArticleID: each.value.AID,\n      CreateTS: result[index].CreateTS ? result[index].CreateTS : utils.emptyTimeStamp(),\n      UpdateTS: result[index].UpdateTS ? result[index].UpdateTS : utils.emptyTimeStamp(),\n      CreatorID: creatorIds[index],\n      CreatorName: userName,\n      CreatorImg: userImg,\n      Status: each.value.S,\n      Buf: serverUtils.b64decode(each.value.B)\n    })\n  })\n\n  console.log('doFriendChatPage.postprocessGetMoreMessageList: messageList:', messageList)\n\n  if (messageList.length === 0) {\n    return {\n      myId,\n      myClass,\n      type: SET_DATA,\n      data: { allMessagesLoaded: true }\n    }\n  } else {\n    return {\n      myId,\n      myClass,\n      type: PREPEND_MESSAGES,\n      data: { messages: messageList.reverse() }\n    }\n  }\n}\n\nexport const _prependMessages = (state, action) => {\n  const { myId, data: { messages } } = action\n\n  let messageList = state.getIn([myId, 'friendMessages', 'messageList'], Immutable.List())\n  let oriOffset = state.getIn([myId, 'friendMessages', 'offset'], 0)\n\n  state = state.setIn([myId, 'friendMessages', 'offset'], oriOffset + messages.length)\n  state = state.setIn([myId, 'friendMessages', 'messageList'], Immutable.List(messages).concat(messageList))\n  return state\n}\n\nexport const _appendMessages = (state, action) => {\n  /* merge the newly fetched messages to existing message list */\n  const { myId, data: { messages, noMessage } } = action\n\n  if (!messages || messages.length <= 0) {\n    return state\n  }\n\n  let friendMessages = state.getIn([myId, 'friendMessages'], Immutable.Map()).toJS()\n  let messageList = friendMessages.messageList || []\n  let lruCache = friendMessages.lru || new LRU(NUM_CACHE_MESSAGE)\n  let offset = friendMessages.offset || 0\n\n  let resultMessageList = []\n  if (messageList.length === 0) {\n    /* append message */\n    messages.forEach((message, index) => {\n      resultMessageList.push(message)\n      lruCache.set(message.ID, { index: index - offset, message: message })\n    })\n  } else {\n    /* 1. find earlist start node and save to local lru */\n    let localLRU = new LRU(NUM_MESSAGE_PER_REQ)\n\n    let startMessage = null\n    let earlistTS = 2147483648 /* year 2038 */\n    messages.forEach((message, index) => {\n      localLRU.set(message.ID, message)\n      if (lruCache.get(message.ID) && lruCache.get(message.ID).message.CreateTS.T < earlistTS) {\n        startMessage = lruCache.get(message.ID)\n        earlistTS = startMessage.message.CreateTS.T\n      }\n    })\n    /* 2. start merge  */\n    let oriIndex = startMessage ? startMessage.index : messageList.length - offset\n    let newIndex = 0\n    let mergeIndex = oriIndex\n\n    let oriList = messageList.slice(0, offset + oriIndex)\n    let mergedList = []\n\n    while (messageList.length > offset + oriIndex || messages.length > newIndex) {\n      if (messageList.length > offset + oriIndex && messages.length > newIndex) {\n        let oriMessage = messageList[offset + oriIndex]\n        let newMessage = messages[newIndex]\n        /* both left */\n        if (oriMessage.CreateTS.T <= newMessage.CreateTS.T) {\n          if (!localLRU.get(oriMessage.ID)) {\n            mergedList.push(oriMessage)\n            lruCache.set(oriMessage.ID, { index: mergeIndex, message: oriMessage })\n            mergeIndex += 1\n          }\n          oriIndex += 1\n        } else {\n          mergedList.push(newMessage)\n          lruCache.set(newMessage.ID, { index: mergeIndex, message: newMessage })\n          mergeIndex += 1\n          newIndex += 1\n        }\n      } else if (messageList.length > offset + oriIndex) {\n        /* only ori */\n        let oriMessage = messageList[offset + oriIndex]\n        if (!localLRU.get(oriMessage.ID)) {\n          mergedList.push(oriMessage)\n          lruCache.set(oriMessage.ID, { index: mergeIndex, message: oriMessage })\n          mergeIndex += 1\n        }\n        oriIndex += 1\n      } else {\n        /* only new */\n        let newMessage = messages[newIndex]\n        mergedList.push(newMessage)\n        lruCache.set(newMessage.ID, { index: mergeIndex, message: newMessage })\n        mergeIndex += 1\n        newIndex += 1\n      }\n    }\n    resultMessageList = oriList.concat(mergedList)\n    localLRU.reset()\n  }\n\n  state = state.setIn([myId, 'noMessage'], noMessage)\n  state = state.setIn([myId, 'friendMessages', 'offset'], offset)\n  state = state.setIn([myId, 'friendMessages', 'lru'], lruCache)\n  state = state.setIn([myId, 'friendMessages', 'messageList'], Immutable.List(resultMessageList))\n\n  return state\n}\n\n/*                        */\n/*  Update Chat Content   */\n/*                        */\n\nexport const postMessage = (myId, userId, userName, userImg, chatId, message) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.postMessage(chatId, [message], []))\n      .then(({ response: { result }, type, error, query }) => {\n        dispatch(postprocessPostMessage(myId, userId, userName, userImg, result, message))\n      })\n  }\n}\n\nconst postprocessPostMessage = (myId, userId, userName, userImg, result, message) => {\n  const newMessage = {\n    ID: result.cID,\n    ArticleID: result.AID,\n    CreateTS: utils.emptyTimeStamp(),\n    UpdateTS: utils.emptyTimeStamp(),\n    CreatorID: userId,\n    CreatorName: userName,\n    CreatorImg: userImg,\n    Status: 0,\n    Buf: message\n  }\n\n  console.log('doFriendChatPage.postprocessPostMessage: newMessage:', newMessage)\n\n  return {\n    myId,\n    myClass,\n    type: ADD_MESSAGE,\n    data: { message: newMessage, noMessage: false }\n  }\n}\n\nexport const _addMessage = (state, action) => {\n  const { myId, data: { message, noMessage } } = action\n\n  if (!message || !message.ID || !message.ArticleID) {\n    return state\n  }\n\n  let friendMessages = state.getIn([myId, 'friendMessages'], Immutable.Map()).toJS()\n\n  let lruCache = friendMessages.lru || new LRU(NUM_CACHE_MESSAGE)\n  let offset = friendMessages.offset || 0\n  let messageList = friendMessages.messageList || []\n\n  lruCache.set(message.ID, { index: messageList.length - offset, message: message })\n\n  state = state.setIn([myId, 'noMessage'], noMessage)\n  state = state.setIn([myId, 'friendMessages', 'lru'], lruCache)\n  state = state.updateIn([myId, 'friendMessages', 'messageList'], arr => arr.push(Immutable.Map(message)))\n\n  return state\n}\n\nexport const clearData = (myId) => {\n  return (dispatch, getState) => {\n    dispatch(postprocessClearData(myId))\n  }\n}\n\nconst postprocessClearData = (myId) => {\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: {\n      friendMessages: { lru: null, offset: 0, messageList: [] },\n      friendData: {},\n      allMessagesLoaded: false,\n      friendId: '',\n      boardList: [] }\n  }\n}\n\n/*             */\n/*  Loading    */\n/*             */\n\nconst preprocessSetStartLoading = (myId) => {\n  console.log('doFriendChatPage.preprocessSetStartLoading')\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { isLoading: true }\n  }\n}\n\nconst postprocessSetFinshLoading = (myId) => {\n  console.log('doFriendChatPage.postprocessSetFinshLoading')\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { isLoading: false }\n  }\n}\n\n/*                    */\n/*  Get Board List    */\n/*                    */\n\nexport const getBoardList = (myId, limit) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getBoards(EMPTY_ID, limit))\n      .then(({ response: { result }, type, query, error }) => {\n        let creatorIds = result.map((each) => each.C)\n        dispatch(serverUtils.getUsersInfo(creatorIds))\n          .then((usersInfo) => {\n            dispatch(postprocessGetBoardList(myId, result, usersInfo))\n          })\n      })\n  }\n}\n\nconst postprocessGetBoardList = (myId, result, usersInfo) => {\n  result = result.map((each) => {\n    return {\n      CreatorID: each.C,\n      ...each\n    }\n  })\n\n  result = result.map(serverUtils.deserialize)\n\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  const boardList = result.map(each => {\n    let userId = each.CreatorID\n    let userNameMap = usersInfo['userName'] || {}\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n\n    return {\n      BoardType: each.BT,\n      ID: each.ID,\n      Status: each.S,\n      Title: each.Title,\n      ArticleCreateTS: each.ArticleCreateTS ? each.ArticleCreateTS : utils.emptyTimeStamp(),\n      UpdateTS: each.UpdateTS ? each.UpdateTS : utils.emptyTimeStamp(),\n      LastSeen: each.LastSeen ? each.LastSeen : utils.emptyTimeStamp(),\n      CreatorID: each.CreatorID,\n      creatorName: userName\n    }\n  })\n\n  console.log('doFriendChatPage.postprocessGetBoardList: boardList:', boardList)\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { boardList: boardList }\n  }\n}\n\nexport const deleteFriend = (myId, chatId, callBackFunc) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.deleteFriend(chatId))\n      .then(({ response: { result, error }, type, query }) => {\n        if (error) {\n          callBackFunc({ error: true, data: error.message, chatId: chatId })\n        } else {\n          callBackFunc({ error: false, data: result })\n          dispatch(serverUtils.getUsersInfo([result.C]))\n            .then((usersInfo) => {\n              dispatch(postprocessDeleteFriend(myId, chatId))\n            })\n        }\n      })\n  }\n}\n\nconst postprocessDeleteFriend = (myId, chatId) => {\n  // console.log('doFriendListPage.postprocessDeleteFriend: chatId:', chatId)\n\n  return {\n    myId,\n    myClass,\n    type: DELETE_FRIEND,\n    data: { chatId: chatId }\n  }\n}\n\n/*                      */\n/*  Update Board List   */\n/*                      */\n\nexport const joinBoard = (myId, boardUrl, callBack) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.joinBoard(boardUrl))\n      .then(({ response: { result, error }, type, query }) => {\n        if (error) {\n          callBack({ error: true, data: error.message, boardUrl: boardUrl })\n        } else {\n          callBack({ error: false, data: result })\n        }\n      })\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData,\n  [ADD_MESSAGE]: _addMessage,\n  [PREPEND_MESSAGES]: _prependMessages,\n  [APPEND_MESSAGES]: _appendMessages\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Immutable from 'immutable'\nimport { FormattedMessage } from 'react-intl'\n\nimport Empty from '../components/Empty'\nimport FriendChatBar from '../components/FriendChatBar'\nimport FriendChatComponent from '../components/FriendChatComponent'\nimport { getRoot } from '../utils/utils'\nimport googleAnalytics from '../utils/googleAnalytics'\n\nimport * as doModalContainer from '../reducers/ModalContainer'\nimport * as doFriendChatPage from '../reducers/FriendChatPage'\nimport * as constants from '../constants/Constants'\n\nimport styles from './FriendChatPage.module.css'\n\nclass FriendChatPage extends PureComponent {\n  constructor (props) {\n    super()\n    this.refreshPageInterval = null\n    this.getLatestMessage = this.getLatestMessage.bind(this)\n  }\n\n  getLatestMessage () {\n    const { myId, markSeen, actions: { doFriendChatPage }, match: { params } } = this.props\n\n    doFriendChatPage.getMessageList(myId, decodeURIComponent(params.chatId), false, constants.NUM_MESSAGE_PER_REQ)\n    doFriendChatPage.getBoardList(myId, constants.NUM_BOARD_PER_REQ)\n    doFriendChatPage.markChat(myId, decodeURIComponent(params.chatId))\n\n    markSeen()\n  }\n\n  componentWillMount () {\n    const { actions: { doFriendChatPage }, match: { params }, myId } = this.props\n\n    // TODO: data for different chatroom should be stored into different array.\n    //       Currently we are using the same array for data storing, so we need\n    //       to clear the array to avoid message residual\n    doFriendChatPage.clearData(myId)\n\n    doFriendChatPage.initParams(myId, params)\n    doFriendChatPage.getFriend(myId, decodeURIComponent(params.friendId))\n    doFriendChatPage.getMessageList(myId, decodeURIComponent(params.chatId), true, constants.NUM_MESSAGE_PER_REQ)\n    doFriendChatPage.getBoardList(myId, constants.NUM_BOARD_PER_REQ)\n\n    this.refreshPageInterval = setInterval(this.getLatestMessage, constants.REFRESH_INTERVAL)\n  }\n\n  componentWillUnmount () {\n    const { actions: { doFriendChatPage }, myId } = this.props\n    doFriendChatPage.clearData(myId)\n\n    clearInterval(this.refreshPageInterval)\n  }\n\n  componentDidMount () {\n    const { markSeen, actions: { doFriendChatPage }, match: { params }, myId } = this.props\n\n    doFriendChatPage.markChat(myId, decodeURIComponent(params.chatId))\n\n    markSeen()\n    googleAnalytics.firePageView()\n  }\n\n  render () {\n    const { myId, history, friendChatPage, markSeen, actions: { doFriendChatPage, doModalContainer }, match: { params }, match } = this.props\n\n    let userId = getRoot(this.props).getIn(['userInfo', 'userId'])\n    let userName = getRoot(this.props).getIn(['userInfo', 'userName'])\n    let userImg = getRoot(this.props).getIn(['userInfo', 'userImg'])\n\n    if (!myId) return (<Empty />)\n\n    let me = friendChatPage.get(myId, Immutable.Map())\n    let friendData = me.get('friendData', Immutable.Map()).toJS()\n    let messageList = me.getIn(['friendMessages', 'messageList'], Immutable.List()).toJS()\n\n    let boardList = me.get('boardList', Immutable.List()).toJS()\n    let isLoading = me.get('isLoading', false)\n    let noMessage = me.get('noMessage', false)\n    let allMessagesLoaded = me.get('allMessagesLoaded', false)\n\n    let onMessageAdded = (message) => {\n      let postMessage = {\n        type: constants.MESSAGE_TYPE_TEXT,\n        value: message\n      }\n      doFriendChatPage.postMessage(myId, userId, userName, userImg, decodeURIComponent(params.chatId), JSON.stringify(postMessage))\n      doFriendChatPage.markChat(myId, decodeURIComponent(params.chatId))\n\n      markSeen()\n      googleAnalytics.fireEventOnProb('Chat', 'SendMessage', 0.1)\n    }\n\n    let onGetMoreMessages = (startMessageId) => {\n      doFriendChatPage.getMoreMessageList(myId, decodeURIComponent(params.chatId), startMessageId, constants.NUM_MESSAGE_PER_REQ)\n    }\n\n    let onJoinBoard = (boardJoinKey, callBackFunc) => {\n      doFriendChatPage.joinBoard(myId, boardJoinKey, callBackFunc)\n    }\n\n    let onOpenOPLogModal = () => {\n      doModalContainer.setInput({\n        tabs: [\n          constants.SHOW_FRIEND_FRIEND_TAB,\n          constants.SHOW_FRIEND_MASTER_TAB,\n          constants.SHOW_FRIEND_MEMBER_TAB,\n          constants.SHOW_FRIEND_OPKEY_TAB,\n          constants.SHOW_FRIEND_PEERS_TAB\n        ],\n        params: {\n          friendId: friendData.ID\n        }\n      })\n      doModalContainer.openModal(constants.SHOW_OP_LOG_MODAL)\n    }\n\n    let openNameCard = () => {\n      doModalContainer.setInput({\n        userId: params.friendId,\n        isEditable: false\n      })\n      doModalContainer.openModal(constants.NAME_CARD_MODAL)\n    }\n\n    const deleteFriendCallBack = (response) => {\n      if (response.error) {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message31'\n                defaultMessage='[Failed] {data}:{chatId}'\n                values={{ data: response.data, chatId: response.chatId }}\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n      } else {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message30'\n                defaultMessage='[Success] Friend Deleted'\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n        doModalContainer.closeModal()\n        history.push('/friend')\n      }\n    }\n\n    const onDeleteFriend = (chatId) => {\n      doFriendChatPage.deleteFriend(myId, chatId, deleteFriendCallBack)\n    }\n\n    let openFriendSettingMenuModal = chatId => {\n      doModalContainer.setInput({\n        onDeleteFriend: () => onDeleteFriend(chatId)\n      })\n      doModalContainer.openModal(constants.FRIEND_SETTING_MENU_MODAL)\n    }\n\n    return (\n      <div className={styles['root']}>\n        <FriendChatBar\n          friendData={friendData}\n          onOpenOPLogModal={onOpenOPLogModal}\n          openNameCard={openNameCard}\n          openFriendSettingMenuModal={openFriendSettingMenuModal}\n        />\n        <FriendChatComponent\n          history={history}\n          userId={userId}\n          match={match}\n          friendData={friendData}\n          isLoading={isLoading}\n          noMessage={noMessage}\n          allMessagesLoaded={allMessagesLoaded}\n          boardList={boardList}\n          messageList={messageList}\n          onJoinBoard={onJoinBoard}\n          onMessageAdded={onMessageAdded}\n          onGetMoreMessages={onGetMoreMessages}\n          onOpenOPLogModal={onOpenOPLogModal} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doFriendChatPage: bindActionCreators(doFriendChatPage, dispatch),\n    doModalContainer: bindActionCreators(doModalContainer, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendChatPage)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport * as serverUtils from './ServerUtils'\n\nimport { EMPTY_ID,\n  DEFAULT_USER_NAME,\n  DEFAULT_USER_IMAGE } from '../constants/Constants'\n\nexport const myClass = 'CREATE_BOARD_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Create_Board_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, parentId, parentClass, parentDuck) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, parentId, parentClass, parentDuck }))\n  }\n}\n\nexport const getFriendList = (myId, limit) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getFriends(EMPTY_ID, limit))\n      .then(({ response: { result }, type, query, error }) => {\n        let friendIds = result.map((each) => each.FID)\n        dispatch(serverUtils.getUsersInfo(friendIds))\n          .then((usersInfo) => {\n            dispatch(postprocessgetFriendList(myId, result, usersInfo))\n          })\n      })\n  }\n}\n\nconst postprocessgetFriendList = (myId, result, usersInfo) => {\n  result = result.map((each) => {\n    return {\n      friendID: each.FID,\n      ...each\n    }\n  })\n\n  result = result.map(serverUtils.deserialize)\n\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  const friendList = result.map(each => {\n    let userId = each.friendID\n    let userNameMap = usersInfo['userName'] || {}\n    let userImgMap = usersInfo['userImg'] || {}\n\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n    let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n\n    return {\n      Name: userName,\n      Img: userImg,\n      friendID: each.friendID,\n      chatID: each.ID,\n      BoardID: each.BID,\n      FriendStatus: each.S,\n      LastSeen: each.LT ? each.LT : utils.emptyTimeStamp()\n    }\n  })\n\n  console.log('doCreateBoardModal.postprocessgetFriends: friendList:', friendList)\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { friendList: friendList }\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Modal from 'react-modal'\nimport Immutable from 'immutable'\nimport { injectIntl,\n  FormattedMessage } from 'react-intl'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport AlertComponent from '../components/AlertComponent'\n\nimport * as constants from '../constants/Constants'\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as doCreateBoardModal from '../reducers/CreateBoardModal'\n\nimport { isMobile } from '../utils/utils'\n\nimport styles from './CreateBoardModal.module.css'\n\nclass CreateBoardModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      name: '',\n      friendInvited: {},\n      showAlert: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n\n    this.onKeydown = this.onKeydown.bind(this)\n    this.onNameChange = this.onNameChange.bind(this)\n    this.onFriendInvited = this.onFriendInvited.bind(this)\n    this.onSubmitAndClose = this.onSubmitAndClose.bind(this)\n  }\n\n  onKeydown (e) {\n    if (e && !e.isComposing && e.keyCode === 13) { // press enter\n      this.onSubmitAndClose()\n    }\n  }\n\n  onNameChange (e) {\n    this.setState({ name: e.target.value })\n  }\n\n  onFriendInvited (e, friendId, chatId) {\n    const { friendInvited } = this.state\n\n    let newFriendInvited = Object.assign({}, friendInvited)\n\n    if (friendId in newFriendInvited && newFriendInvited[friendId]) {\n      newFriendInvited[friendId] = null\n    } else {\n      newFriendInvited[friendId] = chatId\n    }\n    this.setState({ friendInvited: newFriendInvited })\n  }\n\n  onSubmitAndClose () {\n    const { modalInput: { modalAddBoardSubmit }, onModalClose } = this.props\n    const { name, friendInvited } = this.state\n\n    if (JSON.stringify(name).length - 2 > constants.MAX_BOARDNAME_SIZE) {\n      let that = this\n\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message12'\n              defaultMessage='Board name cannot exceed {MAX_BOARDNAME_SIZE} characters'\n              values={{ MAX_BOARDNAME_SIZE: constants.MAX_BOARDNAME_SIZE }}\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (!name || name.replace(/\\s+/g, '') === '') {\n      let that = this\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message13'\n              defaultMessage='Board name cannot be empty'\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else {\n      modalAddBoardSubmit(name, friendInvited)\n      onModalClose()\n    }\n  }\n\n  componentWillMount () {\n    const { actions: { doCreateBoardModal }, myId } = this.props\n    doCreateBoardModal.getFriendList(myId, constants.NUM_FRIEND_PER_REQ)\n  }\n\n  render () {\n    const { intl, myId, createBoardModal, onModalClose, modal: { currentModal } } = this.props\n    const { name, friendInvited, showAlert, alertData } = this.state\n\n    const placeholder = intl.formatMessage({ id: 'create-board-modal.placeholder' })\n\n    let me = createBoardModal.get(myId, Immutable.Map())\n\n    let friendList = me.get('friendList', Immutable.List()).toJS()\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.createBoardModalStyles}\n          isOpen={currentModal !== null}\n          onRequestClose={onModalClose}\n          contentLabel='Create Board Modal'>\n          <div className={styles['root']}>\n            <div className={styles['title-header']}>\n              <div className={styles['prev-arrow']}>\n                <FontAwesomeIcon icon='arrow-left' onClick={onModalClose} />\n              </div>\n              <div className={styles['header-text']}>\n                <FormattedMessage\n                  id='create-board-modal.title'\n                  defaultMessage='Create New Board'\n                />\n              </div>\n              <div className={styles['search']} />\n            </div>\n            <div className={styles['title-section']}>\n              <input\n                placeholder={placeholder}\n                autoFocus={!isMobile()}\n                name='title-input'\n                className={styles['title-input']}\n                value={name}\n                onKeyDown={this.onKeydown}\n                onChange={this.onNameChange} />\n            </div>\n\n            <div className={styles['invite-title']}>\n              <FormattedMessage\n                id='manage-board-modal.message2'\n                defaultMessage='Invite friends'\n              />\n            </div>\n            <div className={styles['friend-list']}>\n              {\n                (friendList.length === 0) ? (\n                  <div className={styles['no-friend-text']}>\n                    <FormattedMessage\n                      id='manage-board-modal.message1'\n                      defaultMessage='You have no friend to invite to {BOARD_NAME}'\n                      values={{ BOARD_NAME: name }}\n                    />\n                  </div>\n                ) : null\n              }\n              {\n                friendList.map((item, index) => (\n                  <div className={styles['friend-item']} key={index}>\n                    <div className={styles['list-item-author']}>\n                      <div className={styles['list-item-author-pic']}>\n                        <img alt='' src={item.Img || constants.DEFAULT_USER_IMAGE} />\n                      </div>\n                      <div hidden className={styles['list-item-author-name']}> {item.Name} </div>\n                    </div>\n                    <div className={styles['list-item-main']}>\n                      <div className={styles['list-item-header']}>\n                        <div className={styles['list-item-title']}> {item.Name} </div>\n                      </div>\n                      <div className={styles['list-item-content']}>\n                        <div dangerouslySetInnerHTML={{ __html: null }} />\n                      </div>\n                    </div>\n                    <div className={styles['list-item-meta']}>\n                      {\n                        ((item.friendID in friendInvited) && friendInvited[item.friendID]) ? (\n                          <div className={styles['list-item-invited']} onClick={(e) => this.onFriendInvited(e, item.friendID, item.chatID)}>\n                            <FormattedMessage\n                              id='create-board-modal.invite-friend-1'\n                              defaultMessage='Select'\n                            />\n                          </div>\n                        ) : (\n                          <div className={styles['list-item-to-invite']} onClick={(e) => this.onFriendInvited(e, item.friendID, item.chatID)}>\n                            <FormattedMessage\n                              id='create-board-modal.invite-friend-2'\n                              defaultMessage='UnSelect'\n                            />\n                          </div>\n                        )\n                      }\n                    </div>\n                  </div>\n                ))\n              }\n            </div>\n\n            <div hidden className={styles['friend-list']}>\n              <div className={styles['friend-list-text']}>\n                邀請朋友\n              </div>\n              <div className={styles['friend-list-items']}>\n                {\n                  (!friendList || friendList.length === 0) ? (\n                    <div className={styles['no-friend-text']}>{/* 目前沒有朋友可以邀請入板 */}</div>\n                  ) : null\n                }\n                {\n                  // friendList.map((item, index) => (\n                  //   <div className={styles['friend-item']} key={index} onClick={(e) => this.onFriendSelected(e, item.friendID)}>\n                  //     <div className={styles['list-item-author']}>\n                  //       <div className={styles['list-item-author-pic']}>\n                  //         <img src={ item.Img || constants.DEFAULT_USER_IMAGE} alt={'Friend Profile'}/>\n                  //       </div>\n                  //       <div className={styles['list-item-author-name']}>\n                  //         {null}\n                  //       </div>\n                  //     </div>\n                  //     <div className={styles['list-item-main']}>\n                  //       <div className={styles['list-item-header']}>\n                  //         <div className={styles['list-item-title']}>\n                  //           {item.Name}\n                  //         </div>\n                  //         <div className={styles['list-item-time']}>\n                  //           {/*epoch2Now(Math.round((new Date()).getTime() / 1000))*/}\n                  //         </div>\n                  //       </div>\n                  //       <div className={styles['list-item-content']}>\n                  //         <div dangerouslySetInnerHTML={{__html: null }} />\n                  //       </div>\n                  //     </div>\n                  //     <div className={styles['list-item-meta']}>\n                  //     {\n                  //       ((item.friendID in friendInvited) && friendInvited[item.friendID])?(\n                  //         <div className={styles['list-item-invited']}>\n                  //           <FormattedMessage\n                  //             id=\"create-board-modal.invite-friend-1\"\n                  //             defaultMessage=\"Invited\"\n                  //           />\n                  //         </div>\n                  //       ):(\n                  //         <div className={styles['list-item-to-invite']}>\n                  //           <FormattedMessage\n                  //             id=\"create-board-modal.invite-friend-1\"\n                  //             defaultMessage=\"Invited\"\n                  //           />\n                  //         </div>\n                  //       )\n                  //     }\n                  //     </div>\n                  //   </div>\n                  // ))\n                }\n              </div>\n            </div>\n            <div className={styles['action-section']}>\n              <div className={styles['add-icon-container']}>\n                <div className={styles['add-icon-subcontainer']}>\n                  <div className={styles['add-icon']} onClick={this.onSubmitAndClose} />\n                </div>\n              </div>\n            </div>\n            <AlertComponent show={showAlert} alertData={alertData} />\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doCreateBoardModal: bindActionCreators(doCreateBoardModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(CreateBoardModal))\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport * as serverUtils from './ServerUtils'\n\nexport const myClass = 'MANAGE_BOARD_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Manage_Board_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, parentId, parentClass, parentDuck) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, parentId, parentClass, parentDuck }))\n  }\n}\n\n/*                          */\n/*  Get Board level Info    */\n/*                          */\n\nexport const getBoardInfo = (myId, boardId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getBoard(boardId))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessGetBoardInfo(myId, result))\n      })\n  }\n}\n\nconst postprocessGetBoardInfo = (myId, result) => {\n  result = serverUtils.deserialize(result)\n\n  const boardInfo = {\n    ArticleCreateTS: result.ArticleCreateTS ? result.ArticleCreateTS : utils.emptyTimeStamp(),\n    ID: result.ID,\n    LastSeen: result.LastSeen ? result.LastSeen : utils.emptyTimeStamp(),\n    Status: result.Status,\n    Title: result.Title,\n    UpdateTS: result.UpdateTS ? result.UpdateTS : utils.emptyTimeStamp()\n  }\n\n  console.log('doBoardPage.postprocessGetBoardInfo: boardInfo:', boardInfo)\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { boardInfo: boardInfo }\n  }\n}\n\nexport const getBoardJoinKey = (myId, boardId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getBoardUrl(boardId))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessGetBoardJoinKey(myId, result))\n      })\n  }\n}\n\nconst postprocessGetBoardJoinKey = (myId, result) => {\n  const boardJoinKey = {\n    C: result.C,\n    ID: result.ID,\n    Pn: result.Pn,\n    T: result.T,\n    URL: result.URL,\n    UpdateTS: result.UT ? result.UT : utils.emptyTimeStamp(),\n    expirePeriod: result.e\n  }\n\n  console.log('doBoardPage.postprocessGetBoardJoinKey: boardJoinKey:', boardJoinKey)\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { boardJoinKey: boardJoinKey }\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Modal from 'react-modal'\nimport { FormattedMessage } from 'react-intl'\n\nimport { isMobile } from '../utils/utils'\n\nimport AlertComponent from '../components/AlertComponent'\nimport * as doManageBoardModal from '../reducers/ManageBoardModal'\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as constants from '../constants/Constants'\n\nimport styles from './ManageBoardModal.module.css'\n\nclass ManageBoardModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      name: props.modalInput.boardName,\n      showAlert: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n    this.onNameChange = this.onNameChange.bind(this)\n  }\n\n  onNameChange (e) {\n    this.setState({ name: e.target.value })\n  }\n\n  componentWillMount () {\n    const { modalInput: { boardId }, actions: { doManageBoardModal }, myId } = this.props\n\n    doManageBoardModal.getBoardInfo(myId, boardId)\n  }\n\n  render () {\n    const { modalInput: { boardId, onEditBoardName }, onModalClose, modal: { currentModal } } = this.props\n    const { name, showAlert, alertData } = this.state\n\n    let onSetBoardName = () => {\n      if (JSON.stringify(name).length - 2 > constants.MAX_BOARDNAME_SIZE) {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message12'\n                defaultMessage='Board name cannot exceed {MAX_BOARDNAME_SIZE} characters'\n                values={{ MAX_BOARDNAME_SIZE: constants.MAX_BOARDNAME_SIZE }}\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n      } else if (!name || name.replace(/\\s+/g, '') === '') {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message13'\n                defaultMessage='Board name cannot be empty'\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n      } else {\n        onEditBoardName(boardId, name)\n        onModalClose()\n      }\n    }\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.manageBoardModalStyles}\n          isOpen={currentModal !== null}\n          onRequestClose={onModalClose}\n          contentLabel='Create Board Modal'>\n          <div className={styles['root']}>\n            <div className={styles['modal-bar']}>\n              <div className={styles['prev-arrow']}>\n                <div className={styles['prev-arrow-icon']} onClick={onModalClose} />\n              </div>\n              <div className={styles['edit-name']}>\n                <input\n                  autoFocus={!isMobile()}\n                  name='board-name-input'\n                  className={styles['board-name-input']}\n                  value={name}\n                  onChange={this.onNameChange} />\n              </div>\n            </div>\n            <div hidden className={styles['modal-bar']}>\n              <div className={styles['edit-name']} />\n            </div>\n            <div className={styles['action-section']}>\n              <div className={styles['submit-button']}>\n                <div className={styles['submit-icon-subcontainer']} onClick={onSetBoardName}>\n                  <div className={styles['submit-icon']} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal>\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doManageBoardModal: bindActionCreators(doManageBoardModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageBoardModal)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport * as serverUtils from './ServerUtils'\n\nimport { EMPTY_ID,\n  STATUS_ARRAY,\n  DEFAULT_USER_IMAGE,\n  DEFAULT_USER_NAME,\n  NUM_MEMBER_PER_REQ } from '../constants/Constants'\n\nexport const myClass = 'MANAGE_BOARD_MEMBER_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Manage_Board_Member_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, parentId, parentClass, parentDuck) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, parentId, parentClass, parentDuck }))\n  }\n}\n\n/*                          */\n/*  Get Board level Info    */\n/*                          */\n\nexport const getBoardInfo = (myId, boardId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getBoard(boardId))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessGetBoardInfo(myId, result))\n      })\n  }\n}\n\nconst postprocessGetBoardInfo = (myId, result) => {\n  result = serverUtils.deserialize(result)\n\n  const boardInfo = {\n    ArticleCreateTS: result.ArticleCreateTS ? result.ArticleCreateTS : utils.emptyTimeStamp(),\n    ID: result.ID,\n    LastSeen: result.LastSeen ? result.LastSeen : utils.emptyTimeStamp(),\n    Status: result.Status,\n    Title: result.Title,\n    UpdateTS: result.UpdateTS ? result.UpdateTS : utils.emptyTimeStamp()\n  }\n\n  console.log('doBoardPage.postprocessGetBoardInfo: boardInfo:', boardInfo)\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { boardInfo: boardInfo }\n  }\n}\n\n/*                     */\n/*  Get Member Info    */\n/*                     */\n\nexport const getMemberList = (myId, boardId, limit) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getFriends(EMPTY_ID, limit))\n      .then(({ response: friendResult, type, query, error }) => {\n        /* Get member list to match friends in this board */\n        dispatch(serverUtils.getMemberList(boardId, EMPTY_ID, NUM_MEMBER_PER_REQ))\n          .then(({ response: memberResult, type, query, error }) => {\n            let friendIds = friendResult.result.map((each) => each.FID)\n            let memeberIds = memberResult.result.map((each) => each.b.ID)\n            dispatch(serverUtils.getUsersInfo([...friendIds, ...memeberIds]))\n              .then((usersInfo) => {\n                dispatch(postprocessGetMembers(myId, friendResult.result, memberResult.result, usersInfo))\n              })\n          })\n      })\n  }\n}\n\nconst postprocessGetMembers = (myId, friendListResult, memeberListResult, usersInfo) => {\n  friendListResult = friendListResult.map((each) => {\n    return {\n      friendID: each.FID,\n      ...each\n    }\n  })\n\n  friendListResult = friendListResult.map(serverUtils.deserialize)\n\n  let memberMap = memeberListResult.reduce((acc, each) => {\n    acc[each.b.ID] = { UT: each.UT, ...each.b }\n    return acc\n  }, {})\n\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  const memberList = friendListResult.filter(friend => { return (friend.friendID in memberMap) && memberMap[friend.friendID].S < STATUS_ARRAY.indexOf('StatusDeleted') }).map(each => {\n    let userId = each.friendID\n    let userNameMap = usersInfo['userName'] || {}\n    let userImgMap = usersInfo['userImg'] || {}\n\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n    let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n\n    return {\n      Name: userName,\n      Img: userImg,\n      friendID: each.friendID,\n      chatID: each.ID,\n      BoardID: each.BID,\n      FriendStatus: each.S,\n      LastSeen: each.LT ? each.LT : utils.emptyTimeStamp(),\n      isBoardMember: true,\n      memberStatus: (userId in memberMap) ? memberMap[userId].S : null,\n      memberUpdateTS: (userId in memberMap) ? memberMap[userId].UT : utils.emptyTimeStamp()\n      /* ArticleCreateTS:  each.ArticleCreateTS ? each.ArticleCreateTS : utils.emptyTimeStamp(), */\n    }\n  })\n\n  console.log('doManageBoardMemberModal.postprocessGetMembers: memberList:', memberList)\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { memberList: memberList }\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Modal from 'react-modal'\nimport Immutable from 'immutable'\nimport { FormattedMessage } from 'react-intl'\n\nimport { epoch2ReadFormat } from '../utils/utilDatetime'\n\nimport AlertComponent from '../components/AlertComponent'\nimport * as doManageBoardMemberModal from '../reducers/ManageBoardMemberModal'\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as constants from '../constants/Constants'\n\nimport styles from './ManageBoardMemberModal.module.css'\n\nclass ManageBoardMemberModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      name: props.modalInput.boardName,\n      memberToRemove: {},\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n    this.onMemberToRemove = this.onMemberToRemove.bind(this)\n  }\n\n  onMemberToRemove (e, friendId, chatId) {\n    const { memberToRemove } = this.state\n\n    let newMemberToRemove = Object.assign({}, memberToRemove)\n\n    if (friendId in newMemberToRemove && newMemberToRemove[friendId]) {\n      /* Already Invited: do nothing */\n      newMemberToRemove[friendId] = null\n    } else {\n      newMemberToRemove[friendId] = chatId\n    }\n    this.setState({ memberToRemove: newMemberToRemove })\n  }\n\n  componentWillMount () {\n    const { modalInput: { boardId }, actions: { doManageBoardMemberModal }, myId } = this.props\n\n    doManageBoardMemberModal.getBoardInfo(myId, boardId)\n    doManageBoardMemberModal.getMemberList(myId, boardId, constants.NUM_FRIEND_PER_REQ)\n  }\n\n  render () {\n    const { modalInput: { boardId, onRemoveMember }, myId, manageBoardMemberModal, onModalClose, modal: { currentModal } } = this.props\n    const { name, showAlert, alertData, memberToRemove } = this.state\n\n    let me = manageBoardMemberModal.get(myId, Immutable.Map())\n\n    let memberList = me.get('memberList', Immutable.List()).toJS()\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.manageBoardModalStyles}\n          isOpen={currentModal !== null}\n          onRequestClose={onModalClose}\n          contentLabel='Create Board Modal'>\n          <div className={styles['root']}>\n            <div className={styles['modal-bar']}>\n              <div className={styles['prev-arrow']}>\n                <div className={styles['prev-arrow-icon']} onClick={onModalClose} />\n              </div>\n              <div className={styles['board-name']}>\n                {name}\n              </div>\n              <div className={styles['null-prev-arrow']} />\n            </div>\n            <div className={styles['invite-title']}>\n              <div className={styles['null-space']} />\n              <div className={styles['invite-title-text']}>\n                <FormattedMessage\n                  id='manage-board-member-modal.message2'\n                  defaultMessage='Manage Members'\n                />\n              </div>\n              <div className={styles['copy-space']} />\n            </div>\n            <div className={styles['friend-list']}>\n              {\n                (memberList.length === 0) ? (\n                  <div className={styles['no-friend-text']}>\n                    <FormattedMessage\n                      id='manage-board-member-modal.message1'\n                      defaultMessage='No member in group {BOARD_NAME}'\n                      values={{ BOARD_NAME: name }}\n                    />\n                  </div>\n                ) : null\n              }\n              {\n                memberList.map((item, index) => (\n                  <div className={styles['friend-item']} key={index}>\n                    <div className={styles['list-item-author']}>\n                      <div className={styles['list-item-author-pic']}>\n                        <img alt='' src={item.Img || constants.DEFAULT_USER_IMAGE} />\n                      </div>\n                    </div>\n                    <div className={styles['list-item-main']}>\n                      <div className={styles['list-item-title']}> {item.Name} </div>\n                      <div className={styles['list-item-time']}>\n                        <FormattedMessage\n                          id='manage-board-member-modal.member-status'\n                          defaultMessage='joined {JOIN_TIME}'\n                          values={{ JOIN_TIME: epoch2ReadFormat(item.memberUpdateTS.T) }}\n                        />\n                      </div>\n                    </div>\n                    <div className={styles['list-item-meta']}>\n                      {\n                        ((item.friendID in memberToRemove) && memberToRemove[item.friendID]) ? (\n                          <div className={styles['list-item-selected']} onClick={(e) => this.onMemberToRemove(e, item.friendID, item.chatID)}>\n                            <FormattedMessage\n                              id='manage-board-member-modal.remove-member-1'\n                              defaultMessage='UnSelect'\n                            />\n                          </div>\n                        ) : (\n                          <div className={styles['list-item-unselect']} onClick={(e) => this.onMemberToRemove(e, item.friendID, item.chatID)}>\n                            <FormattedMessage\n                              id='manage-board-member-modal.remove-member-2'\n                              defaultMessage='Select'\n                            />\n                          </div>\n                        )\n                      }\n                    </div>\n                  </div>\n                ))\n              }\n            </div>\n            <div className={styles['action-section']}>\n              <div className={styles['submit-button']}>\n                <div className={styles['submit-icon-subcontainer']} onClick={() => {\n                  onRemoveMember(boardId, memberToRemove)\n                  onModalClose()\n                }}>\n                  <div className={styles['submit-icon']} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal>\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doManageBoardMemberModal: bindActionCreators(doManageBoardMemberModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageBoardMemberModal)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport * as serverUtils from './ServerUtils'\n\nimport { EMPTY_ID,\n  STATUS_ARRAY,\n  DEFAULT_USER_IMAGE,\n  DEFAULT_USER_NAME,\n  NUM_MEMBER_PER_REQ } from '../constants/Constants'\n\nexport const myClass = 'INVITE_TO_BOARD_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Invite_To_Board_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, parentId, parentClass, parentDuck) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, parentId, parentClass, parentDuck }))\n  }\n}\n\n/*                          */\n/*  Get Board level Info    */\n/*                          */\n\nexport const getBoardInfo = (myId, boardId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getBoard(boardId))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessGetBoardInfo(myId, result))\n      })\n  }\n}\n\nconst postprocessGetBoardInfo = (myId, result) => {\n  result = serverUtils.deserialize(result)\n\n  const boardInfo = {\n    ArticleCreateTS: result.ArticleCreateTS ? result.ArticleCreateTS : utils.emptyTimeStamp(),\n    ID: result.ID,\n    LastSeen: result.LastSeen ? result.LastSeen : utils.emptyTimeStamp(),\n    Status: result.Status,\n    Title: result.Title,\n    UpdateTS: result.UpdateTS ? result.UpdateTS : utils.emptyTimeStamp()\n  }\n\n  console.log('doBoardPage.postprocessGetBoardInfo: boardInfo:', boardInfo)\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { boardInfo: boardInfo }\n  }\n}\n\nexport const getBoardJoinKey = (myId, boardId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getBoardUrl(boardId))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessGetBoardJoinKey(myId, result))\n      })\n  }\n}\n\nconst postprocessGetBoardJoinKey = (myId, result) => {\n  const boardJoinKey = {\n    C: result.C,\n    ID: result.ID,\n    Pn: result.Pn,\n    T: result.T,\n    URL: result.URL,\n    UpdateTS: result.UT ? result.UT : utils.emptyTimeStamp(),\n    expirePeriod: result.e\n  }\n\n  console.log('doBoardPage.postprocessGetBoardJoinKey: boardJoinKey:', boardJoinKey)\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { boardJoinKey: boardJoinKey }\n  }\n}\n\n/*                     */\n/*  Get Friend Info    */\n/*                     */\n\nexport const getFriendList = (myId, boardId, limit) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getFriends(EMPTY_ID, limit))\n      .then(({ response: friendResult, type, query, error }) => {\n        /* Get member list to match friends in this board */\n        dispatch(serverUtils.getMemberList(boardId, EMPTY_ID, NUM_MEMBER_PER_REQ))\n          .then(({ response: memberResult, type, query, error }) => {\n            let friendIds = friendResult.result.map((each) => each.FID)\n            let memeberIds = memberResult.result.map((each) => each.b.ID)\n            dispatch(serverUtils.getUsersInfo([...friendIds, ...memeberIds]))\n              .then((usersInfo) => {\n                dispatch(postprocessgetFriends(myId, friendResult.result, memberResult.result, usersInfo))\n              })\n          })\n      })\n  }\n}\n\nconst postprocessgetFriends = (myId, friendListResult, memeberListResult, usersInfo) => {\n  friendListResult = friendListResult.map((each) => {\n    return {\n      friendID: each.FID,\n      ...each\n    }\n  })\n\n  friendListResult = friendListResult.map(serverUtils.deserialize)\n\n  let memberMap = memeberListResult.reduce((acc, each) => {\n    acc[each.b.ID] = { UT: each.UT, ...each.b }\n    return acc\n  }, {})\n\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  const friendList = friendListResult.map(each => {\n    let userId = each.friendID\n    let userNameMap = usersInfo['userName'] || {}\n    let userImgMap = usersInfo['userImg'] || {}\n\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n    let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n\n    let isBoardMember = (userId in memberMap) && memberMap[userId].S < STATUS_ARRAY.indexOf('StatusDeleted')\n\n    return {\n      Name: userName,\n      Img: userImg,\n      friendID: each.friendID,\n      chatID: each.ID,\n      BoardID: each.BID,\n      FriendStatus: each.S,\n      LastSeen: each.LT ? each.LT : utils.emptyTimeStamp(),\n      isBoardMember: isBoardMember,\n      memberStatus: (userId in memberMap) ? memberMap[userId].S : null,\n      memberUpdateTS: (userId in memberMap) ? memberMap[userId].UT : utils.emptyTimeStamp()\n      /* ArticleCreateTS:  each.ArticleCreateTS ? each.ArticleCreateTS : utils.emptyTimeStamp(), */\n    }\n  })\n\n  console.log('doInviteToBoardModal.postprocessgetFriends: friendList:', friendList, memeberListResult)\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { friendList: friendList }\n  }\n}\n\n/*                             */\n/*  Invite Friend to Board     */\n/*                             */\n\nexport const sendFriendInvite = (myId, chatId, inviteMessage) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.postMessage(chatId, [inviteMessage], []))\n      .then(({ response: { result }, type, error, query }) => {\n        dispatch(postprocessPostMessage(myId, result))\n      })\n  }\n}\n\nconst postprocessPostMessage = (myId, result) => {\n  /* Do nothing */\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: {}\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Modal from 'react-modal'\nimport Immutable from 'immutable'\nimport { FormattedMessage } from 'react-intl'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport { epoch2ReadFormat } from '../utils/utilDatetime'\n\nimport AlertComponent from '../components/AlertComponent'\nimport * as doInviteToBoardModal from '../reducers/InviteToBoardModal'\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as constants from '../constants/Constants'\n\nimport styles from './InviteToBoardModal.module.css'\n\nclass InviteToBoardModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.refreshBoardJoinKey = null\n    this.state = {\n      name: props.modalInput.boardName,\n      friendInvited: {},\n      qrCodeCopied: false,\n      copyBoardIdText: '',\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n    this.onFriendInvited = this.onFriendInvited.bind(this)\n  }\n\n  onFriendInvited (e, friendId, chatId) {\n    const { friendInvited } = this.state\n\n    let newFriendInvited = Object.assign({}, friendInvited)\n\n    if (friendId in newFriendInvited && newFriendInvited[friendId]) {\n      /* Already Invited: do nothing */\n      newFriendInvited[friendId] = null\n    } else {\n      newFriendInvited[friendId] = chatId\n    }\n    this.setState({ friendInvited: newFriendInvited })\n  }\n\n  componentWillMount () {\n    const { modalInput: { boardId }, actions: { doInviteToBoardModal }, myId } = this.props\n\n    doInviteToBoardModal.getBoardInfo(myId, boardId)\n    doInviteToBoardModal.getBoardJoinKey(myId, boardId)\n    doInviteToBoardModal.getFriendList(myId, boardId, constants.NUM_FRIEND_PER_REQ)\n\n    this.refreshBoardJoinKey = setInterval(() => doInviteToBoardModal.getBoardJoinKey(myId, boardId), constants.REFRESH_INTERVAL)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.refreshBoardJoinKey)\n  }\n\n  render () {\n    const { modalInput: { boardId, onInviteFriend }, myId, inviteToBoardModal, onModalClose, modal: { currentModal } } = this.props\n    const { name, qrCodeCopied, showAlert, alertData, friendInvited } = this.state\n\n    let me = inviteToBoardModal.get(myId, Immutable.Map())\n\n    let boardJoinKey = me.get('boardJoinKey', Immutable.Map()).toJS()\n    let friendList = me.get('friendList', Immutable.List()).toJS()\n\n    // let onOpenOPLogModal = () => {\n    //   onModalSwitch(constants.SHOW_OP_LOG_MODAL, {\n    //     tabs: [\n    //       constants.SHOW_CONTENT_BOARD_TAB,\n    //       constants.SHOW_CONTENT_MASTER_TAB,\n    //       constants.SHOW_CONTENT_MEMBER_TAB,\n    //       constants.SHOW_CONTENT_OPKEY_TAB,\n    //       constants.SHOW_CONTENT_PEERS_TAB,\n    //     ],\n    //     params: {\n    //       boardId: boardId,\n    //     },\n    //   })\n    // }\n\n    // const expTimeVal = expiredFormat(boardJoinKey.UpdateTS.T, boardJoinKey.expirePeriod)\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.manageBoardModalStyles}\n          isOpen={currentModal !== null}\n          onRequestClose={onModalClose}\n          contentLabel='Create Board Modal'>\n          <div className={styles['root']}>\n            <div className={styles['modal-bar']}>\n              <div className={styles['prev-arrow']}>\n                <div className={styles['prev-arrow-icon']} onClick={onModalClose} />\n              </div>\n              <div className={styles['board-name']}>\n                {name}\n              </div>\n              <div className={styles['null-prev-arrow']} />\n            </div>\n            <div className={styles['invite-title']}>\n              <div className={styles['null-space']} />\n              <div className={styles['invite-title-text']}>\n                <FormattedMessage\n                  id='invite-to-board-modal.message2'\n                  defaultMessage='Invite friends'\n                />\n              </div>\n              <div className={styles['copy-space']}>\n                <CopyToClipboard text={boardJoinKey.URL}\n                  onCopy={() => this.setState({ qrCodeCopied: true })}>\n                  <button className={styles['manageboard-modal-copy']}>\n                    {\n                      qrCodeCopied ? (\n                        <FormattedMessage\n                          id='invite-to-board-modal.copy-node-id-2'\n                          defaultMessage='Copied'\n                        />\n                      ) : (\n                        <FormattedMessage\n                          id='invite-to-board-modal.copy-my-id-1'\n                          defaultMessage='Copy Group ID'\n                        />\n                      )\n                    }\n                  </button>\n                </CopyToClipboard>\n              </div>\n            </div>\n            <div className={styles['friend-list']}>\n              {\n                (friendList.length === 0) ? (\n                  <div className={styles['no-friend-text']}>\n                    <FormattedMessage\n                      id='invite-to-board-modal.message1'\n                      defaultMessage='You have no friend to invite to {BOARD_NAME}'\n                      values={{ BOARD_NAME: name }}\n                    />\n                  </div>\n                ) : null\n              }\n              {\n                friendList.map((item, index) => (\n                  <div className={styles['friend-item']} key={index}>\n                    <div className={styles['list-item-author']}>\n                      <div className={styles['list-item-author-pic']}>\n                        <img alt='' src={item.Img || constants.DEFAULT_USER_IMAGE} />\n                      </div>\n                      <div hidden className={styles['list-item-author-name']}> {item.Name} </div>\n                    </div>\n                    <div className={styles['list-item-main']}>\n                      <div className={styles['list-item-header']}>\n                        <div className={styles['list-item-title']}> {item.Name} </div>\n                      </div>\n                      <div className={styles['list-item-content']}>\n                        <div dangerouslySetInnerHTML={{ __html: null }} />\n                      </div>\n                    </div>\n                    <div className={styles['list-item-meta']}>\n                      {\n                        item.isBoardMember ? (\n                          <div className={styles['list-item-time']}>\n                            <FormattedMessage\n                              id='invite-to-board-modal.invite-friend-0'\n                              defaultMessage='joined {JOIN_TIME}'\n                              values={{ JOIN_TIME: epoch2ReadFormat(item.memberUpdateTS.T) }}\n                            />\n                          </div>\n                        ) : (\n\n                          ((item.friendID in friendInvited) && friendInvited[item.friendID]) ? (\n                            <div className={styles['list-item-invited']} onClick={(e) => this.onFriendInvited(e, item.friendID, item.chatID)}>\n                              <FormattedMessage\n                                id='invite-to-board-modal.invite-friend-1'\n                                defaultMessage='Invited'\n                              />\n                            </div>\n                          ) : (\n                            <div className={styles['list-item-to-invite']} onClick={(e) => this.onFriendInvited(e, item.friendID, item.chatID)}>\n                              <FormattedMessage\n                                id='invite-to-board-modal.invite-friend-2'\n                                defaultMessage='Invite'\n                              />\n                            </div>\n                          )\n                        )\n                      }\n                    </div>\n                  </div>\n                ))\n              }\n            </div>\n            <div className={styles['action-section']}>\n              <div className={styles['submit-button']}>\n                <div className={styles['submit-icon-subcontainer']} onClick={() => {\n                  onInviteFriend(boardId, name, friendInvited)\n                  onModalClose()\n                }}>\n                  <div className={styles['submit-icon']} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal>\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doInviteToBoardModal: bindActionCreators(doInviteToBoardModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InviteToBoardModal)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\n\nexport const myClass = 'APP'\n\nexport const myDuck = createDuck(myClass, 'js')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, count: 0, ...query }))\n    dispatch(utils.setRoot(myId, myClass, myDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'CREATE_ARTICLE_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Create_Article_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport uuidv4 from 'uuid/v4'\nimport Quill from 'quill'\nimport { injectIntl,\n  FormattedMessage } from 'react-intl'\nimport $ from 'jquery'\n\nimport AlertComponent from '../components/AlertComponent'\nimport { dataURLtoFile,\n  bytesToSize,\n  isWhitespace,\n  newCanvasSize,\n  getOrientation,\n  array2Html,\n  getFileTemplate,\n  getUUID,\n  sanitizeDirtyHtml,\n  isMobile } from '../utils/utils'\n\nimport * as constants from '../constants/Constants'\n\nimport styles from './PttaiEditor.module.css'\n\nconst EDITOR_INPUT_ID = 'pttai-editor-input'\n\nlet BlockEmbed = Quill.import('blots/block/embed')\nlet Break = Quill.import('blots/break')\n\n/*                                                       */\n/*  Create a FileAttachment based off the BlockEmbed     */\n/*                                                       */\n/*  Since quill does not allow heirarchical dom element, */\n/*  we use iframe for attachment display in the editor.  */\n/*                                                       */\nclass FileAttachment extends BlockEmbed {\n  static create (params) {\n    let node = super.create(params.value)\n\n    node.setAttribute('srcdoc', params.value)\n    node.setAttribute('frameborder', '0')\n    node.setAttribute('allowfullscreen', true)\n    node.setAttribute('width', '100%')\n    node.setAttribute('height', '84px')\n    node.setAttribute('data-id', params.id)\n    node.setAttribute('data-class', params.class)\n    node.setAttribute('data-name', params.name)\n    node.setAttribute('data-size', params.size)\n    node.setAttribute('data-type', params.type)\n\n    return node\n  }\n\n  static value (node) {\n    return node.getAttribute('srcdoc')\n  }\n}\n\nFileAttachment.blotName = 'FileAttachment'\nFileAttachment.tagName = 'iframe'\n\nclass ImageAttachment extends BlockEmbed {\n  static create (params) {\n    let node = super.create()\n\n    node.setAttribute('src', params.src)\n    node.setAttribute('alt', 'not working')\n    node.setAttribute('width', '100%')\n    node.setAttribute('data-id', params.id)\n    node.setAttribute('data-class', params.class)\n\n    return node\n  }\n\n  static value (node) {\n    return {\n      url: node.getAttribute('src')\n    }\n  }\n}\n\nImageAttachment.blotName = 'ImageAttachment'\nImageAttachment.tagName = 'img'\n\nBreak.blotName = 'break'\nBreak.tagName = 'BR'\n\nQuill.register(Break)\nQuill.register(FileAttachment, true)\nQuill.register(ImageAttachment, true)\n\n/*                                                         */\n/*  Each line of the array should be wrapped by <p></p>    */\n/*                                                         */\n\nfunction html2Array (html) {\n  let tags = [/<ol>.*?<\\/ol>/g, /<ul>.*?<\\/ul>/g, /<iframe.*?<\\/iframe>/g, /<img.*?>/g]\n  let result = html\n\n  /*  1. remove all new line character  */\n  result = result.replace(/\\r?\\n|\\r/g, ' ')\n\n  /*  2. wrapped line with <p></p>  */\n  tags.forEach((each) => { result = result.replace(each, '<p>$&</p>') })\n\n  /*  3. split html into array  */\n  result = result.match(/<p>.*?<\\/p>/g)\n\n  /*  4. convert html array to object array */\n  result = result.map((htmlStr) => {\n    let htmlObj = {\n      type: 'text',\n      content: '',\n      param: {}\n    }\n\n    if (htmlStr.indexOf('<p><iframe') === 0) {\n      let pElement = $.parseHTML(htmlStr)[0]\n      let iframeElement = pElement.children[0]\n\n      htmlObj.type = constants.CONTENT_TYPE_FILE\n      htmlObj.content = ''\n      htmlObj.param = {\n        id: $(iframeElement).data('id'),\n        class: $(iframeElement).data('class'),\n        name: $(iframeElement).data('name'),\n        size: $(iframeElement).data('size'),\n        type: $(iframeElement).data('type')\n      }\n    } else if (htmlStr.indexOf('<p><img') === 0) {\n      let pElement = $.parseHTML(htmlStr)[0]\n      let imgElement = pElement.children[0]\n\n      htmlObj.type = constants.CONTENT_TYPE_IMAGE\n      htmlObj.content = ''\n      htmlObj.param = {\n        id: $(imgElement).data('id'),\n        class: $(imgElement).data('class')\n      }\n    } else {\n      htmlObj.type = constants.CONTENT_TYPE_TEXT\n      htmlObj.content = sanitizeDirtyHtml(htmlStr)\n    }\n\n    return htmlObj\n  })\n\n  return result\n}\n\nfunction isEmpty (htmlArray) {\n  if (!htmlArray || htmlArray.length === 0) return true\n\n  let html = htmlArray.reduce((acc, each) => {\n    if (each.type === constants.CONTENT_TYPE_IMAGE || each.type === constants.CONTENT_TYPE_FILE) {\n      return acc + 'dirty'\n    } else if (each.type === constants.CONTENT_TYPE_TEXT) {\n      let cleanEach = each.content.replace(/<p>/g, '')\n      cleanEach = cleanEach.replace(/<\\/p>/g, '')\n      cleanEach = cleanEach.replace(/<br>/g, '')\n      cleanEach = cleanEach.trim().replace(/\\s\\s+/g, ' ')\n      return acc + cleanEach\n    } else {\n      return acc\n    }\n  }, '')\n\n  html = html.replace(/\\s\\s+/g, ' ')\n\n  return html === ''\n}\n\nfunction isTitleTooLong (title) {\n  // const cjk_limit = 14\n  const en_limit = 27\n  const cjk_regex = /[\\u3000-\\u303f\\u3040-\\u309f\\u30a0-\\u30ff\\uff00-\\uff9f\\u4e00-\\u9faf\\u3400-\\u4dbf]/ // https://stackoverflow.com/a/43419070/5032696\n\n  // consider CKJ char as 2 en char\n  return title.replace(cjk_regex, '..').length > en_limit\n}\n\nclass PttaiEditor extends PureComponent {\n  constructor (props) {\n    super(props)\n    this.state = {\n      id: `editor-${uuidv4()}`,\n      editor: {},\n      title: props.articleTitle,\n      htmlArray: props.initHtmlArray || [],\n      htmlContent: props.initHtmlArray ? array2Html(props.initHtmlArray, props.boardId) : '',\n      attachedObjs: [],\n      selection: { index: 0, length: 0 },\n      showAlert: false,\n      titleChanged: false,\n      contentChanged: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n\n    this.onTitleChange = this.onTitleChange.bind(this)\n    this.onInputEnter = this.onInputEnter.bind(this)\n    this.onPrevPageClick = this.onPrevPageClick.bind(this)\n    this.onContentClick = this.onContentClick.bind(this)\n    this.mountQuill = this.mountQuill.bind(this)\n    this.attachmentUpload = this.attachmentUpload.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.onDelete = this.onDelete.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  onDelete () {\n    const { onDeleteArticle } = this.props\n\n    let that = this\n    this.setState({\n      showAlert: true,\n      alertData: {\n        message: (\n          <FormattedMessage\n            id='alert.message1'\n            defaultMessage='Are you sure you want to delete?'\n          />),\n        onConfirm: () => {\n          that.setState({ showAlert: false })\n          onDeleteArticle()\n        },\n        onClose: () => that.setState({ showAlert: false })\n      }\n    })\n  }\n\n  onSubmit () {\n    const { onSubmitArticle } = this.props\n    const { htmlArray, title, attachedObjs } = this.state\n\n    if (isEmpty(htmlArray) || !title || title.replace(/\\s+/g, '') === '') {\n      let that = this\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message10'\n              defaultMessage='Title or content cannot be empty'\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (isTitleTooLong(title)) {\n      let that = this\n      return this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message36'\n              defaultMessage='Title is too long (CJK word: 14, eng: 27)'\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else {\n      /*                                              */\n      /* Start submitting article:                    */\n      /*                                              */\n      /* Replace data-url with attachement ID an      */\n      /*  data-url will be replaced back after upload */\n      /*                                              */\n\n      let reducedHtmlArray = htmlArray.map((each) => {\n        if (each.type === 'attachment') {\n          return each\n        } else if (each.type === 'text') {\n          let replaced = each.content\n          attachedObjs.forEach((attachment) => { replaced = replaced.replace(attachment.data, attachment.id) })\n          each.content = replaced\n          return each\n        } else {\n          return each\n        }\n      })\n\n      if ((JSON.stringify(reducedHtmlArray).length - 2) * 3.032 > constants.MAX_ARTICLE_SIZE) {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message16'\n                defaultMessage='Max content is {MAX_ARTICLE_SIZE} characters'\n                values={{ MAX_ARTICLE_SIZE: constants.MAX_ARTICLE_SIZE }}\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n      } else {\n        onSubmitArticle(title, reducedHtmlArray, attachedObjs)\n      }\n    }\n  }\n\n  onTitleChange (e) {\n    this.setState({ title: e.target.value })\n  }\n\n  onPrevPageClick () {\n    const { onCloseArticle, isEdit } = this.props\n    const { contentChanged, title, htmlArray } = this.state\n\n    if (isEdit) {\n      if (contentChanged) {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message14'\n                defaultMessage='You have edited the article, are you sure you want to leave?'\n              />),\n            onConfirm: () => {\n              that.setState({ showAlert: false })\n              onCloseArticle()\n            },\n            onClose: () => that.setState({ showAlert: false })\n          }\n        })\n      } else {\n        onCloseArticle()\n      }\n    } else {\n      if (!isEmpty(htmlArray) || title || title.replace(/\\s+/g, '') !== '') {\n        let that = this\n        this.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message9'\n                defaultMessage='You have unfinished article, are you sure you want to leave?'\n              />),\n            onConfirm: () => {\n              that.setState({ showAlert: false })\n              onCloseArticle()\n            },\n            onClose: () => that.setState({ showAlert: false })\n          }\n        })\n      } else {\n        onCloseArticle()\n      }\n    }\n  }\n\n  onContentClick (e) {\n    const { htmlArray } = this.state\n\n    /* focus editor when modal is clicked */\n    if (e.target.id !== 'edit-article-modal-main-section') {\n\n    } else if (isEmpty(htmlArray)) {\n      e.target.children[0].children[0].children[0].focus()\n    }\n  }\n\n  componentDidMount () {\n    this.setState({ editor: this.mountQuill() })\n\n    document.addEventListener('keydown', this.onInputEnter, false)\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('keydown', this.onInputEnter, false)\n  }\n\n  onInputEnter (e) {\n    /* focus editor when press enter or tab */\n    if (((!e.isComposing && e.key === 'Enter') || (!e.isComposing && e.key === 'Tab')) && $(':focus').is('input')) {\n      $('.' + constants.PTT_EDITOR_CLASS_NAME).focus()\n      e.preventDefault()\n    }\n  }\n\n  mountQuill () {\n    const { id, htmlContent } = this.state\n\n    let that = this\n    let editor = new Quill(`#${id}`, {})\n\n    /*                              */\n    /*  Autolink URLs when typing   */\n    /*                              */\n    editor.clipboard.addMatcher(Node.TEXT_NODE, function (node, delta) {\n      let regex = /https?:\\/\\/[^\\s]+/g\n      if (typeof (node.data) !== 'string') return\n\n      let matches = node.data.match(regex)\n      if (matches && matches.length > 0) {\n        let ops = []\n        let str = node.data\n        matches.forEach((match) => {\n          let split = str.split(match)\n          let beforeLink = split.shift()\n          ops.push({ insert: beforeLink })\n          ops.push({ insert: match, attributes: { link: match } })\n          str = split.join(match)\n        })\n        ops.push({ insert: str })\n        delta.ops = ops\n      }\n\n      return delta\n    })\n\n    /*                           */\n    /* Clear formatting on paste */\n    /*                           */\n    editor.clipboard.addMatcher(Node.ELEMENT_NODE, (node, delta) => {\n      delta.ops = delta.ops.map(op => {\n        if (op.insert && op.insert.image) {\n          return {\n            insert: op.insert,\n            attributes: {\n              width: '100%'\n            }\n          }\n        } else {\n          return {\n            insert: op.insert\n          }\n        }\n      })\n      return delta\n    })\n\n    /*                                                               */\n    /* Listening on editor-change                                    */\n    /*                                                               */\n    /* editor-change emit for both text and selection changes        */\n    /*  which is helpful for us to keep track of selection in state  */\n    /*  especially when selection event is in silent mode.           */\n    /*                                                               */\n    editor.on('editor-change', function (eventName, ...args) {\n      if (eventName === 'text-change') {\n        /* auto link url */\n        let delta = args[0]\n        let html = editor.root.innerHTML\n        let regex = /https?:\\/\\/[^\\s]+$/\n\n        if (delta.ops.length === 2 && delta.ops[0].retain && isWhitespace(delta.ops[1].insert)) {\n          let endRetain = delta.ops[0].retain\n          let text = editor.getText().substr(0, endRetain)\n          let match = text.match(regex)\n\n          if (match !== null) {\n            let url = match[0]\n\n            let ops = []\n            if (endRetain > url.length) {\n              ops.push({ retain: endRetain - url.length })\n            }\n\n            ops = ops.concat([\n              { delete: url.length },\n              { insert: url, attributes: { link: url } }\n            ])\n\n            editor.updateContents({\n              ops: ops\n            })\n          }\n        }\n\n        that.handleChange(html, html2Array(html))\n      } else if (eventName === 'selection-change') {\n        let range = args[0]\n        let oldRange = args[1]\n\n        if (oldRange && !range) {\n          /*  Will temporary lose focus when clicking input file button  */\n          /*  so keep the previous selection in this.state.selection.    */\n          that.setState({ selection: that.state.selection })\n        } else {\n          that.setState({ selection: range })\n        }\n      }\n    })\n\n    if (htmlContent !== '') {\n      editor.root.innerHTML = htmlContent\n    }\n\n    return editor\n  }\n\n  handleChange (html, htmlArray) {\n    this.setState({ htmlContent: html, htmlArray: htmlArray, contentChanged: true })\n  }\n\n  attachmentUpload (e) {\n    const { editor, attachedObjs } = this.state\n    const { intl } = this.props\n    const uploadingText = intl.formatMessage({ id: 'create-article-modal.file-uploading' })\n\n    let ele = document.querySelector('#' + EDITOR_INPUT_ID)\n    let file = ele.files[0]\n    let fileReader = new FileReader()\n    let imgReader = new FileReader()\n    let that = this\n    let insertPointIndex = that.state.selection.index\n\n    if (!file) return\n\n    if (file.size >= constants.MAX_FILE_UPLOAD_SIZE) {\n      that.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message24'\n              defaultMessage='File size cannot exceed {MAX_FILE_UPLOAD_SIZE}'\n              values={{ MAX_FILE_UPLOAD_SIZE: bytesToSize(constants.MAX_FILE_UPLOAD_SIZE) }}\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n      return\n    }\n\n    if (file.type && file.type.match(/image\\/(jpeg|png|gif)/)) {\n      /* image upload */\n      imgReader.readAsDataURL(file)\n    } else {\n      /* file upload */\n      fileReader.readAsDataURL(file)\n    }\n\n    /* preview placeholder text */\n    editor.insertText(insertPointIndex, uploadingText, {}, true)\n\n    fileReader.onloadend = function () {\n      const fileInfo = {\n        fileId: 'file-tmp-' + getUUID(), // Will be replaced my media ID after uploaded\n        fileClass: constants.FILE_CLASS_NAME,\n        fileName: file.name,\n        fileSize: file.size\n      }\n\n      /* remove placeholder text */\n      editor.deleteText(insertPointIndex, uploadingText.length)\n\n      /* Insert as an iframe element */\n      editor.insertEmbed(insertPointIndex, 'FileAttachment', {\n        id: fileInfo.fileId,\n        class: fileInfo.fileClass,\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        value: getFileTemplate(fileInfo)\n      })\n\n      /* New attachment */\n      attachedObjs.push({\n        'id': fileInfo.fileId,\n        'data': fileReader.result,\n        'file': file,\n        'type': constants.CONTENT_TYPE_FILE\n      })\n\n      /* Update cursor selection */\n      let range = that.state.selection\n      let newRange = {\n        index: range.index + 1,\n        length: range.length\n      }\n\n      editor.setSelection(newRange)\n\n      that.setState({\n        editor: editor,\n        selection: newRange,\n        attachedObjs: attachedObjs,\n        contentChanged: true\n      })\n    }\n\n    imgReader.onloadend = function () {\n      getOrientation(file, (orientation) => {\n        let image = new Image()\n        image.src = imgReader.result\n        image.onload = function (imageEvent) {\n          /* Resize image if too large */\n          let canvas = document.createElement('canvas')\n\n          let max_size = constants.MAX_EDITOR_IMG_WIDTH\n\n          let width = image.width\n\n          let height = image.height\n\n          if (width > height) {\n            if (width > max_size) {\n              height *= max_size / width\n              width = max_size\n            }\n          } else {\n            if (height > max_size) {\n              width *= max_size / height\n              height = max_size\n            }\n          }\n          canvas.width = width\n          canvas.height = height\n          canvas.getContext('2d').drawImage(image, 0, 0, width, height)\n\n          /* Adjust Orientation for mobile */\n          let oriWidth = width\n          let oriHeight = height\n          let degrees = 0\n\n          if (orientation === 6) {\n            degrees = 90\n          } else if (orientation === 3) {\n            degrees = 180\n          } else if (orientation === 8) {\n            degrees = 270\n          }\n\n          let newSize = newCanvasSize(oriWidth, oriHeight, degrees)\n          canvas.width = newSize[0]\n          canvas.height = newSize[1]\n\n          let ctx = canvas.getContext('2d')\n          ctx.clearRect(0, 0, canvas.width, canvas.height)\n          ctx.save()\n          ctx.translate(canvas.width / 2, canvas.height / 2)\n          ctx.rotate(degrees * Math.PI / 180)\n          ctx.drawImage(image, -oriWidth / 2, -oriHeight / 2, oriWidth, oriHeight)\n          ctx.restore()\n\n          /* Update img src with data url */\n          let dataUrl = canvas.toDataURL('image/jpeg')\n\n          /* Insert into editor */\n          let range = that.state.selection\n\n          const imageInfo = {\n            imageId: 'image-tmp-' + getUUID(), // Will be replaced my media ID after uploaded\n            imageClass: constants.IMAGE_CLASS_NAME + attachedObjs.length\n          }\n\n          /* remove placeholder text */\n          editor.deleteText(insertPointIndex, uploadingText.length)\n\n          /* Insert as an image element */\n          editor.insertEmbed(range.index, 'ImageAttachment', {\n            id: imageInfo.imageId,\n            class: imageInfo.imageClass,\n            src: dataUrl\n          })\n\n          /* New attachment */\n          attachedObjs.push({\n            'id': imageInfo.imageId,\n            'data': dataUrl,\n            'file': dataURLtoFile(dataUrl, file.name),\n            'type': constants.CONTENT_TYPE_IMAGE\n          })\n\n          /* Update cursor selection */\n          let newRange = {\n            index: range.index + 1,\n            length: range.length\n          }\n\n          editor.setSelection(newRange)\n\n          that.setState({\n            editor: editor,\n            selection: newRange,\n            attachedObjs: attachedObjs,\n            contentChanged: true\n          })\n        }\n      })\n    }\n  }\n\n  render () {\n    const { isEdit, intl } = this.props\n    const { editor, showAlert, alertData, selection, title } = this.state\n    const placeholder = intl.formatMessage({ id: 'create-article-modal.placeholder' })\n\n    let sel = Object.keys(editor).length > 0 ? editor.getSelection() : null\n\n    return (\n      <div id='edit-article-modal-main-section'\n        className={styles['root']}\n        onClick={this.onContentClick}>\n        <div className={styles['title-section']}>\n          <div className={styles['prev-arrow']} onClick={this.onPrevPageClick} />\n          <div className={styles['title-text']} title={title}>\n            {\n              isEdit ? (\n                title\n              ) : (\n                <input\n                  placeholder={placeholder}\n                  autoFocus={!isMobile()}\n                  name='title-input'\n                  value={title}\n                  onChange={this.onTitleChange} />\n              )\n            }\n          </div>\n          <div className={styles['space']} />\n        </div>\n        <div id={this.state.id} className={styles['pttai-editor-content']} />\n        <div className={styles['action-section']}>\n          <div className={styles['upload-button']} >\n            <label>\n              <input type='file' id={EDITOR_INPUT_ID}\n                onChange={(e) => {\n                  this.attachmentUpload(e)\n                  this.setState({ selection: sel || selection })\n                }}\n                onClick={\n                  /* Avoid onChange to be triggered twice */\n                  (e) => {\n                    e.target.value = null\n                  }\n                } />\n            </label>\n          </div>\n          {\n            isEdit ? (<div className={styles['delete-button']} onClick={this.onDelete} />) : null\n          }\n          <div className={styles['submit-button']} onClick={this.onSubmit} />\n        </div>\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nexport default injectIntl(PttaiEditor)\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Modal from 'react-modal'\n\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as doCreateArticleModal from '../reducers/CreateArticleModal'\nimport PttaiEditor from '../components/PttaiEditor'\nimport styles from './CreateArticleModal.module.css'\n\nclass CreateArticleModal extends PureComponent {\n  render () {\n    const { onModalSubmit, modal: { currentModal }, modalInput: { boardId }, onModalClose } = this.props\n\n    return (\n      <Modal\n        overlayClassName={styles['overlay']}\n        style={modalConstants.createArticleModalStyles}\n        isOpen={currentModal !== null}\n        onRequestClose={null}\n        shouldCloseOnEsc={false}\n        contentLabel='Create Article Modal'>\n        <PttaiEditor boardId={boardId}\n          articleTitle={''}\n          initHtmlArray={[]}\n          isEdit={false}\n          onDeleteArticle={null}\n          onSubmitArticle={onModalSubmit}\n          onCloseArticle={onModalClose} />\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doCreateArticleModal: bindActionCreators(doCreateArticleModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateArticleModal)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'EDIT_ARTICLE_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Edit_Article_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Modal from 'react-modal'\n\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as doEditArticleModal from '../reducers/EditArticleModal'\nimport PttaiEditor from '../components/PttaiEditor'\nimport styles from './EditArticleModal.module.css'\n\nclass EditArticleModal extends PureComponent {\n  render () {\n    const { modalInput: {\n      boardId,\n      onDeleteArticle,\n      articleTitle,\n      articleContentsList\n    },\n    modal: {\n      currentModal\n    },\n    onModalSubmit,\n    onModalClose } = this.props\n\n    let htmlArray = articleContentsList.reduce((resultArray, block) => { return resultArray.concat(block.contentBlockArray) }, [])\n\n    return (\n      <Modal\n        overlayClassName={styles['overlay']}\n        style={modalConstants.editArticleModalStyles}\n        isOpen={currentModal !== null}\n        onRequestClose={null}\n        shouldCloseOnEsc={false}\n        contentLabel='Edit Article Modal'>\n        <PttaiEditor boardId={boardId}\n          articleTitle={articleTitle}\n          initHtmlArray={htmlArray}\n          isEdit\n          onDeleteArticle={onDeleteArticle}\n          onSubmitArticle={onModalSubmit}\n          onCloseArticle={onModalClose} />\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doEditArticleModal: bindActionCreators(doEditArticleModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditArticleModal)\n","import React, { PureComponent } from 'react'\nimport QrReader from 'react-qr-reader'\nimport { FormattedMessage } from 'react-intl'\nimport { isIOS, isAndroid } from '../utils/utils'\n\nimport styles from './QRScannerSubmodal.module.css'\n\n/*\n * [required] onScanned(code: <String>): used when Scanner got QRCode\n*/\n\nclass AndroidScanner extends PureComponent {\n  constructor (props) {\n    super()\n    this.openCamera = this.openCamera.bind(this)\n  }\n\n  openCamera (event) {\n    // Workaround for android:\n    // play() can only be initiated by a user gesture (Android)\n    // ref: https://github.com/spotify/web-playback-sdk/issues/5\n\n    let container = event.target.parentElement\n\n    if (container.classList.contains(styles['scanner-btn'])) {\n      container = container.parentElement\n    }\n\n    if (container.classList.contains(styles['scanner-btn-container'])) {\n      container = container.parentElement\n    }\n\n    container.querySelector(`.${styles['scanner-btn-container']}`).remove()\n    container.querySelector(`.${styles['scanner-container']}`).hidden = false\n    container.querySelector('video').play()\n  }\n\n  render () {\n    const { onScanned } = this.props\n\n    return (\n      <div>\n        <div className={styles['scanner-btn-container']}>\n          <div className={styles['scanner-btn']} onClick={this.openCamera}>\n            <FormattedMessage\n              id='qrcode-scanner.tap-to-scan'\n              defaultMessage='Tap to scan QR Code'\n            />\n          </div>\n        </div>\n\n        <div hidden className={styles['scanner-container']}>\n          <QrReader\n            delay={300}\n            onError={(err) => console.error(err)}\n            onScan={onScanned}\n            className={styles['scanner']}\n          />\n          <div className={styles['scanner-text']}>\n            <FormattedMessage\n              id='add-friend-modal.scan-code-title'\n              defaultMessage='Scan QR Code to add friend'\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass IosScanner extends PureComponent {\n  constructor (props) {\n    super()\n    this.openCamera = this.openCamera.bind(this)\n  }\n  openCamera () {\n    let iframe = document.createElement('IFRAME')\n    iframe.setAttribute('src', 'opencamera://')\n\n    window.getQRCode = code => {\n      this.props.onScanned(code)\n      iframe.remove()\n    }\n\n    document.documentElement.appendChild(iframe)\n  }\n  render () {\n    return (\n      <div>\n        <div className={styles['scanner-btn-container']} onClick={this.openCamera}>\n          <div className={styles['scanner-btn']}>\n            <FormattedMessage\n              id='qrcode-scanner.tap-to-scan'\n              defaultMessage='Tap to scan QR Code'\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst WebScanner = props => {\n  const { onScanned } = props\n\n  return (\n    <div>\n      <div className={styles['scanner-container']}>\n        <QrReader\n          delay={300}\n          onError={(err) => console.error(err)}\n          onScan={onScanned}\n          className={styles['scanner']}\n        />\n        <div className={styles['scanner-text']}>\n          <FormattedMessage\n            id='add-friend-modal.scan-code-title'\n            defaultMessage='Scan QR Code to add friend'\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default props => (\n  <div className={styles['submodal-wrapper']}>\n    {\n      (() => {\n        if (isAndroid()) {\n          return <AndroidScanner {...props} />\n        } else if (isIOS()) {\n          return <IosScanner {...props} />\n        } else {\n          return <WebScanner {...props} />\n        }\n      })()\n    }\n  </div>\n)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'ADD_KNOWN_BOARD_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Add_Known_Board_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { FormattedMessage,\n  injectIntl } from 'react-intl'\nimport Modal from 'react-modal'\n\nimport QRScannerSubmodal from '../components/QRScannerSubmodal'\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as doAddKnownBoardModal from '../reducers/AddKnownBoardModal'\nimport { isMobile } from '../utils/utils'\n\nimport styles from './AddKnownBoardModal.module.css'\n\nclass AddKnownBoardModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      boardUrl: ''\n    }\n    this.onNameChange = this.onNameChange.bind(this)\n    this.onScanned = this.onScanned.bind(this)\n  }\n\n  onNameChange (e) {\n    this.setState({ boardUrl: e.target.value })\n  }\n\n  onScanned (data) {\n    if (data) {\n      const { modalInput: { modalJoinBoardSubmit } } = this.props\n\n      this.setState({ boardUrl: data })\n\n      modalJoinBoardSubmit(data)\n    }\n  }\n\n  render () {\n    const { intl, modalInput: { modalJoinBoardSubmit }, onModalClose, modal: { currentModal } } = this.props\n    const { boardUrl } = this.state\n\n    let onSubmitAndClose = function () {\n      modalJoinBoardSubmit(boardUrl)\n    }\n\n    const placeholder = intl.formatMessage({ id: 'add-known-board-modal.placeholder' })\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.scannerModalStyels}\n          isOpen={currentModal !== null}\n          onRequestClose={null}\n          contentLabel='Add Known Board Modal'>\n          <div className={styles['add-known-board-container']}>\n            <div className={styles['add-known-board']}>\n              <div className={styles['add-known-board-title']}>\n                <FormattedMessage\n                  id='add-known-board-modal.title'\n                  defaultMessage='Enter Group ID to join'\n                />\n              </div>\n              <QRScannerSubmodal onScanned={this.onScanned} />\n              <div className={styles['add-known-board-node-id']}>\n                <textarea\n                  placeholder={placeholder}\n                  autoFocus={!isMobile()}\n                  name='title-input'\n                  value={boardUrl}\n                  onChange={this.onNameChange} />\n              </div>\n              <div className={styles['add-known-board-action-section']}>\n                <button className={styles['add-known-board-submit']} onClick={onSubmitAndClose}>\n                  <FormattedMessage\n                    id='add-known-board-modal.scan-code-action'\n                    defaultMessage='Join'\n                  />\n                </button>\n                <button className={styles['add-known-board-cancel']} onClick={onModalClose}>\n                  <FormattedMessage\n                    id='first-popup-modal.action1'\n                    defaultMessage='Cancel'\n                  />\n                </button>\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doAddKnownBoardModal: bindActionCreators(doAddKnownBoardModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(AddKnownBoardModal))\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport * as serverUtils from './ServerUtils'\n\nimport { myDuck as appDuck } from './App'\nimport { DEFAULT_USER_NAMECARD,\n  DEFAULT_USER_IMAGE } from '../constants/Constants'\n\nexport const myClass = 'NAME_CARD_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Edit_Name_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\nconst UPDATE_DATA = myDuck.defineType('UPDATE_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\nexport const getProfile = (myId, userId) => {\n  return (dispatch, getState) => {\n    Promise.all([\n      dispatch(serverUtils.getUserName(userId)),\n      dispatch(serverUtils.getNameCard(userId)),\n      dispatch(serverUtils.getUserImg(userId))\n    ]).then(data => {\n      const [nameData, nameCardData, userImgData] = data\n\n      let name = nameData.response.result.N ? serverUtils.b64decode(nameData.response.result.N) : ''\n      let userImg = userImgData.response.result.I ? userImgData.response.result.I : DEFAULT_USER_IMAGE\n      let nameCard = null\n\n      if (nameCardData.response.result.C) {\n        nameCard = { ...DEFAULT_USER_NAMECARD }\n        Object.assign(nameCard, JSON.parse(serverUtils.b64decode(nameCardData.response.result.C)))\n      } else {\n        nameCard = DEFAULT_USER_NAMECARD\n      }\n\n      dispatch(postprocessGetProfile(myId, { ...nameCard, name, userImg }))\n    })\n  }\n}\n\nconst postprocessGetProfile = (myId, profile) => {\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { profile }\n  }\n}\n\n// UPDATE\n\nexport const editProfile = (myId, profile) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.setMyNameCard(JSON.stringify(profile)))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessEditProfile(myId, profile))\n      })\n  }\n}\n\nconst postprocessEditProfile = (myId, content) => {\n  return {\n    myId,\n    myClass,\n    type: UPDATE_DATA, /* UPDATE_DATA will merge the updated object with original */\n    data: { profile: content }\n  }\n}\n\nexport const editName = (myId, name) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.editName(name))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessEditName(myId, name, result))\n      })\n  }\n}\n\nconst postprocessEditName = (myId, name, result) => {\n  result = serverUtils.deserialize(result)\n\n  const combinedUserInfo = {\n    createTime: result.CT,\n    userID: result.ID,\n    userName: result.N,\n    status: result.S,\n    updateTime: result.UT,\n    version: result.V\n  }\n\n  return {\n    myId,\n    myClass,\n    type: UPDATE_DATA, /* UPDATE_DATA will merge the updated object with original */\n    data: { profile: combinedUserInfo }\n  }\n}\n\nexport const editProfileImg = (myId, imgBase64) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.editProfileImg(imgBase64))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessEditProfileImg(myId, imgBase64))\n      })\n  }\n}\n\nconst postprocessEditProfileImg = (myId, imgBase64) => {\n  const combinedUserInfo = {\n    userImg: imgBase64\n  }\n\n  return {\n    myId,\n    myClass,\n    type: UPDATE_DATA,\n    data: { profile: combinedUserInfo }\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData,\n  [UPDATE_DATA]: utils.reduceUpdateData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport Modal from 'react-modal'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { FormattedMessage,\n  injectIntl } from 'react-intl'\nimport validator from 'validator'\nimport Immutable from 'immutable'\n\nimport { PTTAI_URL_BASE } from '../config'\n\nimport AlertComponent from '../components/AlertComponent'\n\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as constants from '../constants/Constants'\nimport * as doNameCardModal from '../reducers/NameCardModal'\nimport { getOrientation,\n  newCanvasSize } from '../utils/utils'\nimport googleAnalytics from '../utils/googleAnalytics'\n\nimport styles from './NameCardModal.module.css'\n\nfunction isEmpty (name) {\n  return name.replace(/\\s\\s+/g, '') === ''\n}\n\n/**\n * @name NameCardModal\n * @param userId\n * @desc give userId, component would fetch all other data used by name card\n */\n\nclass NameCardModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      isEditing: false\n    }\n\n    this.openQRCodeModal = this.openQRCodeModal.bind(this)\n  }\n\n  componentWillMount () {\n    const { myId, modalInput: { userId }, actions: { doNameCardModal } } = this.props\n    doNameCardModal.getProfile(myId, userId)\n  }\n\n  openQRCodeModal () {\n    this.props.onModalClose()\n    document.querySelector('#friend-tab').click()\n    let wait = setInterval(function () {\n      let button = document.querySelector('#add-friend-button')\n      if (button) {\n        button.click()\n        clearInterval(wait)\n      }\n    }, 200)\n  }\n\n  render () {\n    const { myId, intl, nameCardModal, actions, onModalClose, modal: { currentModal }, modalInput: { isEditable } } = this.props\n    const { isEditing } = this.state\n\n    let me = nameCardModal.get(myId, Immutable.Map())\n    let profile = me.get('profile', Immutable.Map()).toJS()\n\n    const { name, company, jobTitle, email, phone, description, userImg } = profile\n\n    const company_placeholder = intl.formatMessage({ id: 'edit-name-modal.company-placeholder' })\n    const jobtitle_placeholder = intl.formatMessage({ id: 'edit-name-modal.jobtitle-placeholder' })\n    const email_placeholder = intl.formatMessage({ id: 'edit-name-modal.email-placeholder' })\n    const phone_placeholder = intl.formatMessage({ id: 'edit-name-modal.phone-placeholder' })\n    const description_placeholder = intl.formatMessage({ id: 'edit-name-modal.description-placeholder' })\n\n    if (isEditable && isEditing) {\n      return (\n        <div>\n          <Modal\n            overlayClassName={styles['overlay']}\n            style={modalConstants.nameCardModalStyles}\n            isOpen={currentModal !== null}\n            onRequestClose={onModalClose}\n            contentLabel='Edit Name Modal'>\n            <EditingNameCard\n              {...profile}\n              {...this.state}\n              myId={myId}\n              intl={intl}\n              actions={actions}\n              finishEdit={() => this.setState({ isEditing: false })} />\n          </Modal>\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.nameCardModalStyles}\n          isOpen={currentModal !== null}\n          onRequestClose={onModalClose}\n          contentLabel='Edit Name Modal'>\n          <div className={styles['root']}>\n\n            {\n              isEditable && (\n                <div className={styles['modal-action-section']}>\n                  <button className={styles['edit-button']} onClick={() => this.setState({ isEditing: true })}>\n                    <FontAwesomeIcon icon='pen' />\n                  </button>\n                </div>)\n            }\n\n            <div className={styles['info-section']}>\n              <div className={styles['left-side']}>\n                <div className={styles['profile-picture']}>\n                  <img id='profile-page-pic' src={userImg} alt={'User Profile'} />\n                </div>\n\n                {\n                  isEditable && (\n                    <div className={styles['qr-code']} onClick={this.openQRCodeModal}>\n                      <img src={`${PTTAI_URL_BASE}/images/btn_qrcode@2x.jpg`} alt='QRCode Button' />\n                    </div>)\n                }\n\n              </div>\n              <div className={styles['right-side']}>\n                <div className={styles['main-info']}>\n                  <div className={styles['profile-input']}>\n                    <div className={styles['name']}>\n                      <div>{name}</div>\n                    </div>\n                    <div className={styles['company']}>\n                      <div>{company || company_placeholder}</div>\n                    </div>\n                    <div className={styles['job-title']}>\n                      <div>{jobTitle || jobtitle_placeholder}</div>\n                    </div>\n                  </div>\n                </div>\n                <div className={styles['contact-info']}>\n                  <div className={styles['contact-input']}>\n                    <div className={styles['email']}>\n                      <div>{email || email_placeholder}</div>\n                    </div>\n                    <div className={styles['phone']}>\n                      <div>{phone || phone_placeholder}</div>\n                    </div>\n                  </div>\n                </div>\n                <div className={styles['other-info']}>\n                  <div className={styles['desc-input']}>\n                    <div className={styles['description']}>\n                      {\n                        // TODO: text-overlow for the third line should be ellipsis\n                        description ? description.split('\\n').map((line, i) => <div key={`desc-line-${i}`}>{line}</div>) : description_placeholder\n                      }\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nclass EditingNameCard extends PureComponent {\n  constructor (props) {\n    const { name, userImg, company, jobTitle, email, phone, description } = props\n\n    super()\n    this.state = {\n      name,\n      userImg,\n      company,\n      jobTitle,\n      email,\n      phone,\n      description,\n\n      showAlert: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n\n    this.onNameChange = this.onNameChange.bind(this)\n    this.onCompanyChange = this.onCompanyChange.bind(this)\n    this.onJobTitleChange = this.onJobTitleChange.bind(this)\n    this.onEmailChange = this.onEmailChange.bind(this)\n    this.onPhoneChange = this.onPhoneChange.bind(this)\n    this.onDescriptionChange = this.onDescriptionChange.bind(this)\n\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onUpload = this.onUpload.bind(this)\n    this.updateProfile = this.updateProfile.bind(this)\n  }\n\n  updateProfile (name, editedProfile, userImg) {\n    const { myId, actions: { doNameCardModal } } = this.props\n\n    doNameCardModal.editName(myId, name)\n    doNameCardModal.editProfile(myId, editedProfile)\n    doNameCardModal.editProfileImg(myId, userImg)\n\n    googleAnalytics.fireEvent('NameCard', 'EditNameCardSuccess')\n  }\n\n  onNameChange (e) {\n    this.setState({ name: e.target.value })\n  }\n\n  onCompanyChange (e) {\n    this.setState({ company: e.target.value })\n  }\n\n  onJobTitleChange (e) {\n    this.setState({ jobTitle: e.target.value })\n  }\n\n  onEmailChange (e) {\n    this.setState({ email: e.target.value })\n  }\n\n  onPhoneChange (e) {\n    this.setState({ phone: e.target.value })\n  }\n\n  onDescriptionChange (e) {\n    this.setState({ description: e.target.value })\n  }\n\n  onUpload (e) {\n    let that = this\n    let file = document.querySelector('input[type=file]').files[0]\n    let resizeReader = new FileReader()\n\n    if (!file) {\n\n    } else if (!(file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/gif')) {\n      that.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message23'\n              defaultMessage='[Error] Only allow image format: jpeg / png / gif'\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else {\n      getOrientation(file, (orientation) => {\n        resizeReader.readAsDataURL(file)\n\n        resizeReader.onloadend = function () {\n          let image = new Image()\n\n          image.src = resizeReader.result\n          image.onload = function (imageEvent) {\n            /* Resize */\n            let canvas = document.createElement('canvas')\n\n            let max_size = constants.MAX_USER_IMG_WIDTH\n\n            let width = image.width\n\n            let height = image.height\n            if (width > height) {\n              if (width > max_size) {\n                height *= max_size / width\n                width = max_size\n              }\n            } else {\n              if (height > max_size) {\n                width *= max_size / height\n                height = max_size\n              }\n            }\n            canvas.width = width\n            canvas.height = height\n            canvas.getContext('2d').drawImage(image, 0, 0, width, height)\n\n            /* Adjust Orientation */\n            let oriWidth = width\n            let oriHeight = height\n            let degrees = 0\n            if (orientation === 6) {\n              degrees = 90\n            } else if (orientation === 3) {\n              degrees = 180\n            } else if (orientation === 8) {\n              degrees = 270\n            }\n            let newSize = newCanvasSize(oriWidth, oriHeight, degrees)\n            canvas.width = newSize[0]\n            canvas.height = newSize[1]\n            let ctx = canvas.getContext('2d')\n            ctx.clearRect(0, 0, canvas.width, canvas.height)\n            ctx.save()\n            ctx.translate(canvas.width / 2, canvas.height / 2)\n            ctx.rotate(degrees * Math.PI / 180)\n            ctx.drawImage(image, -oriWidth / 2, -oriHeight / 2, oriWidth, oriHeight)\n            ctx.restore()\n\n            /* Update img src with data url */\n            let imgDataUrl = canvas.toDataURL('image/jpeg')\n            that.setState({ userImg: imgDataUrl })\n\n            // editImgSubmit(imgDataUrl)\n            // document.getElementById('profile-page-pic').setAttribute('src', imgDataUrl);\n          }\n        }\n      })\n    }\n  }\n\n  onSubmit () {\n    const name = this.state.name || ''\n    const userImg = this.state.userImg || ''\n    const company = this.state.company || ''\n    const jobTitle = this.state.jobTitle || ''\n    const email = this.state.email || ''\n    const phone = this.state.phone || ''\n    const description = this.state.description || ''\n\n    let that = this\n    let trimmedName = name.trim()\n    let trimmedCompany = company.trim()\n    let trimmedJobTitle = jobTitle.trim()\n    let trimmedEmail = email.trim()\n    let trimmedPhone = phone.trim()\n    let trimmedDescription = description.trim()\n\n    if (trimmedName === constants.DEFAULT_USER_NAME) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='edit-name-modal.default-user-name-alert'\n              defaultMessage='user name cannot be {DEFAULT_USER_NAME}'\n              values={{ DEFAULT_USER_NAME: constants.DEFAULT_USER_NAME }}\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (JSON.stringify(trimmedName).length - 2 > constants.MAX_USER_NAME_SIZE) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='edit-name-modal.user-name-length-alert'\n              defaultMessage='user name cannot exceed {MAX_USER_NAME_SIZE} characters'\n              values={{ MAX_USER_NAME_SIZE: constants.MAX_USER_NAME_SIZE }}\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (isEmpty(trimmedName)) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='edit-name-modal.user-name-empty-alert'\n              defaultMessage='user name cannot be empty'\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (JSON.stringify(trimmedCompany).length - 2 > constants.MAX_USER_COMPANY_SIZE) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='edit-name-modal.company-name-length-alert'\n              defaultMessage='company name cannot exceed {MAX_USER_COMPANY_SIZE} characters'\n              values={{ MAX_USER_COMPANY_SIZE: constants.MAX_USER_COMPANY_SIZE }}\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (JSON.stringify(trimmedJobTitle).length - 2 > constants.MAX_USER_JOBTITLE_SIZE) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='edit-name-modal.job-title-length-alert'\n              defaultMessage='job title cannot exceed {MAX_USER_JOBTITLE_SIZE} characters'\n              values={{ MAX_USER_JOBTITLE_SIZE: constants.MAX_USER_JOBTITLE_SIZE }}\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (JSON.stringify(trimmedEmail).length - 2 > constants.MAX_USER_EMAIL_SIZE) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='edit-name-modal.email-length-alert'\n              defaultMessage='email cannot exceed {MAX_USER_EMAIL_SIZE} characters'\n              values={{ MAX_USER_EMAIL_SIZE: constants.MAX_USER_EMAIL_SIZE }}\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (JSON.stringify(trimmedPhone).length - 2 > constants.MAX_USER_PHONE_SIZE) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='edit-name-modal.phone-length-alert'\n              defaultMessage='phone cannot exceed {MAX_USER_PHONE_SIZE} characters'\n              values={{ MAX_USER_PHONE_SIZE: constants.MAX_USER_PHONE_SIZE }}\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (JSON.stringify(trimmedDescription).length - 2 > constants.MAX_USER_DESCRIPTION_SIZE) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='edit-name-modal.description-length-alert'\n              defaultMessage='description cannot exceed {MAX_USER_DESCRIPTION_SIZE} characters'\n              values={{ MAX_USER_DESCRIPTION_SIZE: constants.MAX_USER_DESCRIPTION_SIZE }}\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (trimmedEmail && !validator.isEmail(trimmedEmail)) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='edit-name-modal.email-format-alert'\n              defaultMessage='Email is invalid'\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else {\n      let editedProfile = {\n        name: trimmedName,\n        company: trimmedCompany,\n        jobTitle: trimmedJobTitle,\n        email: trimmedEmail,\n        phone: trimmedPhone,\n        description: trimmedDescription\n      }\n\n      this.updateProfile(trimmedName, editedProfile, userImg)\n      this.props.finishEdit()\n    }\n  }\n\n  render () {\n    const { intl } = this.props\n    const { showAlert, alertData, name, userImg, company, jobTitle, email, phone, description } = this.state\n\n    const company_placeholder = intl.formatMessage({ id: 'edit-name-modal.company-placeholder' })\n    const jobtitle_placeholder = intl.formatMessage({ id: 'edit-name-modal.jobtitle-placeholder' })\n    const email_placeholder = intl.formatMessage({ id: 'edit-name-modal.email-placeholder' })\n    const phone_placeholder = intl.formatMessage({ id: 'edit-name-modal.phone-placeholder' })\n    const description_placeholder = intl.formatMessage({ id: 'edit-name-modal.description-placeholder' })\n\n    return (\n      <div className={`${styles['root']} ${styles['editing']}`}>\n        <div className={styles['modal-action-section']}>\n          <button className={styles['submit-button']} onClick={() => { this.onSubmit() }}>\n            <FontAwesomeIcon icon='check' size='xs' />\n          </button>\n        </div>\n\n        <div className={styles['info-section']}>\n          <div className={styles['left-side']}>\n            <label className={styles['profile-picture']}>\n              <img id='profile-page-pic' src={userImg} alt={'User Profile'} />\n              <input type='file' id='getval' onChange={this.onUpload} />\n            </label>\n            <div className={styles['qr-code']}>\n              <img src={`${PTTAI_URL_BASE}/images/btn_qrcode@2x.jpg`} alt='QRCode Button' />\n            </div>\n          </div>\n\n          <div className={styles['right-side']}>\n            <div className={styles['main-info']}>\n              <div className={styles['profile-input']}>\n                <div className={styles['name']}>\n                  <input\n                    name='title-input'\n                    value={name}\n                    onChange={this.onNameChange} />\n                </div>\n                <div className={styles['company']}>\n                  <input\n                    placeholder={company_placeholder}\n                    autoFocus\n                    name='title-input'\n                    value={company}\n                    onChange={this.onCompanyChange} />\n                </div>\n                <div className={styles['job-title']}>\n                  <input\n                    placeholder={jobtitle_placeholder}\n                    name='title-input'\n                    value={jobTitle}\n                    onChange={this.onJobTitleChange} />\n                </div>\n              </div>\n            </div>\n            <div className={styles['contact-info']}>\n              <div className={styles['contact-input']}>\n                <div className={styles['email']}>\n                  <input\n                    placeholder={email_placeholder}\n                    name='title-input'\n                    value={email}\n                    onChange={this.onEmailChange} />\n                </div>\n                <div className={styles['phone']}>\n                  <input\n                    placeholder={phone_placeholder}\n                    name='title-input'\n                    value={phone}\n                    onChange={this.onPhoneChange} />\n                </div>\n              </div>\n            </div>\n            <div className={styles['other-info']}>\n              <div className={styles['desc-input']}>\n                <div className={styles['description']}>\n                  <textarea\n                    rows='3'\n                    placeholder={description_placeholder}\n                    name='title-input'\n                    value={description}\n                    onChange={this.onDescriptionChange} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doNameCardModal: bindActionCreators(doNameCardModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(NameCardModal))\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'FIRST_POPUP_MODAL'\n\nexport const myDuck = createDuck(myClass, 'First_Popup_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Modal from 'react-modal'\nimport { injectIntl,\n  FormattedMessage } from 'react-intl'\n\nimport AlertComponent from '../components/AlertComponent'\nimport QRScannerSubmodal from '../components/QRScannerSubmodal'\n\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as constants from '../constants/Constants'\nimport * as doFirstPopupModal from '../reducers/FirstPopupModal'\n\nimport googleAnalytics from '../utils/googleAnalytics'\n\nimport styles from './FirstPopupModal.module.css'\n\nfunction isEmpty (name) {\n  return name.replace(/\\s\\s+/g, '') === ''\n}\n\nclass FirstPopupModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      name: '',\n      nodeId: '',\n      showAlert: false,\n      gaAgree: (props.modalInput && props.modalInput.gaAgree !== undefined) ? props.modalInput.gaAgree : false,\n      termsAgree: (props.modalInput && props.modalInput.termsAgree !== undefined) ? props.modalInput.termsAgree : true,\n      // scannerIsOpen: false,\n      submodalType: 'Sign-up',\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n    this.onKeydown = this.onKeydown.bind(this)\n    this.onNameChange = this.onNameChange.bind(this)\n    this.onSubmitSignUp = this.onSubmitSignUp.bind(this)\n    this.onScannerClose = this.onScannerClose.bind(this)\n    this.onScanned = this.onScanned.bind(this)\n    this.onNodeIdChange = this.onNodeIdChange.bind(this)\n    this.onSignIn = this.onSignIn.bind(this)\n    this.openPrivacySetting = this.openPrivacySetting.bind(this)\n  }\n\n  onNameChange (e) {\n    this.setState({ name: e.target.value })\n  }\n\n  onKeydown (e) {\n    if (e && !e.isComposing && e.keyCode === 13) { // press enter\n      this.onSubmitSignUp()\n    }\n  }\n\n  onSignInSubmodal () {\n    this.setState({ submodalType: 'Sign-in' })\n  }\n\n  onSignUpSubmodal () {\n    this.setState({ submodalType: 'Sign-up' })\n  }\n\n  onScannerClose () {\n    this.setState({ scannerIsOpen: false })\n  }\n\n  onScanned (data) {\n    if (data) {\n      this.setState({\n        nodeId: data\n      })\n      this.onSignIn(data)\n    }\n  }\n\n  onNodeIdChange (e) {\n    this.setState({ nodeId: e.target.value })\n  }\n\n  onSubmitSignUp () {\n    const { modalInput: { signUp, userId } } = this.props\n    const { name, gaAgree, termsAgree } = this.state\n\n    let that = this\n    let trimmedName = name.trim()\n\n    if (trimmedName === constants.DEFAULT_USER_NAME) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message17'\n              defaultMessage=\"User name cannot be '{DEFAULT_USER_NAME}'\"\n              values={{ DEFAULT_USER_NAME: constants.DEFAULT_USER_NAME }}\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (JSON.stringify(trimmedName).length - 2 > constants.MAX_USER_NAME_SIZE) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message18'\n              defaultMessage='User name cannot exceed {MAX_USER_NAME_SIZE} characters'\n              values={{ MAX_USER_NAME_SIZE: constants.MAX_USER_NAME_SIZE }}\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (isEmpty(trimmedName)) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message19'\n              defaultMessage='User name cannot be empty'\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (!termsAgree) {\n      this.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message37'\n              defaultMessage='Please agree the PTT.ai Terms and Conditions'\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else {\n      googleAnalytics.clearConfig()\n      googleAnalytics.saveConfig(userId, gaAgree)\n      signUp(trimmedName)\n    }\n  }\n\n  openPrivacySetting () {\n    const { modalInput, onModalSwitch, userId } = this.props\n    const { gaAgree, termsAgree } = this.state\n\n    onModalSwitch(constants.PRIVACY_SETTING_MODAL, {\n      firstPopUpInput: modalInput,\n      fromSignInPage: true,\n      termsAgree: termsAgree,\n      gaAgree: gaAgree,\n      userId: userId\n    })\n  }\n\n  onSignIn (nodeId) {\n    const { onModalClose, modalInput: { userPrivateKeyInfo, signIn } } = this.props\n\n    let inputNodeId = nodeId\n    let inputPrivateKey = userPrivateKeyInfo\n\n    let that = this\n\n    let waitingCallBack = () => {\n      that.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message28'\n              defaultMessage='[Wait] Signing...'\n            />)\n        }\n      })\n    }\n\n    let addDeviceCallBackFunc = (response) => {\n      if (response.error) {\n        that.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message3'\n                defaultMessage='[Error] {data}:{nodeId}'\n                values={{ data: response.data, nodeId: response.nodeId }}\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n      } else {\n        that.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message28'\n                defaultMessage='[Wait] Signing...'\n              />)\n          }\n        })\n      }\n    }\n\n    let signedInCallBackFunc = (userPrivateKeyInfo, deviceJoinKeyInfo) => {\n      that.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message27'\n              defaultMessage='[Success] Signed In'\n            />),\n          onConfirm: () => {\n            that.setState({ showAlert: false })\n            that.onScannerClose()\n            onModalClose()\n          }\n        }\n      })\n    }\n\n    if (!inputNodeId || !inputNodeId.startsWith('pnode://')) {\n      that.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message5'\n              defaultMessage='Node id empty or invalid'\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (!inputPrivateKey) {\n      that.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message6'\n              defaultMessage='Private key empty or invalid'\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else {\n      signIn(inputNodeId, inputPrivateKey, addDeviceCallBackFunc, waitingCallBack, signedInCallBackFunc)\n    }\n  }\n\n  render () {\n    const { intl, onModalClose, modal: { currentModal } } = this.props\n    const { name, showAlert, alertData, submodalType, nodeId, gaAgree, termsAgree } = this.state\n\n    const placeholder = intl.formatMessage({ id: 'first-popup-modal.placeholder' })\n    const placeholder2 = intl.formatMessage({ id: 'sign-in-scanner-modal.placeholder2' })\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.firstPopupModalStyels}\n          isOpen={currentModal !== null}\n          onRequestClose={null}\n          contentLabel='First Popup Modal'>\n          <div className={styles['root']}>\n            <div className={styles['sign-in']}>\n              <div className={styles['signin-action']}>\n                <div className={styles['profile-title']}>\n                  <FormattedMessage\n                    id='first-popup-modal.title'\n                    defaultMessage='Sign in with existing account'\n                  />\n                </div>\n                <button className={styles['signin-button']} onClick={() => this.setState({ submodalType: 'Sign-in' })}>\n                  <FormattedMessage\n                    id='first-popup-modal.action3'\n                    defaultMessage='Sign In'\n                  />\n                </button>\n              </div>\n            </div>\n\n            <div className={styles['divider']}>\n              <FormattedMessage\n                id='first-popup-modal.divider'\n                defaultMessage='Or'\n              />\n            </div>\n\n            <div className={styles['sign-up']}>\n              <div className={styles['signup-action']}>\n                <button className={styles['close-button']} hidden onClick={onModalClose}>\n                  <FormattedMessage\n                    id='first-popup-modal.action1'\n                    defaultMessage='Cancel'\n                  />\n                </button>\n                <button className={styles['submit-button']} onClick={() => this.setState({ submodalType: 'Sign-up' })}>\n                  <FormattedMessage\n                    id='first-popup-modal.action4'\n                    defaultMessage='Sign up as new user'\n                  />\n                </button>\n              </div>\n            </div>\n\n            <Modal\n              overlayClassName='SignUpModal__Overlay'\n              style={modalConstants.signupModalStyels}\n              isOpen={submodalType === 'Sign-up'}\n              onRequestClose={this.onScannerClose}\n              contentLabel='Sign Up Scanner Modal'>\n              <div className={styles['submodal-signup-container']}>\n                <div className={styles['submodal-signup']}>\n                  <div className={styles['submodal-signup-title']}>\n                    <FormattedMessage\n                      id='first-popup-modal.title2'\n                      defaultMessage='Let others know your name'\n                    />\n                  </div>\n                  <div className={styles['submodal-signup-profile-input']}>\n                    <input\n                      placeholder={placeholder}\n                      autoFocus\n                      name='title-input'\n                      className={styles['profile-input-name']}\n                      value={name}\n                      onKeyDown={this.onKeydown}\n                      onChange={this.onNameChange} />\n                  </div>\n                  <div className={styles['submodal-signup-action-section']}>\n                    <button className={styles['submodal-signup-confirm']} onClick={() => this.onSubmitSignUp()}>\n                      <FormattedMessage\n                        id='alert-component.action2'\n                        defaultMessage='Confirm'\n                      />\n                    </button>\n                    <button hidden className={styles['submodal-signup-cancel']} onClick={() => this.setState({ submodalType: null })}>\n                      <FormattedMessage\n                        id='first-popup-modal.action1'\n                        defaultMessage='Cancel'\n                      />\n                    </button>\n                  </div>\n                  <div className={styles['submodal-ga-agreement']}>\n                    <div className={styles['submodal-ga-agreement-item']}>\n                      <label className={styles['submodal-checkmark-container']}>\n                        <FormattedMessage\n                          id='first-popup-modal.title3'\n                          defaultMessage='Let us collect your data'\n                        />\n                        <input type='radio'\n                          name='terms-agreemenet'\n                          checked={termsAgree}\n                          onClick={() => { this.setState({ termsAgree: !termsAgree }) }}\n                        />\n                        <span className={styles['checkmark']} />\n                      </label>\n                    </div>\n                    <div className={styles['submodal-ga-agreement-item']}>\n                      <label className={styles['submodal-checkmark-container']}>\n                        <FormattedMessage\n                          id='first-popup-modal.title4'\n                          defaultMessage=\"Agree to user tracking for improving Ptt.ai's service\"\n                        />\n                        <input type='radio'\n                          name='ga-agreemenet'\n                          checked={gaAgree}\n                          onClick={() => { this.setState({ gaAgree: !gaAgree }) }}\n                        />\n                        <span className={styles['checkmark']} />\n                      </label>\n                    </div>\n                    <div className={styles['submodal-ga-agreement-see-more']} onClick={() => this.openPrivacySetting()}>\n                      了解更多\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Modal>\n\n            <Modal\n              overlayClassName='SignInModal__Overlay'\n              style={modalConstants.scannerModalStyels}\n              isOpen={submodalType === 'Sign-in'}\n              onRequestClose={this.onScannerClose}\n              contentLabel='Sign In Scanner Modal'>\n              <div className={styles['submodal-signin-container']}>\n                <div className={styles['submodal-signin']}>\n                  <div className={styles['submodal-signin-title']}>\n                    <FormattedMessage\n                      id='first-popup-modal.title'\n                      defaultMessage='Sign in with existing account'\n                    />\n                  </div>\n                  <QRScannerSubmodal onScanned={this.onScanned} />\n                  <div className={styles['submodal-signin-node-id']}>\n                    <textarea\n                      placeholder={placeholder2}\n                      autoFocus\n                      name='title-input'\n                      value={nodeId}\n                      onChange={this.onNodeIdChange} />\n                  </div>\n                  <div className={styles['submodal-signin-action-section']}>\n                    <button className={styles['submodal-signin-submit']} onClick={() => this.onSignIn(nodeId)}>\n                      <FormattedMessage\n                        id='first-popup-modal.action2'\n                        defaultMessage='Confirm'\n                      />\n                    </button>\n                    <button className={styles['submodal-signin-cancel']} onClick={() => this.setState({ submodalType: null })}>\n                      <FormattedMessage\n                        id='first-popup-modal.action1'\n                        defaultMessage='Cancel'\n                      />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </Modal>\n\n          </div>\n        </Modal>\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doFirstPopupModal: bindActionCreators(doFirstPopupModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(FirstPopupModal))\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'PRIVACY_SETTING_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Privacy_Setting_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Modal from 'react-modal'\nimport { injectIntl,\n  FormattedMessage } from 'react-intl'\n\nimport AlertComponent from '../components/AlertComponent'\n\nimport * as constants from '../constants/Constants'\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as doPrivacySettingModal from '../reducers/PrivacySettingModal'\n\nimport googleAnalytics from '../utils/googleAnalytics'\n\nimport styles from './PrivacySettingModal.module.css'\n\nclass PrivacySettingModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      showAlert: false,\n      fromSignInPage: props.modalInput && props.modalInput.fromSignInPage,\n      termsAgree: props.modalInput && typeof props.modalInput.fromSignInPage === 'boolean' && props.modalInput.fromSignInPage ? props.modalInput.termsAgree : true,\n      gaAgree: (props.modalInput && props.modalInput.gaAgree !== undefined) ? props.modalInput.gaAgree : googleAnalytics.getConfig().track === 'true',\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onCancel = this.onCancel.bind(this)\n  }\n\n  onSubmit () {\n    const { modalInput: { userId, firstPopUpInput }, onModalClose, onModalSwitch } = this.props\n    const { fromSignInPage, gaAgree, termsAgree } = this.state\n\n    if (fromSignInPage) {\n      onModalSwitch(constants.FIRST_POPUP_MODAL, {\n        ...firstPopUpInput,\n        gaAgree: gaAgree,\n        termsAgree: termsAgree\n      })\n    } else {\n      googleAnalytics.clearConfig()\n      googleAnalytics.saveConfig(userId, gaAgree)\n\n      onModalClose()\n    }\n  }\n\n  onCancel () {\n    const { onModalClose, onModalSwitch, modalInput: { firstPopUpInput } } = this.props\n    const { fromSignInPage } = this.state\n\n    if (fromSignInPage) {\n      onModalSwitch(constants.FIRST_POPUP_MODAL, firstPopUpInput)\n    } else {\n      onModalClose()\n    }\n  }\n\n  render () {\n    const { modal: { currentModal } } = this.props\n    const { showAlert, alertData, fromSignInPage, termsAgree, gaAgree } = this.state\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.privacySettingModalStyels}\n          isOpen={currentModal !== null}\n          onRequestClose={null}\n          contentLabel='Privacy Setting Modal'>\n          <div className={styles['root']}>\n            <div className={styles['ga-bar']}>\n              <div className={styles['prev-button']} onClick={() => this.onCancel()}>\n                <div className={styles['prev-button-icon']} />\n              </div>\n              <div className={styles['ga-title']}>\n                <FormattedMessage\n                  id='privacy-modal.title1'\n                  defaultMessage='Terms and Conditions & Google Analytics Tracking'\n                />\n              </div>\n              <div className={styles['null-space']} />\n            </div>\n            <div className={styles['ga-agreement']}>\n\n              <div className={styles['ga-agreement-content']}>\n                <div className={styles['ga-agreement-paragraph']}>\n                  <FormattedMessage\n                    id='privacy-modal.content1'\n                    defaultMessage=''\n                  />\n                </div>\n                <div className={styles['ga-agreement-paragraph']}>\n                  <FormattedMessage\n                    id='privacy-modal.content2'\n                    defaultMessage=''\n                  />\n                </div>\n                <div className={styles['ga-agreement-paragraph']}>\n                  <FormattedMessage\n                    id='privacy-modal.content3'\n                    defaultMessage=''\n                  />\n                  &nbsp;\n                  <a href='https://ptt.ai/terms-of-use/' target='_blank' rel='noopener noreferrer'>https://ptt.ai/terms-of-use/</a>\n                </div>\n                <div className={styles['ga-agreement-paragraph']}>\n                  <FormattedMessage\n                    id='privacy-modal.content4'\n                    defaultMessage=''\n                  />\n                </div>\n              </div>\n\n              <div className={fromSignInPage ? styles['ga-agreement-item'] : styles['ga-agreement-item-disabled']}>\n                <label className={styles['checkmark-container']}>\n                  <FormattedMessage\n                    id='first-popup-modal.title3'\n                    defaultMessage='Let us collect your data'\n                  />\n                  <input type='radio'\n                    name='terms-agreemenet'\n                    disabled={!fromSignInPage}\n                    checked={termsAgree}\n                    onClick={() => { this.setState({ termsAgree: !termsAgree }) }}\n                  />\n                  <span className={styles['checkmark']} />\n                </label>\n              </div>\n\n              <div className={styles['ga-agreement-item']}>\n                <label className={styles['checkmark-container']}>\n                  <FormattedMessage\n                    id='first-popup-modal.title4'\n                    defaultMessage=\"Agree to user tracking for improving Ptt.ai's service\"\n                  />\n                  <input type='radio'\n                    checked={gaAgree}\n                    onClick={() => this.setState({ gaAgree: !gaAgree })} />\n                  <span className={styles['checkmark']} />\n                </label>\n              </div>\n\n              <div className={styles['action-section']}>\n                <button className={styles['confirm']} onClick={() => this.onSubmit()}>\n                  <FormattedMessage\n                    id='alert-component.action2'\n                    defaultMessage='Confirm'\n                  />\n                </button>\n                <button hidden className={styles['cancel']} onClick={() => this.onCancel()}>\n                  <FormattedMessage\n                    id='first-popup-modal.action1'\n                    defaultMessage='Cancel'\n                  />\n                </button>\n              </div>\n\n            </div>\n          </div>\n        </Modal>\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doPrivacySettingModal: bindActionCreators(doPrivacySettingModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(PrivacySettingModal))\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'MULTI_DEVICE_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Multi_Device_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { FormattedMessage } from 'react-intl'\nimport Modal from 'react-modal'\nimport platform from 'platform'\n\nimport { epoch2FullTimeFormat } from '../utils/utilDatetime'\n\nimport * as doMultiDeviceModal from '../reducers/MultiDeviceModal'\nimport * as constants from '../constants/Constants'\nimport * as modalConstants from '../constants/ModalConstants'\n\nimport styles from './MultiDeviceModal.module.css'\n\nclass MultiDeviceModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      name: '',\n      menuIsOpen: false,\n      openCurrent: false\n    }\n    this.onNameChange = this.onNameChange.bind(this)\n    this.onAddButtonClicked = this.onAddButtonClicked.bind(this)\n    this.onMenuClose = this.onMenuClose.bind(this)\n  }\n\n  onNameChange (e) {\n    this.setState({ name: e.target.value })\n  }\n\n  onAddButtonClicked (e) {\n    this.setState({ menuIsOpen: true })\n  }\n\n  onMenuClose (e) {\n    this.setState({ menuIsOpen: false })\n  }\n\n  render () {\n    const { modalInput: { device, keyInfo }, onModalClose, onModalSwitch, modal: { currentModal } } = this.props\n    const { menuIsOpen, openCurrent } = this.state\n\n    let openAddDevice = function () {\n      onModalSwitch(constants.ADD_DEVICE_MODAL, { device: device, keyInfo: keyInfo })\n    }\n\n    let openAddDeviceScanner = function () {\n      onModalSwitch(constants.ADD_DEVICE_SCANNER_MODAL, { device: device, keyInfo: keyInfo })\n    }\n\n    return (\n      <div>\n        <Modal\n          overlayClassName='MultiDeviceModal__Overlay'\n          style={modalConstants.multiDeviceModalStyels}\n          isOpen={currentModal !== null}\n          onRequestClose={null}\n          contentLabel='Multi Device Modal'>\n          <div className={styles['root']}>\n            <div className={styles['top-bar']}>\n              <div className={styles['prev-button']}>\n                <div className={styles['prev-button-icon']} onClick={onModalClose} />\n              </div>\n              <div className={styles['title']}>\n                <FormattedMessage\n                  id='multi-device-modal.title'\n                  defaultMessage='Devices Setting'\n                />\n              </div>\n              <div className={styles['null-space']} onClick={() => this.setState({ openCurrent: !openCurrent })} />\n            </div>\n            <div className={styles['device-list']}>\n              <div hidden={!openCurrent} className={styles['device-item']} key={-1}>\n                <div className={styles['item-index']}>\n                  <div className={styles['op-value-index']}>[Debug] Platform</div>\n                </div>\n                <div className={styles['item']}>\n                  <div className={styles['op-title']}>Name</div>\n                  <div className={styles['op-value']}>{platform.name}</div>\n                </div>\n                <div className={styles['item']}>\n                  <div className={styles['op-title']}>Version</div>\n                  <div className={styles['op-value']}>{platform.version}</div>\n                </div>\n                <div className={styles['item']}>\n                  <div className={styles['op-title']}>Manufacturer</div>\n                  <div className={styles['op-value']}>{platform.manufacturer}</div>\n                </div>\n                <div className={styles['item']}>\n                  <div className={styles['op-title']}>Layout</div>\n                  <div className={styles['op-value']}>{platform.layout}</div>\n                </div>\n                <div className={styles['item']}>\n                  <div className={styles['op-title']}>OS</div>\n                  <div title={platform.os} className={styles['op-value']}>{platform.os.toString()}</div>\n                </div>\n                <div className={styles['item']}>\n                  <div className={styles['op-title']}>Description</div>\n                  <div className={styles['op-value']}>{platform.description}</div>\n                </div>\n              </div>\n\n              {\n                device.data.map((item, index) => {\n                  return (\n                    <div className={styles['device-item']} key={index}>\n                      <div className={styles['item-index']}>\n                        <div className={styles['op-value-index']}>{(index + 1) + '. ' + item.NodeName}</div>\n                      </div>\n                      <div className={styles['item']}>\n                        <div className={styles['op-title']}>Node ID</div>\n                        <div className={styles['op-value']}>{item.NodeID}</div>\n                      </div>\n                      <div className={styles['item']}>\n                        <div className={styles['op-title']}>Node Type</div>\n                        <div className={styles['op-value']}>{constants.NODE_TYPE_ARRAY[item.NodeType]}</div>\n                      </div>\n                      <div className={styles['item']}>\n                        <div className={styles['op-title']}>Status</div>\n                        <div className={styles['op-value']}>{constants.STATUS_ARRAY[item.Status]}</div>\n                      </div>\n                      <div className={styles['item']}>\n                        <div className={styles['op-title']}>User ID</div>\n                        <div className={styles['op-value']}>{item.userID}</div>\n                      </div>\n                      <div className={styles['item']}>\n                        <div className={styles['op-title']}>\n                          <FormattedMessage\n                            id='multi-device-modal.device-content1'\n                            defaultMessage='Start Date'\n                          />\n                        </div>\n                        <div title={epoch2FullTimeFormat(item.CreateTime.T)} className={styles['op-value']}>{epoch2FullTimeFormat(item.CreateTime.T)}</div>\n                      </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n            <div hidden className={styles['add-icon-container']}>\n              <div className={styles['add-icon-subcontainer']}>\n                <div className={styles['add-icon']} onClick={openAddDevice/* this.onAddButtonClicked */} />\n              </div>\n            </div>\n            <Modal\n              overlayClassName='MultiDeviceMenuModal__Overlay'\n              style={modalConstants.boardActionModalStyels}\n              isOpen={menuIsOpen}\n              onRequestClose={this.onMenuClose}\n              contentLabel='Multi Device Menu Modal'>\n              <div className={styles['submodal-action-section']}>\n                <button className={styles['submodal-join-board-button']} onClick={openAddDevice}>\n                  <FormattedMessage\n                    id='multi-device-modal.add-menu1'\n                    defaultMessage='Add Device'\n                  />\n                </button>\n                <button className={styles['submodal-create-board-button']} onClick={openAddDeviceScanner}>\n                  <FormattedMessage\n                    id='multi-device-modal.add-menu2'\n                    defaultMessage='Sync Device'\n                  />\n                </button>\n                <button className={styles['submodal-close-button']} onClick={this.onMenuClose}>\n                  <FormattedMessage\n                    id='multi-device-modal.add-menu3'\n                    defaultMessage='Cancel'\n                  />\n                </button>\n              </div>\n            </Modal>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doMultiDeviceModal: bindActionCreators(doMultiDeviceModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiDeviceModal)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'ADD_FRIEND_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Add_Friend_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Modal from 'react-modal'\nimport { FormattedMessage,\n  injectIntl } from 'react-intl'\nimport QRCode from 'qrcode.react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport QRScannerSubmodal from '../components/QRScannerSubmodal'\n\nimport * as doAddFriendModal from '../reducers/AddFriendModal'\n\nimport * as constants from '../constants/Constants'\nimport * as modalConstants from '../constants/ModalConstants'\nimport { isMobile } from '../utils/utils'\n\nimport styles from './AddFriendModal.module.css'\n\nclass AddFriendModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.refreshKeyInfoInterval = null\n    this.state = {\n      friendReqId: '',\n      currentTab: 'display',\n      qrCodeCopied: false\n    }\n    this.onFriendIdChange = this.onFriendIdChange.bind(this)\n    this.onScanned = this.onScanned.bind(this)\n    this.onTabChange = this.onTabChange.bind(this)\n  }\n\n  onTabChange (e) {\n    const { id } = e && e.currentTarget && e.currentTarget.dataset\n    if (!id) return\n\n    this.setState({\n      currentTab: id\n    })\n  }\n\n  onScanned (data) {\n    if (data) {\n      const { modalInput: { friend } } = this.props\n\n      this.setState({\n        friendReqId: data\n      })\n      friend.addFriendAction(data)\n    }\n  }\n\n  onFriendIdChange (e) {\n    this.setState({ friendReqId: e.target.value })\n  }\n\n  componentWillMount () {\n    const { modalInput: { friend } } = this.props\n\n    this.refreshKeyInfoInterval = setInterval(() => friend.refreshKeyInfo(), constants.REFRESH_INTERVAL)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.refreshKeyInfoInterval)\n  }\n\n  render () {\n    const { intl,\n      onModalClose,\n      modal: { currentModal },\n      modalInput: { friend } } = this.props\n    const { friendReqId, currentTab, qrCodeCopied } = this.state\n\n    // const expTimeVal = expiredFormat(friend.data.friendJoinKey.UpdateTS.T, friend.data.friendJoinKey.expirePeriod)\n\n    return (\n      <div>\n        <Modal\n          overlayClassName='SignInModal__Overlay'\n          style={modalConstants.scannerModalStyels}\n          isOpen={currentModal !== null}\n          onRequestClose={null}\n          contentLabel='Add Friend Scanner Modal'>\n          <div className={styles['tab-pages-container']}>\n            <div className={styles['tab-pages']}>\n              <div className={styles['tab-pages-title']}>\n                <FormattedMessage\n                  id='add-friend-modal.title'\n                  defaultMessage='Add friend'\n                />\n              </div>\n              {\n                (() => {\n                  let displayClasses = styles['switcher-item']\n                  let scannerClasses = styles['switcher-item']\n                  const activeTabClass = styles['active-switcher-item']\n\n                  if (currentTab === 'display') {\n                    displayClasses += ' ' + activeTabClass\n                  } else {\n                    scannerClasses += ' ' + activeTabClass\n                  }\n\n                  return <div className={styles['switcher-item-container']}>\n                    <div className={displayClasses} data-id='display' onClick={this.onTabChange}>\n                      <FormattedMessage\n                        id='add-friend-modal.show-qrcode'\n                        defaultMessage='Show QR Code'\n                      />\n                    </div>\n\n                    <div className={scannerClasses} data-id='scanner' onClick={this.onTabChange}>\n                      <FormattedMessage\n                        id='add-friend-modal.scan-qrcide'\n                        defaultMessage='Scan QR Code'\n                      />\n                    </div>\n                  </div>\n                })()\n              }\n              {\n                currentTab === 'scanner'\n                  ? <ScannerPage\n                    friendReqId={friendReqId}\n                    intl={intl}\n                    friend={friend}\n                    onModalClose={onModalClose}\n                    onScanned={this.onScanned}\n                    onFriendIdChange={this.onFriendIdChange}\n                  />\n                  : <QRCodePage\n                    friend={friend}\n                    qrCodeCopied={qrCodeCopied}\n                    onModalClose={onModalClose}\n                    onCopy={() => this.setState({ qrCodeCopied: true })}\n                  />\n              }\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst QRCodePage = props => {\n  const { friend, qrCodeCopied, onModalClose, onCopy } = props\n  const addFriendUrl = friend &&\n                        friend.data &&\n                        friend.data.friendJoinKey &&\n                        friend.data.friendJoinKey.URL\n  return (\n    <div className={styles['tab-page-container']}>\n      <div className={styles['qr-code-container']}>\n        <QRCode value={addFriendUrl} size={250} />\n      </div>\n      <div className={styles['tab-page']}>\n        <CopyToClipboard text={addFriendUrl} onCopy={onCopy}>\n          <button className={styles['copy-button']} onClick={null}>\n            {\n              qrCodeCopied ? (\n                <FormattedMessage\n                  id='add-device-modal.copy-node-id-2'\n                  defaultMessage='Copied'\n                />\n              ) : (\n                <FormattedMessage\n                  id='add-friend-modal.copy-my-id-1'\n                  defaultMessage='Copy your ID'\n                />\n              )\n            }\n          </button>\n        </CopyToClipboard>\n        <button className={styles['tab-page-cancel']} onClick={onModalClose}>\n          <FormattedMessage\n            id='first-popup-modal.action1'\n            defaultMessage='Cancel'\n          />\n        </button>\n      </div>\n    </div>\n  )\n}\n\nconst ScannerPage = props => {\n  const { friend, friendReqId, intl, onModalClose, onFriendIdChange, onScanned } = props\n\n  const placeholder = intl.formatMessage({ id: 'add-friend-modal.placeholder' })\n  const onSubmitAndClose = () => friend.addFriendAction(friendReqId)\n\n  return (\n    <div className={styles['tab-page-container']}>\n      <QRScannerSubmodal onScanned={onScanned} />\n      <div className={styles['tab-page-node-id']}>\n        <textarea\n          placeholder={placeholder}\n          autoFocus={!isMobile()}\n          name='title-input'\n          value={friendReqId}\n          onChange={onFriendIdChange} />\n      </div>\n      <div className={styles['tab-page']}>\n        <button className={styles['tab-page-submit']} onClick={onSubmitAndClose}>\n          <FormattedMessage\n            id='add-friend-modal.scan-code-action'\n            defaultMessage='Add'\n          />\n        </button>\n        <button className={styles['tab-page-cancel']} onClick={onModalClose}>\n          <FormattedMessage\n            id='first-popup-modal.action1'\n            defaultMessage='Cancel'\n          />\n        </button>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doAddFriendModal: bindActionCreators(doAddFriendModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(AddFriendModal))\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'ADD_DEVICE_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Add_Device_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Modal from 'react-modal'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport QRCode from 'qrcode.react'\nimport { FormattedMessage } from 'react-intl'\n\nimport * as doAddDeviceModal from '../reducers/AddDeviceModal'\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as constants from '../constants/Constants'\nimport { expiredFormat } from '../utils/utilDatetime'\n\nimport styles from './AddDeviceModal.module.css'\n\nclass AddDeviceModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.refreshKeyInfoInterval = null\n    this.state = {\n      copied: false\n    }\n  }\n\n  componentWillMount () {\n    const { modalInput: { keyInfo } } = this.props\n\n    this.refreshKeyInfoInterval = setInterval(() => keyInfo.refreshKeyInfo(), constants.REFRESH_INTERVAL)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.refreshKeyInfoInterval)\n  }\n\n  render () {\n    const { modalInput: { device, keyInfo }, onModalSwitch, modal: { currentModal } } = this.props\n    const { copied } = this.state\n\n    let onSwtichToMultiDevices = function () {\n      onModalSwitch(constants.SHOW_DEVICE_INFO, { device: device, keyInfo: keyInfo })\n    }\n\n    const expTimeVal = expiredFormat(keyInfo.data.deviceJoinKey.UpdateTS.T, keyInfo.data.deviceJoinKey.expirePeriod)\n\n    return (\n      <div>\n        <Modal\n          overlayClassName='AddDeviceModal__Overlay'\n          style={modalConstants.addDeviceModalStyels}\n          isOpen={currentModal !== null}\n          onRequestClose={onSwtichToMultiDevices}\n          contentLabel='Add Device Modal'>\n          <div className={styles['root']}>\n            <div className={styles['top-bar']}>\n              <div className={styles['prev-button']} onClick={onSwtichToMultiDevices} />\n              <div className={styles['title']}>\n                <FormattedMessage\n                  id='add-device-modal.title'\n                  defaultMessage='Add Device'\n                />\n              </div>\n              <div className={styles['null-space']} />\n            </div>\n            <div className={styles['content']}>\n              <div hidden className={styles['content-title']}>Node ID</div>\n              <div className={styles['qr-code']}>\n                <QRCode value={keyInfo.data.deviceJoinKey.URL} size={250} />\n              </div>\n              <div className={styles['node-id']}>\n                <div className={styles['expiration']}>\n                  <FormattedMessage\n                    id='add-device-modal.expiration'\n                    defaultMessage='{expTimeVal}'\n                    values={{ expTimeVal: expTimeVal }}\n                  />\n                </div>\n                <CopyToClipboard text={keyInfo.data.deviceJoinKey.URL}\n                  onCopy={() => this.setState({ copied: true })}>\n                  <button className={styles['copy-button']}>\n                    {\n                      copied ? (\n                        <FormattedMessage\n                          id='add-device-modal.copy-node-id-2'\n                          defaultMessage='Copied'\n                        />\n                      ) : (\n                        <FormattedMessage\n                          id='add-device-modal.copy-node-id-1'\n                          defaultMessage='Copy Node ID'\n                        />\n                      )\n                    }\n                  </button>\n                </CopyToClipboard>\n                <div className={styles['text-value']}>\n                  <input\n                    readOnly\n                    value={keyInfo.data.deviceJoinKey.URL}\n                  />\n                </div>\n                <div className={styles['helper-text']}>\n                  <FormattedMessage\n                    id='add-device-modal.copy-node-id-3'\n                    defaultMessage='Scan QR Code or send the above Node ID'\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doAddDeviceModal: bindActionCreators(doAddDeviceModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddDeviceModal)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'ADD_DEVICE_SCANNER_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Add_Device_Scanner_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Slider from 'react-slick'\nimport Modal from 'react-modal'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { FormattedMessage,\n  injectIntl } from 'react-intl'\n\nimport QRScannerSubmodal from '../components/QRScannerSubmodal'\nimport AlertComponent from '../components/AlertComponent'\nimport * as doAddDeviceScannerModal from '../reducers/AddDeviceScannerModal'\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as constants from '../constants/Constants'\n\nimport styles from './AddDeviceScannerModal.module.css'\n\nclass AddDeviceScannerModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      inputNodeId: '',\n      inputPrivateKey: '',\n      keyCopied: false,\n      showAlert: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n\n    this.onNodeIdChange = this.onNodeIdChange.bind(this)\n    this.onPKeyChange = this.onPKeyChange.bind(this)\n    this.onNext = this.onNext.bind(this)\n    this.onComplete = this.onComplete.bind(this)\n    this.onScanned = this.onScanned.bind(this)\n    this.onScannerClose = this.onScannerClose.bind(this)\n  }\n\n  onScanned (data) {\n    if (data) {\n      this.setState({\n        inputNodeId: data\n      })\n      this.onNext()\n    }\n  }\n\n  onScannerClose () {\n    const { modalInput, onModalSwitch } = this.props\n\n    onModalSwitch(constants.SHOW_DEVICE_INFO, modalInput)\n  }\n\n  onNext (e) {\n    this.slider.slickNext()\n  }\n\n  onNodeIdChange (e) {\n    this.setState({ inputNodeId: e.target.value })\n  }\n\n  onPKeyChange (e) {\n    this.setState({ inputPrivateKey: e.target.value })\n  }\n\n  onComplete (e) {\n    const { modalInput: { device } } = this.props\n    const { inputNodeId, inputPrivateKey } = this.state\n\n    let that = this\n    let addDeviceCallBack = (response) => {\n      if (response.error) {\n        that.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message3'\n                defaultMessage='[Error] {data}:{nodeId}'\n                values={{ data: response.data, nodeId: response.nodeId }}\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n      } else {\n        that.setState({\n          showAlert: true,\n          alertData: {\n            message: (\n              <FormattedMessage\n                id='alert.message4'\n                defaultMessage='[Success] Deivce Added'\n              />),\n            onConfirm: () => that.setState({ showAlert: false })\n          }\n        })\n        that.onScannerClose()\n      }\n    }\n\n    if (!inputNodeId || !inputNodeId.startsWith('pnode://')) {\n      that.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message5'\n              defaultMessage='Node id empty or invalid'\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else if (!inputPrivateKey) {\n      that.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message6'\n              defaultMessage='Private key empty or invalid'\n            />),\n          onConfirm: () => that.setState({ showAlert: false })\n        }\n      })\n    } else {\n      device.addDeviceAction(inputNodeId, inputPrivateKey, addDeviceCallBack)\n    }\n  }\n\n  render () {\n    const { intl, modalInput: { keyInfo }, modal: { currentModal } } = this.props\n    const { showAlert, alertData, inputNodeId, inputPrivateKey, keyCopied } = this.state\n\n    const placeholder1 = intl.formatMessage({ id: 'add-device-scanner-modal.placeholder1' })\n    const placeholder2 = intl.formatMessage({ id: 'add-device-scanner-modal.placeholder2' })\n\n    const settings = {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    }\n\n    return (\n      <div>\n        <Modal\n          overlayClassName='AddDeviceScannerModal__Overlay'\n          style={modalConstants.scannerModalStyels}\n          isOpen={currentModal !== null}\n          onRequestClose={this.onScannerClose}\n          contentLabel='Add Device Scanner Modal'>\n          <div className={styles['root']}>\n            <div className={styles['top-bar']}>\n              <div className={styles['prev-button']} onClick={this.onScannerClose} />\n              <div className={styles['title']}>\n                <FormattedMessage\n                  id='add-device-scanner-modal.title'\n                  defaultMessage='Sync with Main Device'\n                />\n              </div>\n              <div className={styles['null-space']} />\n            </div>\n            <div className={styles['content']}>\n              <div className={styles['slide-list']}>\n                <Slider ref={slider => (this.slider = slider)} {...settings} initialSlide={1} rtl arrows={false}>\n                  <div className={styles['slide-item']}>\n                    <div className={styles['container']}>\n                      <div className={styles['p-key']}>\n                        <CopyToClipboard text={keyInfo.data.userPrivateKey}\n                          onCopy={() => this.setState({ keyCopied: true })}>\n                          <button className={styles['copy-button']}>\n                            {\n                              keyCopied ? (\n                                <FormattedMessage\n                                  id='add-device-scanner-modal.copy-device-id-2'\n                                  defaultMessage='Copied'\n                                />\n                              ) : (\n                                <FormattedMessage\n                                  id='add-device-scanner-modal.copy-device-id-1'\n                                  defaultMessage='Copy Private Key'\n                                />\n                              )\n                            }\n                          </button>\n                        </CopyToClipboard>\n                        <div className={styles['text-value']}>\n                          <input\n                            readOnly\n                            value={keyInfo.data.userPrivateKey} />\n                        </div>\n                        <div className={styles['helper-text']}>\n                          <FormattedMessage\n                            id='add-device-scanner-modal.copy-device-id-3'\n                            defaultMessage='Copy the above Private key and paste below'\n                          />\n                        </div>\n                        <div className={styles['paste-area-pkey']}>\n                          <textarea\n                            placeholder={placeholder1}\n                            autoFocus\n                            name='title-input'\n                            value={inputPrivateKey}\n                            onChange={this.onPKeyChange} />\n                        </div>\n                        <div className={styles['action-section']}>\n                          <button className={styles['submit-button']} onClick={this.onComplete}>\n                            <FormattedMessage\n                              id='add-device-scanner-modal.copy-device-id-action1'\n                              defaultMessage='Start to sync'\n                            />\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className={styles['slide-item']}>\n                    <div className={styles['container']}>\n                      <QRScannerSubmodal onScanned={this.onScanned} />\n                      <div className={styles['paste-area-node-id']}>\n                        <textarea\n                          placeholder={placeholder2}\n                          autoFocus\n                          name='title-input'\n                          value={inputNodeId}\n                          onChange={this.onNodeIdChange} />\n                      </div>\n                      <div className={styles['action-section']}>\n                        <button className={styles['submit-button']} onClick={this.onNext}>\n                          <FormattedMessage\n                            id='add-device-scanner-modal.copy-device-id-action2'\n                            defaultMessage='Next'\n                          />\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </Slider>\n              </div>\n            </div>\n          </div>\n        </Modal>\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doAddDeviceScannerModal: bindActionCreators(doAddDeviceScannerModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(AddDeviceScannerModal))\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'BOARD_ACTION_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Board_Action_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { FormattedMessage } from 'react-intl'\nimport Modal from 'react-modal'\n\nimport * as doBoardActionModal from '../reducers/BoardActionModal'\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as constants from '../constants/Constants'\n\nimport styles from './BoardActionModal.module.css'\n\nclass BoardActionModal extends PureComponent {\n  render () {\n    const { modalInput, onModalClose, onModalSwitch, modal: { currentModal } } = this.props\n\n    let onSwitchAndClose = function (modal) {\n      onModalSwitch(modal, modalInput)\n    }\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.boardActionModalStyels}\n          isOpen={currentModal !== null}\n          onRequestClose={onModalClose}\n          contentLabel='Baord Action Modal'>\n          <div className={styles['root']}>\n            <div className={styles['action-section']}>\n              <button className={styles['join-board-button']} onClick={() => onSwitchAndClose(constants.ADD_KNOWN_BOARD_MODAL)}>\n                <FormattedMessage\n                  id='board-action-modal.action1'\n                  defaultMessage='Join board'\n                />\n              </button>\n              <button className={styles['create-board-button']} onClick={() => onSwitchAndClose(constants.CREATE_BOARD_MODAL)}>\n                <FormattedMessage\n                  id='board-action-modal.action2'\n                  defaultMessage='Create board'\n                />\n              </button>\n              <button className={styles['close-button']} onClick={onModalClose}>\n                <FormattedMessage\n                  id='board-action-modal.action3'\n                  defaultMessage='Cancel'\n                />\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doBoardActionModal: bindActionCreators(doBoardActionModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardActionModal)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'SETTING_MENU_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Setting_Menu_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { FormattedMessage } from 'react-intl'\nimport Modal from 'react-modal'\n\nimport * as doSettingMenuModal from '../reducers/SettingMenuModal'\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as constants from '../constants/Constants'\n\nimport styles from './SettingMenuModal.module.css'\n\nclass SettingMenuModal extends PureComponent {\n  render () {\n    const { modalInput, onModalClose, onModalSwitch, modal: { currentModal } } = this.props\n\n    let onSwitchAndClose = function (modal) {\n      onModalSwitch(modal, modalInput)\n    }\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.settingMenuModalStyels}\n          isOpen={currentModal !== null}\n          onRequestClose={onModalClose}\n          contentLabel='Setting Menu Modal'>\n          <div className={styles['root']}>\n            <div className={styles['action-section']}>\n              <button className={styles['menu-button']} onClick={() => onSwitchAndClose(constants.SHOW_DEVICE_INFO)}>\n                <FormattedMessage\n                  id='setting-menu-modal.menu1'\n                  defaultMessage='Devices setting'\n                />\n              </button>\n              <button className={styles['menu-button']} onClick={() => onSwitchAndClose(constants.SHOW_OP_LOG_MODAL)}>\n                <FormattedMessage\n                  id='setting-menu-modal.menu2'\n                  defaultMessage='Op Log'\n                />\n              </button>\n              <button className={styles['menu-button']} onClick={() => onSwitchAndClose(constants.PRIVACY_SETTING_MODAL)}>\n                <FormattedMessage\n                  id='setting-menu-modal.menu4'\n                  defaultMessage='Privacy'\n                />\n              </button>\n              <button className={styles['menu-button']} onClick={onModalClose}>\n                <FormattedMessage\n                  id='setting-menu-modal.menu3'\n                  defaultMessage='Cancel'\n                />\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doSettingMenuModal: bindActionCreators(doSettingMenuModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingMenuModal)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'FRIEND_SETTING_MENU_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Friend_Setting_Menu_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { FormattedMessage } from 'react-intl'\nimport Modal from 'react-modal'\n\nimport AlertComponent from '../components/AlertComponent'\n\nimport * as doFriendSettingMenuModal from '../reducers/FriendSettingMenuModal'\nimport * as modalConstants from '../constants/ModalConstants'\n\nimport styles from './SettingMenuModal.module.css'\n\nclass FriendSettingMenuModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      showAlert: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n\n    this.onDeleteClicked = this.onDeleteClicked.bind(this)\n  }\n\n  onDeleteClicked () {\n    const { onDeleteFriend } = this.props.modalInput\n\n    this.setState({\n      showAlert: true,\n      alertData: {\n        message: (\n          <FormattedMessage\n            id='alert.message1'\n            defaultMessage='Are you sure you want to delete?' />\n        ),\n        onConfirm: () => {\n          onDeleteFriend()\n          this.setState({ showAlert: false })\n        },\n        onClose: () => this.setState({ showAlert: false })\n      }\n    })\n  }\n\n  render () {\n    const { onModalClose, modal: { currentModal } } = this.props\n    const { showAlert, alertData } = this.state\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.settingMenuModalStyels}\n          isOpen={currentModal !== null}\n          onRequestClose={onModalClose}\n          contentLabel='Setting Menu Modal'>\n          <div className={styles['root']}>\n            <div className={styles['action-section']}>\n              <button className={styles['menu-button']} onClick={this.onDeleteClicked}>\n                <FormattedMessage\n                  id='friend-setting-menu-modal.menu0'\n                  defaultMessage='Delete Friend'\n                />\n              </button>\n              <button className={styles['menu-button']} onClick={onModalClose}>\n                <FormattedMessage\n                  id='friend-setting-menu-modal.menu1'\n                  defaultMessage='Cancel'\n                />\n              </button>\n            </div>\n          </div>\n        </Modal>\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doFriendSettingMenuModal: bindActionCreators(doFriendSettingMenuModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendSettingMenuModal)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'BOARD_SETTING_MENU_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Board_Setting_Menu_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { FormattedMessage } from 'react-intl'\nimport Modal from 'react-modal'\n\nimport AlertComponent from '../components/AlertComponent'\n\nimport * as doBoardSettingMenuModal from '../reducers/BoardSettingMenuModal'\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as constants from '../constants/Constants'\n\nimport styles from './SettingMenuModal.module.css'\n\nclass BoardSettingMenuModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      showAlert: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n  }\n\n  render () {\n    const { modalInput, onModalClose, onModalSwitch, modal: { currentModal } } = this.props\n    const { showAlert, alertData } = this.state\n\n    let onSwitchAndClose = function (modal) {\n      onModalSwitch(modal, modalInput)\n    }\n\n    let onDeleteBoard = () => {\n      let that = this\n      that.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message1'\n              defaultMessage='Are you sure you want to delete?'\n            />),\n          onConfirm: () => {\n            modalInput.onDeleteBoard()\n            that.setState({ showAlert: false })\n          },\n          onClose: () => that.setState({ showAlert: false })\n        }\n      })\n    }\n\n    let onLeaveBoard = () => {\n      let that = this\n      that.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message35'\n              defaultMessage='Are you sure you want to leave the Group?'\n            />),\n          onConfirm: () => {\n            modalInput.onLeaveBoard()\n            that.setState({ showAlert: false })\n          },\n          onClose: () => that.setState({ showAlert: false })\n        }\n      })\n    }\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.settingMenuModalStyels}\n          isOpen={currentModal !== null}\n          onRequestClose={onModalClose}\n          contentLabel='Setting Menu Modal'>\n          <div className={styles['root']}>\n            {\n              modalInput.isCreator ? (\n                <div className={styles['action-section']}>\n                  <button className={styles['menu-button']} onClick={() => onSwitchAndClose(constants.INVITE_TO_BOARD_MODAL)}>\n                    <FormattedMessage\n                      id='board-setting-menu-modal.menu0'\n                      defaultMessage='Invite'\n                    />\n                  </button>\n                  <button className={styles['menu-button']} onClick={() => onSwitchAndClose(constants.MANAGE_BOARD_MEMBER_MODAL)}>\n                    <FormattedMessage\n                      id='board-setting-menu-modal.menu1'\n                      defaultMessage='Members'\n                    />\n                  </button>\n                  <button className={styles['menu-button']} onClick={() => onSwitchAndClose(constants.MANAGE_BOARD_MODAL)}>\n                    <FormattedMessage\n                      id='board-setting-menu-modal.menu2'\n                      defaultMessage='Edit Name'\n                    />\n                  </button>\n                  <button className={styles['menu-button']} onClick={onDeleteBoard}>\n                    <FormattedMessage\n                      id='board-setting-menu-modal.menu3'\n                      defaultMessage='Delete Group'\n                    />\n                  </button>\n                  <button className={styles['menu-button']} onClick={onModalClose}>\n                    <FormattedMessage\n                      id='board-setting-menu-modal.menu5'\n                      defaultMessage='Cancel'\n                    />\n                  </button>\n                </div>\n              ) : (\n                <div className={styles['action-section']}>\n                  <button className={styles['menu-button']} onClick={onLeaveBoard}>\n                    <FormattedMessage\n                      id='board-setting-menu-modal.menu4'\n                      defaultMessage='Leave Board'\n                    />\n                  </button>\n                  <button className={styles['menu-button']} onClick={onModalClose}>\n                    <FormattedMessage\n                      id='board-setting-menu-modal.menu5'\n                      defaultMessage='Cancel'\n                    />\n                  </button>\n                </div>\n              )\n            }\n          </div>\n        </Modal>\n        <AlertComponent show={showAlert} alertData={alertData} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doBoardSettingMenuModal: bindActionCreators(doBoardSettingMenuModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardSettingMenuModal)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'ARTICLE_SETTING_MENU_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Article_Setting_Menu_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { FormattedMessage } from 'react-intl'\nimport Modal from 'react-modal'\n\nimport AlertComponent from '../components/AlertComponent'\n\nimport * as doArticleSettingMenuModal from '../reducers/ArticleSettingMenuModal'\nimport * as modalConstants from '../constants/ModalConstants'\n\nimport styles from './SettingMenuModal.module.css'\n\nclass ArticleSettingMenuModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      showAlert: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n  }\n\n  render () {\n    const { modalInput, onModalClose, modal: { currentModal } } = this.props\n    const { showAlert, alertData } = this.state\n\n    let onDeleteArticle = () => {\n      let that = this\n      that.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message1'\n              defaultMessage='Are you sure you want to delete?'\n            />),\n          onConfirm: () => {\n            modalInput.onDeleteArticle()\n            that.setState({ showAlert: false })\n          },\n          onClose: () => that.setState({ showAlert: false })\n        }\n      })\n    }\n\n    let onEditArticle = () => {\n      onModalClose()\n      modalInput.onEditArticle()\n      this.setState({ showAlert: false })\n    }\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.settingMenuModalStyels}\n          isOpen={currentModal !== null}\n          onRequestClose={onModalClose}\n          contentLabel='Setting Menu Modal'>\n          <div className={styles['root']}>\n            {\n              modalInput.isCreator ? (\n                <div className={styles['action-section']}>\n                  <button className={styles['menu-button']} onClick={onEditArticle}>\n                    <FormattedMessage\n                      id='article-setting-menu-modal.menu1'\n                      defaultMessage='Edit Article'\n                    />\n                  </button>\n                  <button className={styles['menu-button']} onClick={onDeleteArticle}>\n                    <FormattedMessage\n                      id='article-setting-menu-modal.menu2'\n                      defaultMessage='Delete Group'\n                    />\n                  </button>\n                  <button className={styles['menu-button']} onClick={onModalClose}>\n                    <FormattedMessage\n                      id='article-setting-menu-modal.menu3'\n                      defaultMessage='Cancel'\n                    />\n                  </button>\n                </div>\n              ) : (\n                null\n              )\n            }\n          </div>\n          <AlertComponent show={showAlert} alertData={alertData} />\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doArticleSettingMenuModal: bindActionCreators(doArticleSettingMenuModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleSettingMenuModal)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'COMMENT_SETTING_MENU_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Comment_Setting_Menu_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { FormattedMessage } from 'react-intl'\nimport Modal from 'react-modal'\n\nimport AlertComponent from '../components/AlertComponent'\n\nimport * as doCommentSettingMenuModal from '../reducers/CommentSettingMenuModal'\nimport * as modalConstants from '../constants/ModalConstants'\n\nimport styles from './SettingMenuModal.module.css'\n\nclass CommentSettingMenuModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      showAlert: false,\n      alertData: {\n        message: '',\n        onClose: null,\n        onConfirm: null\n      }\n    }\n  }\n\n  render () {\n    const { modalInput, onModalClose, modal: { currentModal } } = this.props\n    const { showAlert, alertData } = this.state\n\n    let onDeleteComment = () => {\n      let that = this\n      that.setState({\n        showAlert: true,\n        alertData: {\n          message: (\n            <FormattedMessage\n              id='alert.message1'\n              defaultMessage='Are you sure you want to delete?'\n            />),\n          onConfirm: () => {\n            modalInput.onDeleteComment()\n            onModalClose()\n            that.setState({ showAlert: false })\n          },\n          onClose: () => that.setState({ showAlert: false })\n        }\n      })\n    }\n\n    // let onEditComment = () => {\n    //   modalInput.onEditComment()\n    //   onModalClose()\n    // }\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.settingMenuModalStyels}\n          isOpen={currentModal !== null}\n          onRequestClose={onModalClose}\n          contentLabel='Setting Menu Modal'>\n          <div className={styles['root']}>\n            <div className={styles['action-section']}>\n              {/*\n                <button className={styles['menu-button']} onClick={onEditComment}>\n                  <FormattedMessage\n                    id=\"comment-setting-menu-modal.menu1\"\n                    defaultMessage=\"Edit Comment\"\n                  />\n                </button>\n              */}\n              <button className={styles['menu-button']} onClick={onDeleteComment}>\n                <FormattedMessage\n                  id='comment-setting-menu-modal.menu2'\n                  defaultMessage='Delete Comment'\n                />\n              </button>\n              <button className={styles['menu-button']} onClick={onModalClose}>\n                <FormattedMessage\n                  id='comment-setting-menu-modal.menu3'\n                  defaultMessage='Cancel'\n                />\n              </button>\n            </div>\n          </div>\n          <AlertComponent show={showAlert} alertData={alertData} />\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doCommentSettingMenuModal: bindActionCreators(doCommentSettingMenuModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentSettingMenuModal)\n","import React, { PureComponent } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport styles from './NewsBar.module.css'\n\nclass NewsBar extends PureComponent {\n  render () {\n    const { prevClicked } = this.props\n    return (\n      <div className={styles['root']}>\n        <div className={styles['content']}>\n          <div className={styles['prev-button']} onClick={prevClicked}>\n            <div className={styles['prev-button-icon']} />\n            <div hidden className={styles['prev-button-text']}>\n              <FormattedMessage\n                id='newsbar.prev-button'\n                defaultMessage='Boards'\n              />\n            </div>\n          </div>\n          <div className={styles['board-name']}>\n            <FormattedMessage\n              id='newsbar.title'\n              defaultMessage='Latest posts'\n            />\n          </div>\n          <div className={styles['search']} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NewsBar\n","import React, { PureComponent } from 'react'\nimport { Link } from 'react-router-dom'\nimport { BeatLoader } from 'react-spinners'\nimport { FormattedMessage } from 'react-intl'\n\nimport styles from './NewsListComponent.module.css'\nimport { epoch2FullDate,\n  epoch2ReadFormat } from '../utils/utilDatetime'\nimport { isUnRead,\n  getSummaryTemplate,\n  toJson } from '../utils/utils'\n\nimport * as constants from '../constants/Constants'\n\nclass NewsListComponent extends PureComponent {\n  constructor (props) {\n    super()\n    this.onListItemClick = this.onListItemClick.bind(this)\n  }\n\n  onListItemClick (e, index, itemLink) {\n    const { itemClicked } = this.props\n    itemClicked()\n  }\n\n  render () {\n    const { listData, isLoading } = this.props\n\n    return (\n      <div className={styles['root']}>\n        {\n          (listData.length === 0) ? (\n            <div className={styles['no-content-message']}>\n              <FormattedMessage\n                id='news-list-component.message'\n                defaultMessage='There are no new artilces'\n              />\n            </div>\n          ) : null\n        }\n        {\n          listData.map((item, index) => {\n            if (item.Status !== constants.STATUS_ARRAY.indexOf('StatusAlive')) {\n              return null\n            }\n\n            const itemLink = `/board/${encodeURIComponent(item.BoardID)}/article/${encodeURIComponent(item.ID)}`\n\n            let summary = ''\n            if (item.Summary) {\n              let sData = toJson(item.Summary)\n              summary = getSummaryTemplate(sData, { CreatorName: item.CreatorName, boardId: item.BoardID })\n            }\n\n            return (\n              <div className={styles['list-item']} key={index} onClick={(e) => this.onListItemClick(e, index, itemLink)}>\n                <Link to={itemLink}>\n                  <div className={styles['list-item-author']}>\n                    <div className={styles['list-item-author-pic']}>\n                      <img src={item.CreatorImg || constants.DEFAULT_USER_IMAGE} alt={'Creator Profile'} />\n                    </div>\n                    <div title={item.CreatorName} className={styles['list-item-author-name']}>\n                      {item.CreatorName}\n                    </div>\n                  </div>\n                  <div className={styles['list-item-main']}>\n                    <div className={styles['list-item-header']}>\n                      <div title={item.Title} className={isUnRead(item.CreateTS.T, item.LastSeen.T) ? styles['list-item-title-unread'] : styles['list-item-title']}>\n                        {item.Title}\n                      </div>\n                      <div title={epoch2FullDate(item.UpdateTS.T)} className={styles['list-item-time']}>\n                        {epoch2ReadFormat(item.UpdateTS.T)}\n                      </div>\n                    </div>\n                    <div className={styles['list-item-boardname']}>\n                      <div className={styles['list-item-board-tag']}>\n                        {item.BoardName}\n                      </div>\n                    </div>\n                    <div className={styles['list-item-content']}>\n                      {\n                        summary ? (\n                          <div dangerouslySetInnerHTML={{ __html: summary }} />\n                        ) : (\n                          <FormattedMessage id='news-list-component.empty' defaultMessage='(No content)' />\n                        )\n                      }\n                    </div>\n                  </div>\n                </Link>\n              </div>\n            )\n          })\n        }\n        <div className={styles['spinner-item']}>\n          <BeatLoader color={'#aaa'} size={8} loading={isLoading} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NewsListComponent\n","import React, { PureComponent } from 'react'\n\nimport styles from './NewsComponent.module.css'\nimport NewsBar from '../components/NewsBar'\nimport NewsListComponent from '../components/NewsListComponent'\n\nclass NewsComponent extends PureComponent {\n  render () {\n    const { articleList, isLoading, itemClicked, prevClicked } = this.props\n\n    return (\n      <div className={styles['root']}>\n        <NewsBar\n          prevClicked={prevClicked} />\n        <NewsListComponent\n          itemClicked={itemClicked}\n          listData={articleList}\n          isLoading={isLoading} />\n      </div>\n    )\n  }\n}\n\nexport default NewsComponent\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport { myDuck as appDuck } from './App'\n\nexport const myClass = 'LATEST_PAGE_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Latest_Page_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, query) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Modal from 'react-modal'\n\nimport NewsComponent from '../components/NewsComponent'\nimport * as modalConstants from '../constants/ModalConstants'\nimport * as doLatestPageModal from '../reducers/LatestPageModal'\n\nimport styles from './LatestPageModal.module.css'\n\nclass LatestPageModal extends PureComponent {\n  render () {\n    const { modalInput: { articleList, isLoading, itemClicked, prevClicked },\n      onModalClose,\n      modal: { currentModal } } = this.props\n\n    return (\n      <div>\n        <Modal\n          overlayClassName={styles['overlay']}\n          style={modalConstants.latestPageModalStyles}\n          isOpen={currentModal !== null}\n          onRequestClose={onModalClose}\n          contentLabel='Latest Page Modal'>\n          <div className={styles['root']}>\n            <NewsComponent\n              articleList={articleList}\n              isLoading={isLoading}\n              itemClicked={itemClicked}\n              prevClicked={prevClicked} />\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doLatestPageModal: bindActionCreators(doLatestPageModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LatestPageModal)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\nimport { EMPTY_ID } from '../constants/Constants'\n\nimport * as utils from './utils'\nimport * as serverUtils from './ServerUtils'\nimport * as constants from '../constants/Constants'\n\nexport const myClass = 'SHOW_OP_LOG_MODAL'\n\nexport const myDuck = createDuck(myClass, 'Show_Op_Log_Modal')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\n\n// init\nexport const init = (myId, parentId, parentClass, parentDuck) => {\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, parentId, parentClass, parentDuck }))\n  }\n}\n\nfunction getAllOpLogs (dispatch, myId, tabs, params) {\n  return dispatch => Promise.all(\n    tabs.map((item, index) => {\n      switch (item) {\n        case constants.SHOW_PTT_MASTER_TAB:\n          return dispatch(serverUtils.getPttMasterOpLog(EMPTY_ID, constants.NUM_OPLOG_PER_REQ))\n            .then(({ response: res }) => {\n              if (res.error) {\n                return { 'error': true, 'type': constants.SHOW_PTT_MASTER_TAB, 'value': res.error.message }\n              } else {\n                return { 'error': false, 'type': constants.SHOW_PTT_MASTER_TAB, 'value': res.result }\n              }\n            })\n        case constants.SHOW_PTT_ME_TAB:\n          return dispatch(serverUtils.getPttMeOpLog(EMPTY_ID, constants.NUM_OPLOG_PER_REQ))\n            .then(({ response: res }) => {\n              if (res.error) {\n                return { 'error': true, 'type': constants.SHOW_PTT_ME_TAB, 'value': res.error.message }\n              } else {\n                return { 'error': false, 'type': constants.SHOW_PTT_ME_TAB, 'value': res.result }\n              }\n            })\n        case constants.SHOW_CONTENT_BOARD_TAB:\n          return dispatch(serverUtils.getContentBoardOpLog(params.boardId, EMPTY_ID, constants.NUM_OPLOG_PER_REQ))\n            .then(({ response: res }) => {\n              if (res.error) {\n                return { 'error': true, 'type': constants.SHOW_CONTENT_BOARD_TAB, 'value': res.error.message }\n              } else {\n                return { 'error': false, 'type': constants.SHOW_CONTENT_BOARD_TAB, 'value': res.result }\n              }\n            })\n        case constants.SHOW_CONTENT_MASTER_TAB:\n          return dispatch(serverUtils.getContentMasterOpLog(params.boardId, EMPTY_ID, constants.NUM_OPLOG_PER_REQ))\n            .then(({ response: res }) => {\n              if (res.error) {\n                return { 'error': true, 'type': constants.SHOW_CONTENT_MASTER_TAB, 'value': res.error.message }\n              } else {\n                return { 'error': false, 'type': constants.SHOW_CONTENT_MASTER_TAB, 'value': res.result }\n              }\n            })\n        case constants.SHOW_CONTENT_MEMBER_TAB:\n          return dispatch(serverUtils.getContentMemberOpLog(params.boardId, EMPTY_ID, constants.NUM_OPLOG_PER_REQ))\n            .then(({ response: res }) => {\n              if (res.error) {\n                return { 'error': true, 'type': constants.SHOW_CONTENT_MEMBER_TAB, 'value': res.error.message }\n              } else {\n                return { 'error': false, 'type': constants.SHOW_CONTENT_MEMBER_TAB, 'value': res.result }\n              }\n            })\n        case constants.SHOW_CONTENT_OPKEY_TAB:\n          return dispatch(serverUtils.getContentOpkeyOpLog(params.boardId, EMPTY_ID, constants.NUM_OPLOG_PER_REQ))\n            .then(({ response: res }) => {\n              if (res.error) {\n                return { 'error': true, 'type': constants.SHOW_CONTENT_OPKEY_TAB, 'value': res.error.message }\n              } else {\n                return { 'error': false, 'type': constants.SHOW_CONTENT_OPKEY_TAB, 'value': res.result }\n              }\n            })\n        case constants.SHOW_FRIEND_FRIEND_TAB:\n          return dispatch(serverUtils.getFriendFriendOpLog(params.friendId, EMPTY_ID, constants.NUM_OPLOG_PER_REQ))\n            .then(({ response: res }) => {\n              if (res.error) {\n                return { 'error': true, 'type': constants.SHOW_FRIEND_FRIEND_TAB, 'value': res.error.message }\n              } else {\n                return { 'error': false, 'type': constants.SHOW_FRIEND_FRIEND_TAB, 'value': res.result }\n              }\n            })\n        case constants.SHOW_FRIEND_MASTER_TAB:\n          return dispatch(serverUtils.getFriendMasterOpLog(params.friendId, EMPTY_ID, constants.NUM_OPLOG_PER_REQ))\n            .then(({ response: res }) => {\n              if (res.error) {\n                return { 'error': true, 'type': constants.SHOW_FRIEND_MASTER_TAB, 'value': res.error.message }\n              } else {\n                return { 'error': false, 'type': constants.SHOW_FRIEND_MASTER_TAB, 'value': res.result }\n              }\n            })\n        case constants.SHOW_FRIEND_MEMBER_TAB:\n          return dispatch(serverUtils.getFriendMemberOpLog(params.friendId, EMPTY_ID, constants.NUM_OPLOG_PER_REQ))\n            .then(({ response: res }) => {\n              if (res.error) {\n                return { 'error': true, 'type': constants.SHOW_FRIEND_MEMBER_TAB, 'value': res.error.message }\n              } else {\n                return { 'error': false, 'type': constants.SHOW_FRIEND_MEMBER_TAB, 'value': res.result }\n              }\n            })\n        case constants.SHOW_FRIEND_OPKEY_TAB:\n          return dispatch(serverUtils.getFriendOpKeyOpLog(params.friendId, EMPTY_ID, constants.NUM_OPLOG_PER_REQ))\n            .then(({ response: res }) => {\n              if (res.error) {\n                return { 'error': true, 'type': constants.SHOW_FRIEND_OPKEY_TAB, 'value': res.error.message }\n              } else {\n                return { 'error': false, 'type': constants.SHOW_FRIEND_OPKEY_TAB, 'value': res.result }\n              }\n            })\n        case constants.SHOW_PTT_PEERS_TAB:\n          return dispatch(serverUtils.getPeers())\n            .then(({ response: res }) => {\n              if (res.error) {\n                return { 'error': true, 'type': constants.SHOW_PTT_PEERS_TAB, 'value': res.error.message }\n              } else {\n                return { 'error': false, 'type': constants.SHOW_PTT_PEERS_TAB, 'value': res.result }\n              }\n            })\n        case constants.SHOW_CONTENT_PEERS_TAB:\n          return dispatch(serverUtils.getContentPeers(params.boardId))\n            .then(({ response: res }) => {\n              if (res.error) {\n                return { 'error': true, 'type': constants.SHOW_CONTENT_PEERS_TAB, 'value': res.error.message }\n              } else {\n                return { 'error': false, 'type': constants.SHOW_CONTENT_PEERS_TAB, 'value': res.result }\n              }\n            })\n        case constants.SHOW_FRIEND_PEERS_TAB:\n          return dispatch(serverUtils.getFriendPeers(params.friendId))\n            .then(({ response: res }) => {\n              if (res.error) {\n                return { 'error': true, 'type': constants.SHOW_FRIEND_PEERS_TAB, 'value': res.error.message }\n              } else {\n                return { 'error': false, 'type': constants.SHOW_FRIEND_PEERS_TAB, 'value': res.result }\n              }\n            })\n        case constants.SHOW_LAST_ANNOUNCE_P2P_TAB:\n          return dispatch(serverUtils.getLastAnnounceP2PTS())\n            .then(({ response: res }) => {\n              if (res.error) {\n                return { 'error': true, 'type': constants.SHOW_LAST_ANNOUNCE_P2P_TAB, 'value': res.error.message }\n              } else {\n                return { 'error': false, 'type': constants.SHOW_LAST_ANNOUNCE_P2P_TAB, 'value': res.result }\n              }\n            })\n        default:\n          return null\n      }\n    })\n  )\n}\n\nexport const getOpLogs = (myId, tabs, params) => {\n  return (dispatch, getState) => {\n    dispatch(getAllOpLogs(dispatch, myId, tabs, params))\n      .then((maps) => {\n        let userIds = maps.reduce((ids, item) => {\n          if (!item.error && item.type.indexOf('_PEERS_TAB') !== -1) {\n            let uIds = item.value ? item.value.map((v) => v.O ? v.O.UID : v.UID) : []\n            uIds.forEach((uid) => { ids[uid] = true })\n          } else if (!item.error && item.type !== constants.SHOW_LAST_ANNOUNCE_P2P_TAB) {\n            let cIds = item.value ? item.value.map((v) => v.O ? v.O.CID : v.CID) : []\n            cIds.forEach((uid) => { ids[uid] = true })\n          }\n          return ids\n        }, {})\n        dispatch(serverUtils.getUsersInfo(Object.keys(userIds)))\n          .then((usersInfo) => {\n            dispatch(postprocessGetOpLogs(myId, maps, usersInfo))\n          })\n      })\n  }\n}\n\nconst postprocessGetOpLogs = (myId, maps, usersInfo) => {\n  usersInfo = usersInfo.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  const opLogs = maps.reduce((accumulator, currentValue) => {\n    if (currentValue.error) {\n      return accumulator\n    } else if (currentValue.type.indexOf('_PEERS_TAB') !== -1) {\n      accumulator[currentValue.type] = currentValue.value\n    } else if (currentValue.type === constants.SHOW_LAST_ANNOUNCE_P2P_TAB) {\n      accumulator[currentValue.type] = currentValue.value\n    } else {\n      accumulator[currentValue.type] = currentValue.value.map((item) => item['O'])// .map(serverUtils.deserialize)\n    }\n    return accumulator\n  }, {})\n\n  Object.keys(opLogs).forEach(function (key) {\n    let opLog = opLogs[key]\n    let userNameMap = usersInfo['userName'] || {}\n\n    if (key.indexOf('_PEERS_TAB') !== -1) {\n      opLogs[key] = opLog.map((value) => {\n        let userId = value.UID\n        let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : constants.DEFAULT_USER_NAME\n\n        return {\n          ...value,\n          userName: userName\n        }\n      })\n    } else if (key !== constants.SHOW_LAST_ANNOUNCE_P2P_TAB) {\n      opLogs[key] = opLog.map((value) => {\n        let userId = value.CID\n        let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : constants.DEFAULT_USER_NAME\n\n        return {\n          ...value,\n          creatorName: userName\n        }\n      })\n    }\n  })\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { opLogs: opLogs }\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData\n}, Immutable.Map())\n\nexport default reducer\n","import React, { PureComponent } from 'react'\nimport styles from './DropdownComponent.module.css'\n\nclass DropdownComponent extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      listOpen: false\n    }\n    this.handleClickOutside = this.handleClickOutside.bind(this)\n    this.toggleList = this.toggleList.bind(this)\n  }\n\n  handleClickOutside () {\n    document.removeEventListener('click', this.handleClickOutside, false)\n    this.setState({\n      listOpen: false\n    })\n  }\n\n  toggleList () {\n    if (!this.state.listOpen) {\n      document.addEventListener('click', this.handleClickOutside, false)\n    } else {\n      document.removeEventListener('click', this.handleClickOutside, false)\n    }\n\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }))\n  }\n\n  render () {\n    const { title, list } = this.props\n    const { listOpen } = this.state\n\n    return (\n      <div className={styles['dd-wrapper']}>\n        <div className={styles['dd-header']} onClick={(e) => {\n          e.preventDefault()\n          e.stopPropagation()\n          this.toggleList()\n        }}>\n          <div className={styles['dd-header-title']}>\n            {title}\n          </div>\n        </div>\n        {listOpen && <div className={styles['dd-list']}>\n          {list.map((item) => (\n            <div className={styles['dd-list-item-wrapper']} key={item.id}>\n              <div className={styles['dd-list-item']}\n                onClick={(e) => {\n                  e.preventDefault()\n                  e.stopPropagation()\n                  item.action()\n                  this.toggleList()\n                }}>\n                {item.title}\n              </div>\n            </div>\n          ))}\n        </div>}\n      </div>\n    )\n  }\n}\n\nexport default DropdownComponent\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Modal from 'react-modal'\nimport Immutable from 'immutable'\n\nimport * as doShowOpLogModal from '../reducers/ShowOpLogModal'\n\nimport * as constants from '../constants/Constants'\nimport * as modalConstants from '../constants/ModalConstants'\nimport DropdownComponent from '../components/DropdownComponent'\nimport { epoch2FullTimeFormat,\n  epoch2FullTimeMsFormat } from '../utils/utilDatetime'\n\nimport styles from './ShowOpLogModal.module.css'\n\nclass ShowOpLogModal extends PureComponent {\n  constructor (props) {\n    super()\n    this.state = {\n      tab: props.modalInput.tabs[0],\n      opLog: {},\n      expandIdx: -1\n    }\n    this.refreshPageInterval = null\n    this.expandRow = this.expandRow.bind(this)\n  }\n\n  componentWillMount () {\n    const { actions: { doShowOpLogModal }, modalInput: { tabs, params }, myId } = this.props\n    doShowOpLogModal.getOpLogs(myId, tabs, params)\n\n    this.refreshPageInterval = setInterval(() => doShowOpLogModal.getOpLogs(myId, tabs, params), constants.REFRESH_INTERVAL)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.refreshPageInterval)\n  }\n\n  expandRow (idx) {\n    const { expandIdx } = this.state\n\n    if (idx === expandIdx) {\n      this.setState({ expandIdx: -1 })\n    } else {\n      this.setState({ expandIdx: idx })\n    }\n  }\n\n  render () {\n    const { myId,\n      showOpLogModal,\n      onModalClose,\n      modal: { currentModal },\n      modalInput: { tabs } } = this.props\n\n    const { tab, expandIdx } = this.state\n\n    let me = showOpLogModal.get(myId, Immutable.Map())\n    let opLogs = me.get('opLogs', Immutable.Map()).toJS()\n    let opLog = opLogs[tab] ? opLogs[tab] : []\n    let that = this\n\n    let dropdownList = tabs.map((item, index) => {\n      let title = null\n      let fTitle = null\n      switch (item) {\n        case constants.SHOW_PTT_MASTER_TAB:\n          title = 'ptt master'\n          fTitle = 'Ptt Master Op-Log'\n          break\n        case constants.SHOW_PTT_ME_TAB:\n          title = 'ptt me'\n          fTitle = 'Ptt Me Op-Log'\n          break\n        case constants.SHOW_CONTENT_BOARD_TAB:\n          title = 'board'\n          fTitle = 'Content Board Op-Log'\n          break\n        case constants.SHOW_CONTENT_OPKEY_TAB:\n          title = 'opkey'\n          fTitle = 'Content Opkey Op-Log'\n          break\n        case constants.SHOW_CONTENT_MASTER_TAB:\n          title = 'master'\n          fTitle = 'Content Master Op-Log'\n          break\n        case constants.SHOW_CONTENT_MEMBER_TAB:\n          title = 'member'\n          fTitle = 'Content Member Op-Log'\n          break\n        case constants.SHOW_FRIEND_FRIEND_TAB:\n          title = 'friend'\n          fTitle = 'Friend Friend Op-Log'\n          break\n        case constants.SHOW_FRIEND_MASTER_TAB:\n          title = 'master'\n          fTitle = 'Friend Master Op-Log'\n          break\n        case constants.SHOW_FRIEND_MEMBER_TAB:\n          title = 'member'\n          fTitle = 'Friend Member Op-Log'\n          break\n        case constants.SHOW_FRIEND_OPKEY_TAB:\n          title = 'opkey'\n          fTitle = 'Friend Opkey Op-Log'\n          break\n        case constants.SHOW_PTT_PEERS_TAB:\n          title = 'ptt peers'\n          fTitle = 'Ptt Peers'\n          break\n        case constants.SHOW_CONTENT_PEERS_TAB:\n          title = 'peers'\n          fTitle = 'Content Board Peers'\n          break\n        case constants.SHOW_FRIEND_PEERS_TAB:\n          title = 'peers'\n          fTitle = 'Friend peers'\n          break\n        case constants.SHOW_LAST_ANNOUNCE_P2P_TAB:\n          title = 'last p2p'\n          fTitle = 'Ptt Last Annouce p2p'\n          break\n        default:\n          break\n      }\n      return {\n        id: item,\n        title: title,\n        fullTitle: fTitle,\n        selected: false,\n        action: () => that.setState({ tab: item })\n      }\n    })\n\n    return (\n      <div>\n        <Modal\n          overlayClassName='ShowOpLogModal__Overlay'\n          style={modalConstants.showOpLogModalStyels}\n          isOpen={currentModal !== null}\n          onRequestClose={null}\n          contentLabel='Show Op Log Modal'>\n          <div className={styles['root']}>\n            <div className={styles['top-bar']}>\n              <div className={styles['prev-button']}>\n                <div className={styles['prev-button-icon']} onClick={onModalClose} />\n              </div>\n              <div className={styles['title']}>\n                OP Logs\n              </div>\n              <div className={styles['multi-device']}>\n                <span >\n                  <DropdownComponent title={dropdownList.find(i => i.id === tab).title}\n                    list={dropdownList} />\n                </span>\n              </div>\n            </div>\n            <div className={styles['content']}>\n              <div className={styles['content-title']}>{dropdownList.find(i => i.id === tab).fullTitle}</div>\n              <div className={styles['oplog-list']}>\n                {\n                  tab === constants.SHOW_LAST_ANNOUNCE_P2P_TAB\n                    ? (\n                      <div className={styles['oplog-item']}>\n                        <div className={styles['item']}>\n                          <div className={styles['op-title']}>Connect Time</div>\n                          <div className={styles['op-value']}>{epoch2FullTimeFormat(opLog.T)}</div>\n                        </div>\n                      </div>\n                    ) : tab.indexOf('_PEERS_TAB') !== -1 ? opLog.map((item, index) => {\n                      return (\n                        <div className={styles['oplog-item']} key={index}>\n                          <div className={styles['item-index']}>\n                            <div title={'User ID: ' + item.UID} className={styles['op-value-index']}>{item.userName}</div>\n                          </div>\n                          <div hidden className={styles['item']}>\n                            <div className={styles['op-title']}>User Name</div>\n                            <div className={styles['op-value']}>{item.userName}</div>\n                          </div>\n                          <div className={styles['item']}>\n                            <div className={styles['op-title']}>Peer Type</div>\n                            <div title={item.T} className={styles['op-value']}>{constants.PEER_TYPE_ARRAY[item.T]}</div>\n                          </div>\n                          <div className={styles['item']}>\n                            <div className={styles['op-title']}>Node ID</div>\n                            <div title={item.ID} className={styles['op-value']}>{item.ID}</div>\n                          </div>\n                          <div hidden className={styles['item']}>\n                            <div className={styles['op-title']}>User ID</div>\n                            <div className={styles['op-value']}>{item.UID}</div>\n                          </div>\n                          <div hidden className={styles['item']}>\n                            <div className={styles['op-title']}>IP</div>\n                            <div className={styles['op-value']}>{item.Addr ? item.Addr.IP : 'null'}</div>\n                          </div>\n                          <div hidden className={styles['item']}>\n                            <div className={styles['op-title']}>Port</div>\n                            <div className={styles['op-value']}>{item.Addr ? item.Addr.Port : 'null'}</div>\n                          </div>\n                          <div hidden className={styles['item']}>\n                            <div className={styles['op-title']}>Zone</div>\n                            <div className={styles['op-value']}>{item.Addr ? item.Addr.Zone : 'null'}</div>\n                          </div>\n                        </div>\n                      )\n                    }) : opLog.map((item, index) => {\n                      let itemMeta = {\n                        'Version': item.V,\n                        'Oplog ID': item.ID,\n                        'Is Sync': item.y\n                      }\n\n                      let OplogConst = {\n                        'SHOW_PTT_ME_TAB': constants.PTT_ME_OP_TYPE_ARRAY,\n\n                        'SHOW_CONTENT_BOARD_TAB': constants.BOARD_OP_TYPE_ARRAY,\n                        'SHOW_CONTENT_MASTER_TAB': constants.BOARD_OP_TYPE_ARRAY,\n                        'SHOW_CONTENT_MEMBER_TAB': constants.BOARD_OP_TYPE_ARRAY,\n                        'SHOW_CONTENT_OPKEY_TAB': constants.BOARD_OP_TYPE_ARRAY,\n\n                        'SHOW_FRIEND_FRIEND_TAB': constants.FRIEND_OP_TYPE_ARRAY,\n                        'SHOW_FRIEND_MASTER_TAB': constants.FRIEND_OP_TYPE_ARRAY,\n                        'SHOW_FRIEND_MEMBER_TAB': constants.FRIEND_OP_TYPE_ARRAY,\n                        'SHOW_FRIEND_OPKEY_TAB': constants.FRIEND_OP_TYPE_ARRAY\n                      }\n\n                      return (\n                        <div className={styles['oplog-item']} key={index}>\n                          <div className={styles['item-index']} onClick={() => this.expandRow(index)}>\n                            <div title={JSON.stringify(itemMeta, null, 4)} className={styles['op-value-index']}>{OplogConst[tab][item.O] + ' @ ' + epoch2FullTimeMsFormat(item.UT)}</div>\n                          </div>\n                          <div className={styles['item']}>\n                            <div className={styles['op-title']}>Creator</div>\n                            <div title={'Creator ID: ' + item.CID} className={styles['op-value']}>{item.creatorName + ' @ ' + epoch2FullTimeMsFormat(item.CT)}</div>\n                          </div>\n                          {\n                            expandIdx === index ? (\n                              <span>\n                                <div className={styles['item']}>\n                                  <div className={styles['op-title']}>Oplog ID</div>\n                                  <div title={item.ID} className={styles['op-value']}>{item.ID}</div>\n                                </div>\n                                <div hidden className={styles['item']}>\n                                  <div className={styles['op-title']}>Creator ID</div>\n                                  <div title={item.CID} className={styles['op-value']}>{item.CID}</div>\n                                </div>\n                                <div hidden className={styles['item']}>\n                                  <div className={styles['op-title']}>Create TS</div>\n                                  <div title={epoch2FullTimeMsFormat(item.CT)} className={styles['op-value']}>{epoch2FullTimeMsFormat(item.CT)}</div>\n                                </div>\n                                <div className={styles['item']}>\n                                  <div className={styles['op-title']}>Obj ID</div>\n                                  <div title={item.OID} className={styles['op-value']}>{item.OID}</div>\n                                </div>\n                                <div hidden className={styles['item']}>\n                                  <div className={styles['op-title']}>Op</div>\n                                  <div title={item.O} className={styles['op-value']}>{OplogConst[tab][item.O]}</div>\n                                </div>\n                                <div className={styles['item']}>\n                                  <div className={styles['op-title']}>Data</div>\n                                  <div title={JSON.stringify(item.D, null, 4)} className={styles['op-value']}>{JSON.stringify(item.D)}</div>\n                                </div>\n                                <div hidden className={styles['item']}>\n                                  <div className={styles['op-title']}>Update TS</div>\n                                  <div title={epoch2FullTimeMsFormat(item.UT)} className={styles['op-value']}>{epoch2FullTimeMsFormat(item.UT)}</div>\n                                </div>\n                                <div className={styles['item']}>\n                                  <div className={styles['op-title']}>Master Log ID</div>\n                                  <div title={item.mID} className={styles['op-value']}>{item.mID}</div>\n                                </div>\n                                <div className={styles['item']}>\n                                  <div className={styles['op-title']}>Master Signs</div>\n                                  <div title={JSON.stringify(item.m, null, 4)} className={styles['op-value']}>{JSON.stringify(item.m)}</div>\n                                </div>\n                                <div className={styles['item']}>\n                                  <div className={styles['op-title']}>Internal Signs</div>\n                                  <div title={JSON.stringify(item.i, null, 4)} className={styles['op-value']}>{JSON.stringify(item.i)}</div>\n                                </div>\n                                <div className={styles['item']}>\n                                  <div className={styles['op-title']}>Is Sync</div>\n                                  <div title={item.y} className={styles['op-value']}>{item.y}</div>\n                                </div>\n                                <div className={styles['item']}>\n                                  <div className={styles['op-title']}>Version</div>\n                                  <div title={item.V} className={styles['op-value']}>{item.V}</div>\n                                </div>\n                              </span>\n                            ) : null\n                          }\n                        </div>\n                      )\n                    })\n                }\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doShowOpLogModal: bindActionCreators(doShowOpLogModal, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowOpLogModal)\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Modal from 'react-modal'\n\nimport CreateBoardModal from './CreateBoardModal'\nimport ManageBoardModal from './ManageBoardModal'\nimport ManageBoardMemberModal from './ManageBoardMemberModal'\nimport InviteToBoardModal from './InviteToBoardModal'\nimport CreateArticleModal from './CreateArticleModal'\nimport EditArticleModal from './EditArticleModal'\nimport AddKnownBoardModal from './AddKnownBoardModal'\nimport NameCardModal from './NameCardModal'\nimport FirstPopupModal from './FirstPopupModal'\nimport PrivacySettingModal from './PrivacySettingModal'\nimport MultiDeviceModal from './MultiDeviceModal'\nimport AddFriendModal from './AddFriendModal'\nimport AddDeviceModal from './AddDeviceModal'\nimport AddDeviceScannerModal from './AddDeviceScannerModal'\nimport BoardActionModal from './BoardActionModal'\nimport SettingMenuModal from './SettingMenuModal'\nimport FriendSettingMenuModal from './FriendSettingMenuModal'\nimport BoardSettingMenuModal from './BoardSettingMenuModal'\nimport ArticleSettingMenuModal from './ArticleSettingMenuModal'\nimport CommentSettingMenuModal from './CommentSettingMenuModal'\nimport LatestPageModal from './LatestPageModal'\nimport ShowOpLogModal from './ShowOpLogModal'\n\nimport Empty from '../components/Empty'\n\nimport * as doModalContainer from '../reducers/ModalContainer'\nimport * as constants from '../constants/Constants'\n\nclass ModalContainer extends PureComponent {\n  componentWillMount () {\n    Modal.setAppElement('body')\n  }\n\n  render () {\n    const { idMap,\n      modal: { currentModal, modalSubmit, modalInput },\n      actions: { myId, doModalContainer } } = this.props\n\n    let modalSwitch = (modal, data) => {\n      doModalContainer.setInput(data)\n      doModalContainer.openModal(modal)\n    }\n\n    switch (currentModal) {\n      case constants.CREATE_BOARD_MODAL:\n        return (<CreateBoardModal myId={idMap['CREATE_BOARD_MODAL']}\n          modalInput={modalInput}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.MANAGE_BOARD_MODAL:\n        return (<ManageBoardModal myId={idMap['MANAGE_BOARD_MODAL']}\n          onModalSwitch={modalSwitch}\n          modalInput={modalInput}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.MANAGE_BOARD_MEMBER_MODAL:\n        return (<ManageBoardMemberModal myId={idMap['MANAGE_BOARD_MEMBER_MODAL']}\n          onModalSwitch={modalSwitch}\n          modalInput={modalInput}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.INVITE_TO_BOARD_MODAL:\n        return (<InviteToBoardModal myId={idMap['INVITE_TO_BOARD_MODAL']}\n          onModalSwitch={modalSwitch}\n          modalInput={modalInput}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.CREATE_ARTICLE_MODAL:\n        return (<CreateArticleModal modalInput={modalInput}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.EDIT_ARTICLE_MODAL:\n        return (<EditArticleModal modalInput={modalInput}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.NAME_CARD_MODAL:\n        return (<NameCardModal userId={myId}\n          modalInput={modalInput}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.FIRST_POPUP_MODAL:\n        return (<FirstPopupModal userId={myId}\n          modalInput={modalInput}\n          onModalSwitch={modalSwitch}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.PRIVACY_SETTING_MODAL:\n        return (<PrivacySettingModal userId={myId}\n          modalInput={modalInput}\n          onModalSwitch={modalSwitch}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.ADD_KNOWN_BOARD_MODAL:\n        return (<AddKnownBoardModal userId={myId}\n          modalInput={modalInput}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.SHOW_DEVICE_INFO:\n        return (<MultiDeviceModal modalInput={modalInput}\n          onModalSwitch={modalSwitch}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.ADD_FRIEND_MODAL:\n        return (<AddFriendModal modalInput={modalInput}\n          onModalSwitch={modalSwitch}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.ADD_DEVICE_MODAL:\n        return (<AddDeviceModal modalInput={modalInput}\n          onModalSwitch={modalSwitch}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.ADD_DEVICE_SCANNER_MODAL:\n        return (<AddDeviceScannerModal modalInput={modalInput}\n          onModalSwitch={modalSwitch}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.BOARD_ACTION_MODAL:\n        return (<BoardActionModal modalInput={modalInput}\n          onModalSwitch={modalSwitch}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.SETTING_MENU_MODAL:\n        return (<SettingMenuModal modalInput={modalInput}\n          onModalSwitch={modalSwitch}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.FRIEND_SETTING_MENU_MODAL:\n        return (<FriendSettingMenuModal modalInput={modalInput}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.BOARD_SETTING_MENU_MODAL:\n        return (<BoardSettingMenuModal modalInput={modalInput}\n          onModalSwitch={modalSwitch}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      case constants.ARTICLE_SETTING_MENU_MODAL:\n        return (<ArticleSettingMenuModal modalInput={modalInput}\n          onModalSwitch={modalSwitch}\n          onModalClose={doModalContainer.closeModal} />)\n\n      case constants.COMMENT_SETTING_MENU_MODAL:\n        return (<CommentSettingMenuModal modalInput={modalInput}\n          onModalSwitch={modalSwitch}\n          onModalClose={doModalContainer.closeModal} />)\n\n      case constants.LATEST_PAGE_MODAL:\n        return (<LatestPageModal modalInput={modalInput}\n          onModalClose={doModalContainer.closeModal} />)\n\n      case constants.SHOW_OP_LOG_MODAL:\n        return (<ShowOpLogModal myId={idMap['SHOW_OP_LOG_MODAL']}\n          modalInput={modalInput}\n          onModalClose={doModalContainer.closeModal}\n          onModalSubmit={modalSubmit} />)\n\n      default:\n        return (<Empty />)\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doModalContainer: bindActionCreators(doModalContainer, dispatch)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalContainer)\n","import Immutable from 'immutable'\nimport { createDuck } from 'redux-duck'\n\nimport * as utils from './utils'\nimport * as serverUtils from './ServerUtils'\n\nimport { myDuck as appDuck } from './App'\nimport * as doHubPage from './HubPage'\nimport * as doBoardPage from './BoardPage'\nimport * as doArticlePage from './ArticlePage'\nimport * as doProfilePage from './ProfilePage'\nimport * as doFriendListPage from './FriendListPage'\nimport * as doFriendChatPage from './FriendChatPage'\nimport * as doCreateBoardModal from './CreateBoardModal'\nimport * as doManageBoardModal from './ManageBoardModal'\nimport * as doShowOpLogModal from './ShowOpLogModal'\n// import * as doNameCardModal     from './NameCardModal'\n\nimport { getUUID } from '../utils/utils'\nimport { EMPTY_ID,\n  DEFAULT_USER_NAME,\n  DEFAULT_USER_IMAGE,\n  DEFAULT_USER_NAMECARD } from '../constants/Constants'\n\nexport const myClass = 'ROOT_PAGE'\n\nexport const myDuck = createDuck(myClass, 'Root_Page')\n\nconst INIT = myDuck.defineType('INIT')\nconst ADD_CHILD = myDuck.defineType('ADD_CHILD')\nconst SET_ROOT = myDuck.defineType('SET_ROOT')\nconst REMOVE_CHILDS = myDuck.defineType('REMOVE_CHILDS')\nconst REMOVE = myDuck.defineType('REMOVE')\nconst SET_DATA = myDuck.defineType('SET_DATA')\nconst UPDATE_DATA = myDuck.defineType('UPDATE_DATA')\n\n/**\n * @func init\n */\nexport const init = (myId, query, param) => {\n  let hubPageId = getUUID()\n  let boardPageId = getUUID()\n  let articlePageId = getUUID()\n  let profilePageId = getUUID()\n  let friendListPageId = getUUID()\n  let friendChatPageId = getUUID()\n\n  let createBoardModalId = getUUID()\n  let manageBoardModalId = getUUID()\n  let showOpLogModalId = getUUID()\n  // let nameCardModalId     = getUUID()\n  // let friendProfileModalId = getUUID()\n\n  return (dispatch, getState) => {\n    dispatch(utils.init({ myId, myClass, myDuck, ...query, ...param }))\n    dispatch(utils.setRoot(myId, myClass, appDuck))\n\n    dispatch(doHubPage.init(hubPageId, myId, myClass, myDuck))\n    dispatch(doBoardPage.init(boardPageId, myId, myClass, myDuck))\n    dispatch(doArticlePage.init(articlePageId, myId, myClass, myDuck))\n    dispatch(doProfilePage.init(profilePageId, myId, myClass, myDuck))\n    dispatch(doFriendListPage.init(friendListPageId, myId, myClass, myDuck))\n    dispatch(doFriendChatPage.init(friendChatPageId, myId, myClass, myDuck))\n\n    dispatch(doCreateBoardModal.init(createBoardModalId, myId, myClass, myDuck))\n    dispatch(doManageBoardModal.init(manageBoardModalId, myId, myClass, myDuck))\n    dispatch(doShowOpLogModal.init(showOpLogModalId, myId, myClass, myDuck))\n    // dispatch(doNameCardModal.init(nameCardModalId, myId, myClass, myDuck))\n  }\n}\n\n/**\n * @func getUserInfoById - fetch user info for getUserInfo\n * @private\n */\n\nfunction getUserInfoById (userId) {\n  return dispatch => Promise.all([\n    dispatch(serverUtils.getUserName(userId))\n      .then(({ response: { result }, error }) => ({\n        'error': !!error,\n        'key': 'userName',\n        'value': error || result\n      })),\n    dispatch(serverUtils.getUserImg(userId))\n      .then(({ response: { result }, error }) => ({\n        'error': !!error,\n        'key': 'userImg',\n        'value': error || result\n      })),\n    dispatch(serverUtils.getNameCard(userId))\n      .then(({ response: { result }, error }) => ({\n        'error': !!error,\n        'key': 'userNameCard',\n        'value': error || result\n      }))\n  ])\n}\n\n/**\n * @typedef Response\n * @property {string} type - done || no_user_name\n * @property {value=} id - values for no_user_name\n *\n * @typedef Error\n * @property {string} message\n * @property {object} info\n */\n\n/**\n * @func getUserInfo - doRootPage.getUserInfo\n *\n * @param {string} myId - id for RootPage\n * @return {Function<Promise<Response|Error>>} function for dispatch\n *\n */\nexport const getUserInfo = myId => {\n  return (dispatch, getState) => new Promise(async (resolve, reject) => {\n    const { response: userInfo, error } = await dispatch(serverUtils.showMe())\n    if (error) return reject({ message: 'Backend no response: please try restarting PTT.ai', info: error })\n\n    let userId = userInfo.result.ID\n    let info = userInfo.result\n\n    let userMetaInfo = await dispatch(getUserInfoById(userId))\n\n    let metaInfo = userMetaInfo.filter((meta) => !meta.error)\n    let userNameResult = metaInfo.find((meta) => meta.key === 'userName').value\n\n    // user exist\n    if ((userNameResult && userNameResult.N && serverUtils.b64decode(userNameResult.N) !== DEFAULT_USER_NAME)) {\n      let keyInfo = await dispatch(getAllKeyInfo())\n\n      resolve({\n        type: 'done',\n        userId: userId,\n        value: keyInfo\n      })\n    } else {\n      let keyInfo = await dispatch(getAllKeyInfo())\n\n      resolve({\n        type: 'no_user_name',\n        userId: userId,\n        value: keyInfo\n      })\n    }\n\n    dispatch(postprocessGetUserInfo(myId, info, metaInfo))\n  })\n}\n\nconst postprocessGetUserInfo = (myId, info, metaInfo) => {\n  /* deserialization */\n  info = serverUtils.deserialize(info)\n\n  console.log('doRootPage.postprocessGetUserInfo: userInfo: ', info)\n  console.log('doRootPage.postprocessGetUserInfo: userMetaInfo: ', metaInfo)\n\n  let userNameResult = metaInfo.find((meta) => meta.key === 'userName').value\n  let userImgResult = metaInfo.find((meta) => meta.key === 'userImg').value\n  let userNameCardResult = metaInfo.find((meta) => meta.key === 'userNameCard').value\n  let userName = (userNameResult && userNameResult.N) ? serverUtils.b64decode(userNameResult.N) : DEFAULT_USER_NAME\n  let userImg = (userImgResult && userImgResult.I) ? userImgResult.I : DEFAULT_USER_IMAGE\n  let userNameCard = (userNameCardResult && userNameCardResult.C) ? JSON.parse(serverUtils.b64decode(userNameCardResult.C)) : DEFAULT_USER_NAMECARD\n\n  console.log('doRootPage.postprocessGetUserInfo: userName: ', userName)\n  console.log('doRootPage.postprocessGetUserInfo: userImg: ', userImg)\n  console.log('doRootPage.postprocessGetUserInfo: userNameCard: ', userNameCard)\n\n  const combinedUserInfo = {\n    userId: info.ID,\n    userName: userName,\n    userImg: userImg,\n    userNameCard: userNameCard,\n    createTime: info.CT ? info.CT : utils.emptyTimeStamp(),\n    updateTime: info.UT ? info.UT : utils.emptyTimeStamp(),\n    status: info.S,\n    nodeId: info.NodeID\n  }\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { userInfo: combinedUserInfo }\n  }\n}\n\n/**\n * @func getAllKeyInfo\n * @private\n */\n\nconst getAllKeyInfo = () => dispatch => Promise.all([\n  dispatch(serverUtils.showMyURL())\n    .then(({ response: { result }, error }) => ({\n      'error': !!error,\n      'key': 'deviceJoinKey',\n      'value': error || result\n    })),\n  dispatch(serverUtils.showMyKey())\n    .then(({ response: { result }, error }) => ({\n      'error': !!error,\n      'key': 'userPrivateKey',\n      'value': error || result\n    })),\n  dispatch(serverUtils.showURL())\n    .then(({ response: { result }, error }) => ({\n      'error': !!error,\n      'key': 'friendJoinKey',\n      'value': error || result\n    }))\n])\n\nexport const getKeyInfo = (myId) => {\n  return (dispatch, getState) => {\n    dispatch(getAllKeyInfo())\n      .then(keyInfo => {\n        dispatch(postprocessGetKeyInfo(myId, keyInfo))\n      })\n  }\n}\n\nconst postprocessGetKeyInfo = (myId, keyInfo) => {\n  console.log('doRootPage.postprocessGetKeyInfo: keyInfo: ', keyInfo)\n\n  let deviceJoinKeyInfo = keyInfo.find(({ key }) => key === 'deviceJoinKey').value\n  let userPrivateKeyInfo = keyInfo.find(({ key }) => key === 'userPrivateKey').value\n  let friendJoinKeyInfo = keyInfo.find(({ key }) => key === 'friendJoinKey').value\n\n  const combinedKeyInfo = {\n    userPrivateKey: userPrivateKeyInfo,\n    deviceJoinKey: {\n      URL: deviceJoinKeyInfo.URL,\n      UpdateTS: deviceJoinKeyInfo.UT ? deviceJoinKeyInfo.UT : utils.emptyTimeStamp(),\n      expirePeriod: deviceJoinKeyInfo.e\n    },\n    friendJoinKey: {\n      URL: friendJoinKeyInfo.URL,\n      UpdateTS: friendJoinKeyInfo.UT ? friendJoinKeyInfo.UT : utils.emptyTimeStamp(),\n      expirePeriod: friendJoinKeyInfo.e\n    }\n  }\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { keyInfo: combinedKeyInfo }\n  }\n}\n\n/*                    */\n/*  Get Device Info   */\n/*                    */\n\nexport const getDeviceInfo = (myId) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getMyNodes())\n      .then(({ response: { result }, error }) => {\n        dispatch(postprocessGetDeviceInfo(myId, result))\n      })\n  }\n}\n\nconst postprocessGetDeviceInfo = (myId, result) => {\n  result = result.map(serverUtils.deserialize)\n\n  const combinedDeviceInfo = result.map(device => {\n    return {\n      userID: device.ID,\n      IP: device.IP,\n      NodeName: device.N,\n      NodeID: device.NID,\n      NodeType: device.NT,\n      Status: device.S,\n      TCP: device.TCP,\n      UDP: device.UDP,\n      CreateTime: device.CT ? device.CT : utils.emptyTimeStamp(),\n      UpdateTime: device.UT ? device.UT : utils.emptyTimeStamp(),\n      LastSeen: device.L ? device.L : utils.emptyTimeStamp(),\n      Version: device.V\n    }\n  })\n\n  console.log('doRootPage.postprocessGetDeviceInfo: combinedDeviceInfo: ', combinedDeviceInfo)\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { deviceInfo: combinedDeviceInfo }\n  }\n}\n\n/*                    */\n/*  Update User Info  */\n/*                    */\n\nexport const editName = (myId, name) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.editName(name))\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(postprocessEditName(myId, name, result))\n      })\n  }\n}\n\nconst postprocessEditName = (myId, name, result) => {\n  result = serverUtils.deserialize(result)\n\n  console.log('doRootPage.postprocessEditName: result: ', result)\n\n  const combinedUserInfo = {\n    createTime: result.CT,\n    userID: result.ID,\n    userName: result.N,\n    status: result.S,\n    updateTime: result.UT,\n    version: result.V\n  }\n\n  return {\n    myId,\n    myClass,\n    type: UPDATE_DATA, /* UPDATE_DATA will merge the updated object with original */\n    data: { userInfo: combinedUserInfo }\n  }\n}\n\n/*                      */\n/*  Update Device Info  */\n/*                      */\n\nexport const addDevice = (myId, nodeId, pKey, callBackFunc) => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.joinMe(nodeId, pKey))\n      .then(({ response: { result, error }, type, query }) => {\n        if (error) {\n          callBackFunc({ error: true, data: error.message, nodeId: nodeId })\n        } else {\n          callBackFunc({ error: false, data: result })\n        }\n      })\n  }\n}\n\n/**\n * @func getBoardMetaMap\n * @private\n */\nconst getBoardMetaMap = boardIds => dispatch => Promise.all(\n  boardIds.map(async (item, index) => {\n    const { response: { result }, error } = await dispatch(serverUtils.getBoard(item))\n    if (error) throw error\n\n    return {\n      ID: result.ID,\n      LastSeen: result.LastSeen,\n      Status: result.Status,\n      Title: result.Title,\n      UpdateTS: result.UpdateTS,\n      CreatorID: result.C,\n      BoardType: result.BT\n    }\n  })\n)\n\nconst getMetaInfoMaps = (creatorIds, boardIds) => dispatch => Promise.all([\n  dispatch(serverUtils.getUserNameByIds(creatorIds))\n    .then(({ response: { result }, error }) => ({\n      'error': !!error,\n      'key': 'userName',\n      'value': error || result\n    })),\n  dispatch(serverUtils.getUserImgByIds(creatorIds))\n    .then(({ response: { result }, error }) => ({\n      'error': !!error,\n      'key': 'userImg',\n      'value': error || result\n    })),\n  dispatch(getBoardMetaMap(boardIds))\n    .then(result => {\n      result = result.map(serverUtils.deserialize)\n      let boardMap = result.reduce((acc, each) => {\n        if (!(each.ID in acc)) {\n          acc[each.ID] = each\n        }\n        return acc\n      }, {})\n      return { 'error': false, 'key': 'boardId', 'value': boardMap }\n    })\n])\n\nconst getAllArticles = (dispatch, myId, articleIds) => dispatch => Promise.all(\n  articleIds.map(async (item, index) => {\n    const { response: aResult, error } = await dispatch(serverUtils.getArticles(item.boardId, item.articleId, 1))\n    if (error) throw error\n    let articles = aResult.result\n\n    if (articles && articles.length > 0) {\n      let article = articles[0]\n      const { response: { result }, error } = await dispatch(serverUtils.getContent(item.boardId, item.articleId, article.ContentBlockID, 0, 0, 1))\n\n      if (error) throw error\n\n      let summary = (result && result.length > 0) ? result[0].B : ''\n      return {\n        'BoardID': item.boardId,\n        'ID': item.articleId,\n        'Title': item.title,\n        'CreatorID': article.CreatorID,\n        'ContentBlockID': article.ContentBlockID,\n        'Summary': (summary && summary.length > 0) ? summary[0] : '',\n        'UpdateTS': article.UpdateTS,\n        'CreateTS': article.CreateTS,\n        'LastSeen': article.L,\n        'Status': article.S\n      }\n    } else {\n      return Promise.reject(1)\n    }\n  })\n)\n\nexport const getLatestArticles = (myId, limit) => (dispatch, getState) => new Promise(async () => {\n  const pttOpLogListRes = await dispatch(serverUtils.getPttOpLogList(EMPTY_ID, limit))\n  if (pttOpLogListRes.error) throw pttOpLogListRes.error\n  const { response: { result } } = pttOpLogListRes\n\n  let articleIds = result\n    .map(item => item['O'])\n    .filter(item => item['O'] === 2) // PttOpTypeCreateArticle\n    .map(item => ({\n      boardId: item.D.bID,\n      articleId: item.OID,\n      title: item.D.T\n    }))\n\n  let articles = await dispatch(getAllArticles(dispatch, myId, articleIds))\n\n  let creatorIds = articles.filter(each => each.CreatorID).map(each => each.CreatorID)\n  let boardIds = articles.filter(each => each.BoardID).map(each => each.BoardID)\n\n  // get articles\n  let maps = await dispatch(getMetaInfoMaps(creatorIds, boardIds))\n  dispatch(postprocessGetLatestArticles(myId, articles, maps))\n})\n\nconst postprocessGetLatestArticles = (myId, result, maps) => {\n  result = result.map(serverUtils.deserialize)\n\n  maps = maps.reduce((acc, each) => {\n    acc[each.key] = each.value\n    return acc\n  }, {})\n\n  const latestArticles = result.map(each => {\n    let userId = each.CreatorID\n    let boardId = each.BoardID\n    let userNameMap = maps['userName'] || {}\n    let userImgMap = maps['userImg'] || {}\n    let boardIdMap = maps['boardId'] || {}\n\n    let userName = userNameMap[userId] ? serverUtils.b64decode(userNameMap[userId].N) : DEFAULT_USER_NAME\n    let userImg = userImgMap[userId] ? userImgMap[userId].I : DEFAULT_USER_IMAGE\n    let boardName = boardIdMap[boardId] ? boardIdMap[boardId].Title : ''\n\n    return {\n      BoardID: each.BoardID,\n      BoardName: boardName,\n      Summary: each.Summary,\n      ContentBlockID: each.ContentBlockID,\n      CreatorID: each.CID,\n      CreatorName: userName,\n      CreatorImg: userImg,\n      ID: each.ID,\n      NBlock: each.NBlock,\n      NBoo: each.NB,\n      NPush: each.NP,\n      Title: each.Title,\n      LastSeen: each.LastSeen ? each.LastSeen : utils.emptyTimeStamp(),\n      CreateTS: each.CreateTS ? each.CreateTS : utils.emptyTimeStamp(),\n      UpdateTS: each.UpdateTS ? each.UpdateTS : utils.emptyTimeStamp(),\n      Status: each.Status\n    }\n  })\n\n  console.log('doRootPage.postprocessGetLatestArticles: result:', result)\n\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { latestArticles: latestArticles }\n  }\n}\n\nexport const getLogLastSeen = myId => (dispatch, getState) => {\n  dispatch(serverUtils.getPttOpLogSeen())\n    .then(({ response: { result }, type, query, error }) => {\n      dispatch(updateLogLastSeenData(myId, result))\n    })\n}\n\nexport const markLogSeen = myId => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.markPttOpLogSeen())\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(updateLogLastSeenData(myId, result))\n      })\n  }\n}\n\nconst updateLogLastSeenData = (myId, result) => {\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { logLastSeen: result }\n  }\n}\n\nexport const fetchLatestMessage = (myId, limit) => (dispatch, getState) => new Promise(async () => {\n  let emptyTS = utils.emptyTimeStamp()\n\n  const friendListRes = await dispatch(serverUtils.getFriendListByMsgCreateTS(emptyTS.T, emptyTS.NT, limit))\n  if (friendListRes.error) throw friendListRes.error\n  const friendList = friendListRes.response.result\n\n  if (!friendList || !friendList[0]) return\n\n  const chatId = friendList[0].ID\n  const creatorName = friendList[0].N\n\n  const messageListRes = await dispatch(serverUtils.getMessageList(chatId, EMPTY_ID, limit))\n  if (messageListRes.error) throw messageListRes.error\n  const messageList = messageListRes.response.result\n  const messageBlockList = await Promise.all(messageList.map(msg =>\n    dispatch(serverUtils.getMessageBlockList(chatId, msg.ID, msg.BlockID, 0, 0, 1))\n  ))\n  let messages = messageBlockList.map(data => data.response.result[0])\n  dispatch(postprocessGetFriendListByMsgCreateTS(myId, chatId, creatorName, messages))\n})\n\nconst postprocessGetFriendListByMsgCreateTS = (myId, chatId, creatorName, messages) => {\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: {\n      latestFriendList: messages.map(message => ({\n        creatorName: creatorName,\n        creatorID: message.CID,\n        chatID: chatId,\n        friendID: message.CID,\n        messageID: message.AID,\n        contents: message.B,\n        createTS: message.CT\n      })\n      ) }\n  }\n}\n\nexport const getFriendListSeen = myId => {\n  return (dispatch, getState) => {\n    dispatch(serverUtils.getFriendListSeen())\n      .then(({ response: { result }, type, query, error }) => {\n        dispatch(updateFriendLastSeenData(myId, result))\n      })\n  }\n}\n\nexport const markFriendListSeen = myId => (dispatch, getState) => {\n  dispatch(serverUtils.markFriendListSeen())\n    .then(({ response: { result }, type, query, error }) => {\n      dispatch(updateFriendLastSeenData(myId, result))\n    })\n}\n\nconst updateFriendLastSeenData = (myId, result) => {\n  return {\n    myId,\n    myClass,\n    type: SET_DATA,\n    data: { friendLastSeen: result }\n  }\n}\n\n// reducers\nconst reducer = myDuck.createReducer({\n  [INIT]: utils.reduceInit,\n  [ADD_CHILD]: utils.reduceAddChild,\n  [SET_ROOT]: utils.reduceSetRoot,\n  [REMOVE_CHILDS]: utils.reduceRemoveChilds,\n  [REMOVE]: utils.reduceRemove,\n  [SET_DATA]: utils.reduceSetData,\n  [UPDATE_DATA]: utils.reduceUpdateData\n}, Immutable.Map())\n\nexport default reducer\n","export const setup = () => {\n  if (!('Notification' in window)) {\n    console.log('This browser does not support notification')\n    return Promise.reject()\n  }\n\n  if (Notification.permission === 'denied') {\n    return Promise.reject()\n  }\n\n  if (Notification.permission === 'default' || Notification.permission === 'undefined') {\n    return Notification.requestPermission()\n  }\n\n  // granted\n  return Promise.resolve()\n}\n\nexport const show = ({ title, body, icon }) => {\n  if (!title) {\n    return console.error(`TypeError: Wrong format. Param should be an object: {\n        title: <String>,\n        body: <String>,\n        icon: <URL>,\n        tag: <noti_id>\n    }`)\n  }\n\n  const createNoti = () => new Notification(title, { body, icon })\n\n  if (Notification.permission !== 'granted') {\n    return setup().then(createNoti)\n  }\n\n  return createNoti()\n}\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\nimport Immutable from 'immutable'\nimport { ToastContainer, toast } from 'react-toastify'\nimport { injectIntl } from 'react-intl'\n\nimport Empty from '../components/Empty'\nimport Navigator from '../components/Navigator'\n\nimport HubPage from '../containers/HubPage'\nimport BoardPage from '../containers/BoardPage'\nimport ArticlePage from '../containers/ArticlePage'\nimport ProfilePage from '../containers/ProfilePage'\nimport FriendListPage from '../containers/FriendListPage'\nimport FriendChatPage from '../containers/FriendChatPage'\nimport ModalContainer from '../containers/ModalContainer'\n\nimport * as doRootPage from '../reducers/RootPage'\nimport * as doModalContainer from '../reducers/ModalContainer'\n\nimport * as constants from '../constants/Constants'\nimport { getUUID,\n  getRootId,\n  getRoot,\n  getChildId,\n  isUnRead,\n  decodeURIObj,\n  decodeBase64,\n  parseQueryString } from '../utils/utils'\n\nimport { show as showNotification } from '../utils/notification'\nimport googleAnalytics from '../utils/googleAnalytics'\n\nimport { emptyTimeStamp } from '../reducers/utils'\n\nimport styles from './RootPage.module.css'\nimport 'react-toastify/dist/ReactToastify.css'\n\nclass RootPage extends PureComponent {\n  constructor (props) {\n    super()\n    this.toastId = null\n    this.browserTabInterval = null\n    this.refreshPageInterval = null\n\n    this.pageLastSeenTS = emptyTimeStamp()\n    this.sentNotifications = []\n\n    this.resetTitle = this.resetTitle.bind(this)\n    this.refreshPage = this.refreshPage.bind(this)\n    this.refreshBrowserTabTitle = this.refreshBrowserTabTitle.bind(this)\n    this.checkMarkFriendListSeen = this.checkMarkFriendListSeen.bind(this)\n    this.checkMarkHubSeen = this.checkMarkHubSeen.bind(this)\n\n    this.handleBrowserTabNotification = this.handleBrowserTabNotification.bind(this)\n    this.handleBrowserToast = this.handleBrowserToast.bind(this)\n  }\n\n  componentWillMount () {\n    const { location: { search }, match: { params }, actions: { doRootPage, doModalContainer } } = this.props\n    const query = parseQueryString(search)\n\n    let myId = getUUID()\n\n    let openFirstPopupModal = (userId, keyInfo) => {\n      let deviceJoinKeyInfo = keyInfo.find(({ key }) => key === 'deviceJoinKey').value\n      let userPrivateKeyInfo = keyInfo.find(({ key }) => key === 'userPrivateKey').value\n\n      doModalContainer.setInput({\n        deviceJoinKeyInfo: deviceJoinKeyInfo,\n        userPrivateKeyInfo: userPrivateKeyInfo,\n        userId: userId,\n        // TODO: comment this because multidevice function is currenly disable.\n        //\n        // signIn: (nodeId, pKey, addDeviceCallBackFunc, waitingCallBackFunc, signedInCallBackFunc) => {\n        //   doRootPage.addDevice(myId, nodeId, pKey, addDeviceCallBackFunc)\n        //   setInterval(() => {\n        //     doRootPage.getUserInfo(myId).then( res => {\n        //       if (res.type === 'done') { return signedInCallBackFunc() }\n        //       // no user name\n        //       let keyInfo = res.value;\n        //       let deviceJoinKeyInfo   = keyInfo.find((key) => key.key === 'deviceJoinKey').value\n        //       let userPrivateKeyInfo  = keyInfo.find((key) => key.key === 'userPrivateKey').value\n        //       waitingCallBackFunc(userPrivateKeyInfo, {\n        //         URL:          deviceJoinKeyInfo.URL,\n        //         UpdateTS:     deviceJoinKeyInfo.UT ? deviceJoinKeyInfo.UT : emptyTimeStamp(),\n        //         expirePeriod: deviceJoinKeyInfo.e,\n        //       })\n        //     })\n        //   }, constants.REFRESH_INTERVAL)\n        // },\n        signUp: (name) => {\n          doRootPage.editName(myId, name)\n          doModalContainer.closeModal()\n        }\n      })\n\n      doModalContainer.openModal(constants.FIRST_POPUP_MODAL)\n    }\n\n    let openPrivacySettingModal = (userId) => {\n      doModalContainer.setInput({\n        userId: userId\n      })\n\n      doModalContainer.openModal(constants.PRIVACY_SETTING_MODAL)\n    }\n\n    doRootPage.init(myId, query, decodeURIObj(params))\n\n    // get user name and user image\n    doRootPage.getUserInfo(myId).then(res => {\n      if (res.type === 'no_user_name') openFirstPopupModal(res.userId, res.value)\n      else if (!googleAnalytics.isConfigured()) openPrivacySettingModal(res.userId)\n    })\n\n    // get join keys for multi-device and friend\n    doRootPage.getKeyInfo(myId)\n\n    // get user devices\n    doRootPage.getDeviceInfo(myId)\n\n    // get latest articles\n    doRootPage.getLatestArticles(myId, constants.NUM_NEWS_PER_REQ)\n\n    // get frined list , sorted by last message created time\n    doRootPage.fetchLatestMessage(myId, 1) // we just need the latest message to check unread or not\n\n    // get log last seen\n    doRootPage.getLogLastSeen(myId)\n\n    // get friend list last seen\n    doRootPage.getFriendListSeen(myId)\n\n    this.refreshPageInterval = setInterval(() => this.refreshPage(myId), constants.REFRESH_INTERVAL)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.refreshPageInterval)\n  }\n\n  refreshBrowserTabTitle (sender) {\n    const { intl } = this.props\n\n    let notifyOneTitle = intl.formatMessage({ id: 'site-title.notify1' }, { SENDER: sender })\n    let notifyTwoTitle = intl.formatMessage({ id: 'site-title.notify2' })\n\n    if (document.title === notifyOneTitle) {\n      document.title = notifyTwoTitle\n    } else {\n      document.title = notifyOneTitle\n    }\n  }\n\n  refreshPage (myId) {\n    const { actions: { doRootPage } } = this.props\n\n    let onConnectionLost = (message) => {\n      if (!toast.isActive(this.toastId)) {\n        this.toastId = toast.error(message, { autoClose: 3000 })\n      }\n    }\n\n    if (this.props.match.url === (`/hub`)) {\n      doRootPage.markLogSeen(myId)\n    } else {\n      doRootPage.getLogLastSeen(myId)\n    }\n\n    if (this.props.match.url === `/friend`) { // only index send\n      doRootPage.markFriendListSeen(myId)\n    } else {\n      doRootPage.getFriendListSeen(myId)\n    }\n\n    doRootPage.fetchLatestMessage(myId, 1)\n    doRootPage.getLatestArticles(myId, constants.NUM_NEWS_PER_REQ)\n    doRootPage.getDeviceInfo(myId)\n    doRootPage.getUserInfo(myId).catch(err => {\n      console.error(err.info)\n      onConnectionLost(err.message)\n    })\n\n    let me = getRoot(this.props)\n    let userId = me.getIn(['userInfo', 'userId'])\n    let latestMessage = me.getIn(['latestFriendList', '0'], Immutable.Map()).toJS()\n\n    if (!latestMessage || latestMessage.creatorID === userId) { return }\n\n    // Web browser tab notification\n    this.handleBrowserTabNotification(latestMessage)\n    this.handleBrowserToast(latestMessage)\n  }\n\n  resetTitle () {\n    const { intl } = this.props\n    this.pageLastSeenTS = emptyTimeStamp()\n\n    // stop showing tab notification\n    if (this.browserTabInterval) {\n      clearInterval(this.browserTabInterval)\n      this.browserTabInterval = null\n    }\n\n    document.title = intl.formatMessage({ id: 'site-title.title' })\n  }\n\n  handleBrowserTabNotification (latestMessage) {\n    // user is browsing current tab\n    if (!document.hidden) return this.resetTitle()\n\n    if (isUnRead(latestMessage.createTS && latestMessage.createTS.T, this.pageLastSeenTS && this.pageLastSeenTS.T)) {\n      this.browserTabInterval = this.browserTabInterval || setInterval(() => {\n        let sender = decodeBase64(latestMessage.creatorName)\n        this.refreshBrowserTabTitle(sender)\n      }, constants.TITLE_FLASH_INTERVAL)\n    }\n  }\n\n  handleBrowserToast (latestMessage) {\n    const { intl, match, history } = this.props\n\n    if (\n      !document.hidden || // user is browsing current tab\n      this.sentNotifications.includes(latestMessage.messageID) || // noti has been sent before\n      !isUnRead(latestMessage.createTS && latestMessage.createTS.T, this.pageLastSeenTS && this.pageLastSeenTS.T) // msg has been read before\n    ) { return }\n\n    // prepare data for notification\n    let { messageID, friendID, chatID } = latestMessage\n    let creatorName = decodeBase64(latestMessage.creatorName)\n    let title = intl.formatMessage({ id: 'site-title.notify1' }, { SENDER: creatorName })\n    let summary = latestMessage.contents\n      .map(content => JSON.parse(decodeBase64(content)))\n      .filter(content => content.type === 1) // text only\n      .map(content => content.value)\n      .join(' ').substr(0, 20)\n\n    // send notification\n    let noti = showNotification({ title: title, body: summary, tag: `message${messageID}` })\n    if (noti) {\n      this.sentNotifications.push(messageID)\n      noti.addEventListener('click', event => {\n        window.focus()\n        noti.close()\n\n        if (match.url !== `/friend/${friendID}/chat/${chatID}/`) {\n          history.push(`/friend/`) // to trigger page re-render\n          history.push(`/friend/${friendID}/chat/${chatID}/`)\n        }\n      })\n    }\n  }\n\n  checkMarkHubSeen () {\n    let { myId, actions: { doRootPage }, match: { params } } = this.props\n\n    let me = getRoot(this.props)\n    let logLastSeen = me.get('logLastSeen', Immutable.Map()).toJS()\n    let latestArticles = me.get('latestArticles', Immutable.List()).toJS()\n\n    let ids = latestArticles.map(la => la.BoardID)\n    let hubHasUnread = latestArticles.length > 0 ? isUnRead(latestArticles[0].CreateTS.T, logLastSeen.T) : false\n\n    if (ids.includes(params.boardId) && !hubHasUnread) {\n      doRootPage.markLogSeen(myId)\n    }\n  }\n\n  checkMarkFriendListSeen () {\n    let { myId, actions: { doRootPage }, match: { params } } = this.props\n\n    let me = getRoot(this.props)\n    let friendLastSeen = me.get('friendLastSeen', Immutable.Map()).toJS()\n    let latestFriendList = me.get('latestFriendList', Immutable.List()).toJS()\n\n    let ids = latestFriendList.map(lf => lf.ID)\n    let friendListHasUnread = latestFriendList.length > 0 ? isUnRead(latestFriendList[0].createTS.T, friendLastSeen.T) : false\n\n    if (ids.includes(params.chatId) && !friendListHasUnread) {\n      doRootPage.markFriendListSeen(myId)\n    }\n  }\n\n  render () {\n    const { match, myComponent, actions: { doRootPage, doModalContainer } } = this.props\n\n    let myId = getRootId(this.props)\n    if (!myId) return (<Empty />)\n\n    let me = getRoot(this.props)\n\n    if (!me.getIn) return (<Empty />)\n\n    let userId = me.getIn(['userInfo', 'userId'])\n    let userName = me.getIn(['userInfo', 'userName'])\n    let userImg = me.getIn(['userInfo', 'userImg'])\n    let keyInfo = me.get('keyInfo', Immutable.Map()).toJS()\n    let deviceInfo = me.get('deviceInfo', Immutable.List()).toJS()\n    let latestArticles = me.get('latestArticles', Immutable.List()).toJS()\n    let latestFriendList = me.get('latestFriendList', Immutable.List()).toJS()\n    let friendLastSeen = me.get('friendLastSeen', Immutable.Map()).toJS()\n    let logLastSeen = me.get('logLastSeen', Immutable.Map()).toJS()\n\n    let latestHasUnread = latestArticles.length > 0 ? isUnRead(latestArticles[0].UpdateTS.T, latestArticles[0].LastSeen.T) : false\n    let hubHasUnread = latestArticles.length > 0 ? isUnRead(latestArticles[0].UpdateTS.T, logLastSeen.T) : false\n\n    let friendListHasUnread = latestFriendList.length > 0 ? isUnRead(latestFriendList[0].createTS.T, friendLastSeen.T) : false\n\n    let openNameCard = () => {\n      doModalContainer.setInput({\n        userId: userId,\n        isEditable: true\n      })\n      doModalContainer.openModal(constants.NAME_CARD_MODAL)\n    }\n\n    let onSettingClicked = () => {\n      doModalContainer.setInput({\n        /* For multi-device modal */\n        device: {\n          data: deviceInfo,\n          addDeviceAction: (nodeId, pKey, callBackFunc) => doRootPage.addDevice(myId, nodeId, pKey, callBackFunc)\n        },\n        keyInfo: {\n          data: keyInfo,\n          refreshKeyInfo: () => doRootPage.getKeyInfo(myId)\n        },\n        /* For op log modal */\n        tabs: [\n          // constants.SHOW_PTT_MASTER_TAB,\n          constants.SHOW_PTT_ME_TAB,\n          constants.SHOW_PTT_PEERS_TAB,\n          constants.SHOW_LAST_ANNOUNCE_P2P_TAB\n        ],\n        userId: userId\n      })\n      doModalContainer.openModal(constants.SETTING_MENU_MODAL)\n    }\n\n    let onLatestClicked = () => {\n      doModalContainer.setInput({\n        match: match, /* for props to detect url path changes */\n        isLoading: false,\n        articleList: latestArticles,\n        prevClicked: () => doModalContainer.closeModal(),\n        itemClicked: () => doModalContainer.closeModal()\n      })\n      doModalContainer.openModal(constants.LATEST_PAGE_MODAL)\n    }\n    let markHubSeen = () => {\n      doRootPage.markLogSeen(myId)\n    }\n    let markFriendRead = () => {\n      doRootPage.markFriendListSeen(myId)\n    }\n\n    const hubPageId = getChildId(me, 'HUB_PAGE')\n    const boardPageId = getChildId(me, 'BOARD_PAGE')\n    const articlePageId = getChildId(me, 'ARTICLE_PAGE')\n    const profilePageId = getChildId(me, 'PROFILE_PAGE')\n    const friendListPageId = getChildId(me, 'FRIEND_LIST_PAGE')\n    const friendChatPageId = getChildId(me, 'FRIEND_CHAT_PAGE')\n\n    const createBoardId = getChildId(me, 'CREATE_BOARD_MODAL')\n    const manageBoardId = getChildId(me, 'MANAGE_BOARD_MODAL')\n    const manageBoardMemberId = getChildId(me, 'MANAGE_BOARD_MEMBER_MODAL')\n    const inviteToBoardId = getChildId(me, 'INVITE_TO_BOARD_MODAL')\n    const showOpLogId = getChildId(me, 'SHOW_OP_LOG_MODAL')\n\n    let modalIdMap = {\n      'CREATE_BOARD_MODAL': createBoardId,\n      'MANAGE_BOARD_MODAL': manageBoardId,\n      'SHOW_OP_LOG_MODAL': showOpLogId,\n      'MANAGE_BOARD_MEMBER_MODAL': manageBoardMemberId,\n      'INVITE_TO_BOARD_MODAL': inviteToBoardId\n    }\n\n    let MAIN_PAGE = null\n\n    switch (myComponent) {\n      case 'HubPage':\n        MAIN_PAGE = (<HubPage {...this.props} markSeen={markHubSeen} myId={hubPageId} />)\n        break\n      case 'BoardPage':\n        MAIN_PAGE = (<BoardPage {...this.props} markSeen={this.checkMarkHubSeen} myId={boardPageId} />)\n        break\n      case 'ArticlePage':\n        MAIN_PAGE = (<ArticlePage {...this.props} myId={articlePageId} />)\n        break\n      case 'FriendListPage':\n        MAIN_PAGE = (<FriendListPage {...this.props} markSeen={markFriendRead} myId={friendListPageId} />)\n        break\n      case 'FriendChatPage':\n        MAIN_PAGE = (<FriendChatPage {...this.props} markSeen={this.checkMarkFriendListSeen} myId={friendChatPageId} />)\n        break\n      default:\n        MAIN_PAGE = null\n    }\n\n    let isChatRoom = myComponent === 'FriendChatPage'\n\n    return (\n      <div className={styles['root']}>\n        <ProfilePage\n          myId={profilePageId}\n          userId={userId}\n          userName={userName}\n          userImg={userImg}\n          openNameCard={openNameCard}\n          onSettingClicked={onSettingClicked}\n          onLatestClicked={onLatestClicked}\n          isChatRoom={isChatRoom}\n          hasUnread={latestHasUnread} />\n        <Navigator {...this.props}\n          hubHasUnread={hubHasUnread}\n          friendListHasUnread={friendListHasUnread}\n          onHubClicked={markHubSeen}\n          isChatRoom={isChatRoom}\n          onFriendClicked={markFriendRead} />\n        { MAIN_PAGE }\n        <ModalContainer className={styles['overlay']} idMap={modalIdMap} />\n        <ToastContainer hideProgressBar />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    doRootPage: bindActionCreators(doRootPage, dispatch),\n    doModalContainer: bindActionCreators(doModalContainer, dispatch)\n  }\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(injectIntl(RootPage)))\n","import thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport api from './api'\n\nconst logger = createLogger({\n  level: 'info',\n  collapsed: false\n})\n\nconst middlerwares = [thunk, api, logger]\n\nexport default middlerwares\n","import React from 'react'\nimport { createDevTools } from 'redux-devtools'\nimport LogMonitor from 'redux-devtools-log-monitor'\nimport DockMonitor from 'redux-devtools-dock-monitor'\n\nexport default createDevTools(\n  <DockMonitor toggleVisibilityKey='ctrl-h'\n    changePositionKey='ctrl-w'>\n    <LogMonitor />\n  </DockMonitor>\n)\n","import { createStore,\n  applyMiddleware,\n  combineReducers,\n  compose } from 'redux'\n\nimport middleware from '../middleware/'\nimport DevTools from '../DevTools'\n\nimport app from './App'\nimport rootPage from './RootPage'\nimport hubPage from './HubPage'\nimport boardPage from './BoardPage'\nimport articlePage from './ArticlePage'\nimport profilePage from './ProfilePage'\nimport friendListPage from './FriendListPage'\nimport friendChatPage from './FriendChatPage'\nimport modal from './ModalContainer'\nimport createBoardModal from './CreateBoardModal'\nimport manageBoardModal from './ManageBoardModal'\nimport manageBoardMemberModal from './ManageBoardMemberModal'\nimport inviteToBoardModal from './InviteToBoardModal'\nimport nameCardModal from './NameCardModal'\nimport showOpLogModal from './ShowOpLogModal'\n\nexport const reducers = combineReducers({\n  app,\n  modal,\n  createBoardModal,\n  manageBoardModal,\n  manageBoardMemberModal,\n  inviteToBoardModal,\n  nameCardModal,\n  showOpLogModal,\n  rootPage,\n  hubPage,\n  boardPage,\n  articlePage,\n  profilePage,\n  friendListPage,\n  friendChatPage\n})\n\nconst enhancer = compose(\n  applyMiddleware(...middleware),\n  DevTools.instrument()\n)\n\nconst configure = (initialState) => {\n  const store = createStore(reducers, initialState, enhancer)\n\n  if (module.hot) {\n    module.hot.accept('./', () => {\n      const nextReducer = require('./').default\n\n      store.replaceReducer(nextReducer)\n    })\n  }\n\n  return store\n}\n\nexport default configure\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import 'react-hot-loader/patch'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { AppContainer } from 'react-hot-loader'\nimport { IntlProvider } from 'react-intl'\n\nimport Routes from './Routes'\nimport createStore from './reducers'\nimport registerServiceWorker from './registerServiceWorker'\nimport { setup as setupNotification } from './utils/notification'\nimport { language, messages } from './utils/utils'\nimport DevTools from './DevTools'\n// import ReactGA from 'react-ga'\n\nimport 'normalize.css/normalize.css'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\n\nimport Empty from './components/Empty'\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faMinus,\n  faSearch,\n  faArrowLeft,\n  faArrowCircleLeft,\n  faCheck,\n  faCaretRight,\n  faEllipsisH,\n  faPen } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faMinus)\nlibrary.add(faSearch)\nlibrary.add(faArrowLeft)\nlibrary.add(faArrowCircleLeft)\nlibrary.add(faCheck)\nlibrary.add(faCaretRight)\nlibrary.add(faEllipsisH)\nlibrary.add(faPen)\n\nconst store = createStore()\n\nconst render = Component => {\n  ReactDOM.render(\n    <AppContainer>\n      <IntlProvider locale={language} messages={messages}>\n        <Provider store={store}>\n          <div>\n            <Component />\n            {renderDevTools()}\n          </div>\n        </Provider>\n      </IntlProvider>\n    </AppContainer>,\n    document.getElementById('root')\n  )\n}\n\nconst renderDevTools = () => <Empty /> || process.env.NODE_ENV === 'production' ? (<Empty />) : (<DevTools />)\n\nrender(Routes)\nregisterServiceWorker()\nsetupNotification()\n\nif (module.hot) {\n  module.hot.accept('./Routes', () => {\n    render(Routes)\n  })\n}\n","import React from 'react'\nimport { PTTAI_URL_BASE } from './config'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n\nimport RootPage from './containers/RootPage'\n\nexport default () => (\n  <Router basename={`${PTTAI_URL_BASE}`}>\n    <Switch>\n      <Route exact path={`/hub`} render={(props) => <RootPage {...props} myComponent={'HubPage'} />} />\n      <Route exact path={`/board/:boardId`} render={(props) => <RootPage {...props} myComponent={'BoardPage'} />} />\n      <Route exact path={`/board/:boardId/article/:articleId`} render={(props) => <RootPage {...props} myComponent={'ArticlePage'} />} />\n      <Route exact path={`/friend`} render={(props) => <RootPage {...props} myComponent={'FriendListPage'} />} />\n      <Route exact path={`/friend/:friendId/chat/:chatId`} render={(props) => <RootPage {...props} myComponent={'FriendChatPage'} />} />\n      <Redirect exact from={`/`} to={`/friend`} />\n    </Switch>\n  </Router>\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HubComponent_root__1IMqI\",\"add-icon-container\":\"HubComponent_add-icon-container__2bKTl\",\"add-icon-subcontainer\":\"HubComponent_add-icon-subcontainer__2Edn5\",\"add-icon\":\"HubComponent_add-icon__21K-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FriendComponent_root__2JFz3\",\"add-icon-container\":\"FriendComponent_add-icon-container__1e-d-\",\"add-icon-subcontainer\":\"FriendComponent_add-icon-subcontainer__UFWcB\",\"add-icon\":\"FriendComponent_add-icon__JzvZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BoardActionModal_root__3Vofl\",\"action-section\":\"BoardActionModal_action-section__ENs5S\",\"join-board-button\":\"BoardActionModal_join-board-button__1_EfN\",\"create-board-button\":\"BoardActionModal_create-board-button__2wIBq\",\"close-button\":\"BoardActionModal_close-button__3jTQ4\",\"overlay\":\"BoardActionModal_overlay__3o1du\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropdownComponent_root__2h-wX\",\"dd-wrapper\":\"DropdownComponent_dd-wrapper__2KtMz\",\"dd-header\":\"DropdownComponent_dd-header__3P9e-\",\"dd-list\":\"DropdownComponent_dd-list__30HTy\",\"dd-list-item-wrapper\":\"DropdownComponent_dd-list-item-wrapper__UpFO7\",\"dd-list-item\":\"DropdownComponent_dd-list-item__3LL2t\"};"],"sourceRoot":""}